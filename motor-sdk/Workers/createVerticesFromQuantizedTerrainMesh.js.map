{"version":3,"file":"createVerticesFromQuantizedTerrainMesh.js","sources":["../../../../Source/Extension/Source/Planish/BorderInfo.js","../../../../Source/WorkersES6/createVerticesFromQuantizedTerrainMesh.js"],"sourcesContent":["import Cartesian2 from \"../../../Core/Cartesian2.js\";\nimport Matrix4 from \"../../../Core/Matrix4.js\";\nimport defaultValue from \"../../../Core/defaultValue.js\";\nimport Cartesian3 from \"../../../Core/Cartesian3.js\";\nimport AxisAlignedBoundingBox from \"../../../Core/AxisAlignedBoundingBox.js\";\nimport PolygonPipeline from \"../../../Core/PolygonPipeline.js\";\nimport WindingOrder from \"../../../Core/WindingOrder.js\";\n\nclass BorderInfo {\n    /**\n     * create a BorderInfo\n     */\n    constructor() {\n        this._modelMatrix = Matrix4.IDENTITY.clone();\n        this._pt2DAry = [];\n        this._under = 0;\n        this._height = 0;\n    }\n\n    static clone(borderInfo) {\n        const modelMatrix = Matrix4.fromArray(borderInfo._modelMatrix);\n        const under = borderInfo._under;\n        const height = borderInfo._height;\n\n        const pt2DAry = [];\n        borderInfo._pt2DAry.forEach((pt2D) => {\n            pt2DAry.push(new Cartesian2(pt2D.x, pt2D.y));\n        });\n\n        const retBorderInfo = new BorderInfo();\n        retBorderInfo._under = under;\n        retBorderInfo._height = height;\n        retBorderInfo._pt2DAry = pt2DAry;\n        retBorderInfo._modelMatrix = modelMatrix;\n        return retBorderInfo;\n    }\n\n    /**\n     * get abb box\n     * @returns {AxisAlignedBoundingBox}\n     */\n    getBoundingbox() {\n        const cornAry = [];\n        this.getPtAry(true, cornAry);\n        this.getPtAry(false, cornAry);\n        return AxisAlignedBoundingBox.fromPoints(cornAry);\n    }\n\n    /**\n     * get triangles\n     * @param {Cartesian3[]} ptAry pt out Ary\n     * @param {Number[]} indexAry indice out Ary\n     */\n    createTriangle(ptAry, indexAry) {\n        let startIndex = ptAry.length;\n        this.getPtAry(true, ptAry);\n        let colLen = ptAry.length - startIndex;\n        this.getPtAry(false, ptAry);\n\n        let nextIndex = 0;\n        for (let index = 0; index < colLen; index++) {\n            if (index === colLen - 1) {\n                nextIndex = 0;\n            } else {\n                nextIndex = index + 1;\n            }\n\n            indexAry.push(startIndex + index);\n            indexAry.push(startIndex + nextIndex);\n            indexAry.push(startIndex + colLen + nextIndex);\n\n            indexAry.push(startIndex + index);\n            indexAry.push(startIndex + colLen + nextIndex);\n            indexAry.push(startIndex + colLen + index);\n        }\n\n        const orIndexAry = PolygonPipeline.triangulate(this._pt2DAry);\n        indexAry.push(...orIndexAry.map((index) => { return startIndex + colLen + index; }));\n        indexAry.push(...orIndexAry.reverse().map((index) => { return startIndex + index; }));\n    }\n\n    /**\n     * @type {Matrix4}\n     */\n    set modelMatrix(value) {\n        this._modelMatrix = value.clone();\n    }\n\n    get modelMatrix() {\n        return this._modelMatrix;\n    }\n\n    /**\n     * @type {Cartesian2[]}\n     */\n    set pt2DAry(value) {\n        this._pt2DAry = defaultValue(value, []);\n        if (this._pt2DAry.length > 2) {\n            if (PolygonPipeline.computeWindingOrder2D(this._pt2DAry) === WindingOrder.CLOCKWISE) {\n                this._pt2DAry.reverse();\n            }\n        }\n    }\n\n    get pt2DAry() {\n        return this._pt2DAry;\n    }\n\n    /**\n     * @type {Number}\n     */\n    set under(value) {\n        this._under = value;\n    }\n\n    get under() {\n        return this._under;\n    }\n\n    /**\n     * @type {Number}\n     */\n    set height(value) {\n        this._height = value;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    /**\n     * get pt ary for 3d\n     * @param {Boolean} bUnder is under pt\n     * @param {Cartesian3[]} ptAry pt out Ary\n     */\n    getPtAry(bUnder, ptAry) {\n        this._pt2DAry.forEach(pt2D => {\n            let pt3D = new Cartesian3(pt2D.x, pt2D.y, this._under);\n            if (!bUnder) {\n                pt3D.z += this._height;\n            }\n\n            Matrix4.multiplyByPoint(this._modelMatrix, pt3D, pt3D);\n            ptAry.push(pt3D);\n        });\n    }\n}\n\nexport default BorderInfo;\n","import AttributeCompression from '../Core/AttributeCompression.js';\nimport AxisAlignedBoundingBox from '../Core/AxisAlignedBoundingBox.js';\nimport BoundingSphere from '../Core/BoundingSphere.js';\nimport Cartesian2 from '../Core/Cartesian2.js';\nimport Cartesian3 from '../Core/Cartesian3.js';\nimport Cartographic from '../Core/Cartographic.js';\nimport defined from '../Core/defined.js';\nimport Ellipsoid from '../Core/Ellipsoid.js';\nimport EllipsoidalOccluder from '../Core/EllipsoidalOccluder.js';\nimport IndexDatatype from '../Core/IndexDatatype.js';\nimport CesiumMath from '../Core/Math.js';\nimport Matrix4 from '../Core/Matrix4.js';\nimport OrientedBoundingBox from '../Core/OrientedBoundingBox.js';\nimport Rectangle from '../Core/Rectangle.js';\nimport TerrainEncoding from '../Core/TerrainEncoding.js';\nimport TerrainProvider from '../Core/TerrainProvider.js';\nimport Transforms from '../Core/Transforms.js';\nimport WebMercatorProjection from '../Core/WebMercatorProjection.js';\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\nimport materem from '../ThirdParty/Workers/materem.js';\nimport CreatePhysicalArray from '../Extension/Source/Worker/CreatePhysicalArray.js';\nimport EmWrapperManager,{emMod} from '../Extension/Source/Worker/EmWrapperManager.js';\nimport EmLBDeal from '../Extension/Source/Worker/EmLBDeal.js';\nimport BorderInfo from '../Extension/Source/Planish/BorderInfo.js';\nimport defaultValue from '../Core/defaultValue.js';\n\nvar maxShort = 32767;\n\nvar cartesian3Scratch = new Cartesian3();\nvar scratchMinimum = new Cartesian3();\nvar scratchMaximum = new Cartesian3();\nvar cartographicScratch = new Cartographic();\nvar toPack = new Cartesian2();\nvar scratchNormal = new Cartesian3();\nvar scratchToENU = new Matrix4();\nvar scratchFromENU = new Matrix4();\nvar lbSpaMgr;\n\nfunction createVertices(parameters, transferableObjects) {\n    var quantizedVertices = parameters.quantizedVertices;\n    var quantizedVertexCount = quantizedVertices.length / 3;\n    if (quantizedVertexCount < 3) {\n        return {\n            holeAllData: true,\n        }\n    }\n\n    var octEncodedNormals = parameters.octEncodedNormals;\n    var edgeVertexCount = parameters.westIndices.length + parameters.eastIndices.length +\n                          parameters.southIndices.length + parameters.northIndices.length;\n    var includeWebMercatorT = parameters.includeWebMercatorT;\n    var holeAry = parameters.holeAry;\n    var hasHole = defined(holeAry) && holeAry.length > 0;\n    var tileInfo = parameters.tileInfo;\n\n    var rectangle = Rectangle.clone(parameters.rectangle);\n    var west = rectangle.west;\n    var south = rectangle.south;\n    var east = rectangle.east;\n    var north = rectangle.north;\n\n    var ellipsoid = Ellipsoid.clone(parameters.ellipsoid);\n\n    var exaggeration = parameters.exaggeration;\n    var minimumHeight = parameters.minimumHeight * exaggeration;\n    var maximumHeight = parameters.maximumHeight * exaggeration;\n\n    var center = parameters.relativeToCenter;\n    var fromENU;\n    if (parameters.isPlaneMode) {\n        fromENU = Matrix4.fromTranslation(center);\n    } else {\n        fromENU = Transforms.eastNorthUpToFixedFrame(center, ellipsoid);\n    }\n    var toENU = Matrix4.inverseTransformation(fromENU, new Matrix4());\n\n    var southMercatorY;\n    var oneOverMercatorHeight;\n    if (includeWebMercatorT) {\n        southMercatorY = WebMercatorProjection.geodeticLatitudeToMercatorAngle(south);\n        oneOverMercatorHeight = 1.0 / (WebMercatorProjection.geodeticLatitudeToMercatorAngle(north) - southMercatorY);\n    }\n\n    var uBuffer = quantizedVertices.subarray(0, quantizedVertexCount);\n    var vBuffer = quantizedVertices.subarray(quantizedVertexCount, 2 * quantizedVertexCount);\n    var heightBuffer = quantizedVertices.subarray(quantizedVertexCount * 2, 3 * quantizedVertexCount);\n    var hasVertexNormals = defined(octEncodedNormals);\n\n    var uvs = new Array(quantizedVertexCount);\n    var heights = new Array(quantizedVertexCount);\n    var positions = new Array(quantizedVertexCount);\n    var webMercatorTs = includeWebMercatorT ? new Array(quantizedVertexCount) : [];\n    var normals;\n    if (hasVertexNormals) {\n        normals = [...octEncodedNormals];\n    }\n    var indexes = [...parameters.indices];\n\n    var minimum = scratchMinimum;\n    minimum.x = Number.POSITIVE_INFINITY;\n    minimum.y = Number.POSITIVE_INFINITY;\n    minimum.z = Number.POSITIVE_INFINITY;\n\n    var maximum = scratchMaximum;\n    maximum.x = Number.NEGATIVE_INFINITY;\n    maximum.y = Number.NEGATIVE_INFINITY;\n    maximum.z = Number.NEGATIVE_INFINITY;\n\n    var minLongitude = Number.POSITIVE_INFINITY;\n    var maxLongitude = Number.NEGATIVE_INFINITY;\n    var minLatitude = Number.POSITIVE_INFINITY;\n    var maxLatitude = Number.NEGATIVE_INFINITY;\n\n    var emLBDeal;\n    var isDefaultTer = false;\n    if (parameters.isPlaneMode) {\n        var projectionString = parameters.projectionString;\n        var dCenX = parameters.dCenX;\n        var dCenY = parameters.dCenY;\n        var dCenZ = parameters.dCenZ;\n\n        emLBDeal = new EmLBDeal();\n        var isInit = emLBDeal.init(projectionString, new Cartesian3(dCenX, dCenY, dCenZ));\n        if (!isInit) {\n            emLBDeal.destroy();\n            emLBDeal = undefined;\n        }\n        isDefaultTer = parameters.isDefaultTer;\n    }\n\n    for (var i = 0; i < quantizedVertexCount; ++i) {\n        var rawU = uBuffer[i];\n        var rawV = vBuffer[i];\n\n        var u = rawU / maxShort;\n        var v = rawV / maxShort;\n        var height = CesiumMath.lerp(minimumHeight, maximumHeight, heightBuffer[i] / maxShort);\n\n        cartographicScratch.longitude = CesiumMath.lerp(west, east, u);\n        cartographicScratch.latitude = CesiumMath.lerp(south, north, v);\n        cartographicScratch.height = height;\n\n        minLongitude = Math.min(cartographicScratch.longitude, minLongitude);\n        maxLongitude = Math.max(cartographicScratch.longitude, maxLongitude);\n        minLatitude = Math.min(cartographicScratch.latitude, minLatitude);\n        maxLatitude = Math.max(cartographicScratch.latitude, maxLatitude);\n\n        var position = ellipsoid.cartographicToCartesian(cartographicScratch);\n\n        if (defined(emLBDeal)) {\n            position = emLBDeal.computeCartesianToProj(position);\n            if (isDefaultTer) {\n                position.z = 0;\n            }\n        }\n\n        uvs[i] = new Cartesian2(u, v);\n        heights[i] = height;\n        positions[i] = position;\n\n        if (includeWebMercatorT) {\n            webMercatorTs[i] = (WebMercatorProjection.geodeticLatitudeToMercatorAngle(cartographicScratch.latitude) - southMercatorY) * oneOverMercatorHeight;\n        }\n\n        Matrix4.multiplyByPoint(toENU, position, cartesian3Scratch);\n\n        Cartesian3.minimumByComponent(cartesian3Scratch, minimum, minimum);\n        Cartesian3.maximumByComponent(cartesian3Scratch, maximum, maximum);\n    }\n\n    var westIndicesSouthToNorth = copyAndSort(parameters.westIndices, function (a, b) {\n        return uvs[a].y - uvs[b].y;\n    });\n    var eastIndicesNorthToSouth = copyAndSort(parameters.eastIndices, function (a, b) {\n        return uvs[b].y - uvs[a].y;\n    });\n    var southIndicesEastToWest = copyAndSort(parameters.southIndices, function (a, b) {\n        return uvs[b].x - uvs[a].x;\n    });\n    var northIndicesWestToEast = copyAndSort(parameters.northIndices, function (a, b) {\n        return uvs[a].x - uvs[b].x;\n    });\n\n    var percentage = 0.0001;\n    var lonOffset = (maxLongitude - minLongitude) * percentage;\n    var latOffset = (maxLatitude - minLatitude) * percentage;\n    var westLongitudeOffset = -lonOffset;\n    var westLatitudeOffset = 0.0;\n    var eastLongitudeOffset = lonOffset;\n    var eastLatitudeOffset = 0.0;\n    var northLongitudeOffset = 0.0;\n    var northLatitudeOffset = latOffset;\n    var southLongitudeOffset = 0.0;\n    var southLatitudeOffset = -latOffset;\n\n    // Add skirts pt\n    var vertexCountWithoutSkirts = positions.length;\n    var hMin = minimumHeight;\n    hMin = Math.min(hMin, addSkirt(westIndicesSouthToNorth, positions, heights, uvs, normals, webMercatorTs, ellipsoid, rectangle, parameters.westSkirtHeight, westLongitudeOffset, westLatitudeOffset, emLBDeal));\n    hMin = Math.min(hMin, addSkirt(southIndicesEastToWest, positions, heights, uvs, normals, webMercatorTs, ellipsoid, rectangle, parameters.southSkirtHeight, southLongitudeOffset, southLatitudeOffset, emLBDeal));\n    hMin = Math.min(hMin, addSkirt(eastIndicesNorthToSouth, positions, heights, uvs, normals, webMercatorTs, ellipsoid, rectangle, parameters.eastSkirtHeight, eastLongitudeOffset, eastLatitudeOffset, emLBDeal));\n    hMin = Math.min(hMin, addSkirt(northIndicesWestToEast, positions, heights, uvs, normals, webMercatorTs, ellipsoid, rectangle, parameters.northSkirtHeight, northLongitudeOffset, northLatitudeOffset, emLBDeal));\n\n    // Add skirts indexes\n    var indexCountWithoutSkirts = indexes.length;\n    var edgeTriangleIndexLength = Math.max(0, (edgeVertexCount - 4) * 2) * 3;\n    for (var index = 0; index < edgeTriangleIndexLength; index++) {\n        indexes.push(0);\n    }\n    TerrainProvider.addSkirtIndices(westIndicesSouthToNorth, southIndicesEastToWest, eastIndicesNorthToSouth, northIndicesWestToEast, quantizedVertexCount, indexes, indexCountWithoutSkirts);\n\n    var orientedBoundingBox;\n    var boundingSphere;\n    if (exaggeration !== 1.0) {\n        // Bounding volumes need to be recomputed since the tile payload assumes no exaggeration.\n        boundingSphere = BoundingSphere.fromPoints(positions);\n        orientedBoundingBox = OrientedBoundingBox.fromRectangle(rectangle, minimumHeight, maximumHeight, ellipsoid);\n    }\n\n    var occludeePointInScaledSpace;\n    if (exaggeration !== 1.0 || minimumHeight < 0.0) {\n        // Horizon culling point needs to be recomputed since the tile payload assumes no exaggeration.\n        var occluder = new EllipsoidalOccluder(ellipsoid);\n        occludeePointInScaledSpace = occluder.computeHorizonCullingPointPossiblyUnderEllipsoid(center, positions, minimumHeight);\n    }\n\n    const downloadAry = [];\n    var downloadTriangleByBlobFunc = (fileName, tiangle) => {\n        let pSerialWrite = new emMod.LBSpaSerial();\n        pSerialWrite.WriteTriangle(tiangle);\n        let cSerialArray = new Uint8Array(pSerialWrite.GetBufferSize());\n        for (let i = 0; i < cSerialArray.length; ++i)\n        {\n            cSerialArray[i] = pSerialWrite.GetBufferVal(i);\n        }\n        emMod.destroy(pSerialWrite);\n        downloadAry.push({serial: cSerialArray, fileName: fileName});\n    };\n\n    //deal hole\n    var createBodyFunc = (ptAry, indexAry, inIndexSectIndex) => {\n        let indexSectIndex = defaultValue(inIndexSectIndex, 0);\n\n        let triangle = new emMod.LBSpaTriangle();\n        triangle.SetPtNum(ptAry.length, false, false);\n        for (let index = 0; index < ptAry.length; index++) {\n            const pt = ptAry[index];\n            triangle.SetPtVal(index, pt.x, pt.y, pt.z);\n        }\n        triangle.SetIndexNum(indexAry.length);\n        for (let index = 0; index < indexAry.length; index++) {\n            triangle.SetIndexVal(index, indexAry[index]);\n        }\n\n        // if (tileInfo.x === 54358 && tileInfo.y === 10815 && tileInfo.level === 15) {\n        //     if (indexSectIndex > 0) {\n        //         downloadTriangleByBlobFunc(\"ter2.tri\", triangle);\n        //     } else {\n        //         downloadTriangleByBlobFunc(\"hole2.tri\", triangle);\n        //     }\n        // }\n\n        let pBody = new emMod.LBSpaBody();\n        pBody.Init(triangle, indexSectIndex);\n        emMod.destroy(triangle);\n        return pBody;\n    };\n\n    var getBodyTriangle = (pBody) => {\n        positions.length = 0;\n        indexes.length = 0;\n        uvs.length = 0;\n        heights.length = 0;\n        if (includeWebMercatorT) {\n            webMercatorTs.length = 0;\n        }\n        if (hasVertexNormals) {\n            normals.length = 0;\n            hasVertexNormals = false;//force\n        }\n\n        let triangle = new emMod.LBSpaTriangle();\n        let skirtInfo = new emMod.LBSpaSkirtInfo();\n        pBody.GetTriangle(triangle, skirtInfo);\n\n        let iPtNum = triangle.GetPtNum();\n        let iIndexNum = triangle.GetIndexNum();\n        if (iPtNum < 3 || iIndexNum < 3) {\n            emMod.destroy(triangle);\n            emMod.destroy(skirtInfo);\n            return;\n        }\n\n        vertexCountWithoutSkirts = skirtInfo.iPtSectIndex;\n        indexCountWithoutSkirts = skirtInfo.iIndexSectIndex;\n\n        for (let index = 0; index < iPtNum; index++)\n        {\n            let cPt = triangle.GetPt(index);\n            let pos = new Cartesian3(cPt.x, cPt.y, cPt.z);\n            positions.push(pos);\n\n            if (defined(emLBDeal)) {\n                emLBDeal.computeProjToDegree(pos, true, cartesian3Scratch);\n                Cartographic.fromDegrees(cartesian3Scratch.x, cartesian3Scratch.y, cartesian3Scratch.z, cartographicScratch);\n            } else {\n                ellipsoid.cartesianToCartographic(pos, cartographicScratch);\n            }\n\n            let uv = new Cartesian2((cartographicScratch.longitude - west)/(east - west), (cartographicScratch.latitude - south)/(north - south));\n            uvs.push(uv);\n\n            heights.push(cartographicScratch.height);\n            if (includeWebMercatorT) {\n                webMercatorTs.push((WebMercatorProjection.geodeticLatitudeToMercatorAngle(cartographicScratch.latitude) - southMercatorY) * oneOverMercatorHeight);\n            }\n        }\n\n        for (let index = 0; index < iIndexNum; index++) {\n            indexes.push(triangle.GetIndex(index));\n        }\n\n        emMod.destroy(triangle);\n        emMod.destroy(skirtInfo);\n    };\n\n    var substractHoleAryFunc = () => {\n        let terBody;\n        let haveDiff = false;\n        const terBox = AxisAlignedBoundingBox.fromPoints(positions);\n        for (let index = 0; index < holeAry.length; index++) {\n            const borderInfo = BorderInfo.clone(holeAry[index]);\n\n            let ptAry = [];\n            let indexAry = [];\n            borderInfo.createTriangle(ptAry, indexAry);\n            const borderBox = AxisAlignedBoundingBox.fromPoints(ptAry);\n            if (!terBox.isOverlap(borderBox)) {\n                continue;\n            }\n\n            if (terBody === undefined) {\n                terBody = createBodyFunc(positions, indexes, indexCountWithoutSkirts);\n            }\n            let holeBody = createBodyFunc(ptAry, indexAry);\n            if (!terBody.CheckReference(holeBody)) {\n                emMod.destroy(holeBody);\n                continue;\n            }\n\n            if (!terBody.ComputeDifference(holeBody)) {\n                emMod.destroy(holeBody);\n                continue;\n            }\n\n            emMod.destroy(holeBody);\n            haveDiff = true;\n        }\n\n        if (haveDiff) {\n            getBodyTriangle(terBody);\n        }\n        if (terBody !== undefined) {\n            emMod.destroy(terBody);\n        }\n    };\n\n    if (hasHole) {\n        substractHoleAryFunc();\n\n        if (positions.length < 3) {\n            return {\n                holeAllData: true,\n            }\n        }\n    }\n\n    var aaBox = new AxisAlignedBoundingBox(minimum, maximum, center);\n    var encoding = new TerrainEncoding(aaBox, hMin, maximumHeight, fromENU, hasVertexNormals, includeWebMercatorT);\n    var vertexStride = encoding.getStride();\n    var size = positions.length * vertexStride;\n    var vertexBuffer = new Float32Array(size);\n    var bufferIndex = 0;\n    for (var j = 0; j < positions.length; ++j) {\n        if (hasVertexNormals) {\n            var n = j * 2.0;\n            toPack.x = normals[n];\n            toPack.y = normals[n + 1];\n\n            if (exaggeration !== 1.0) {\n                var normal = AttributeCompression.octDecode(toPack.x, toPack.y, scratchNormal);\n                var fromENUNormal = Transforms.eastNorthUpToFixedFrame(positions[j], ellipsoid, scratchFromENU);\n                var toENUNormal = Matrix4.inverseTransformation(fromENUNormal, scratchToENU);\n\n                Matrix4.multiplyByPointAsVector(toENUNormal, normal, normal);\n                normal.z *= exaggeration;\n                Cartesian3.normalize(normal, normal);\n\n                Matrix4.multiplyByPointAsVector(fromENUNormal, normal, normal);\n                Cartesian3.normalize(normal, normal);\n\n                AttributeCompression.octEncode(normal, toPack);\n            }\n        }\n\n        bufferIndex = encoding.encode(vertexBuffer, bufferIndex, positions[j], uvs[j], heights[j], toPack, webMercatorTs[j]);\n    }\n\n    var indexBuffer = IndexDatatype.createTypedArray(positions.length, indexes.length);\n    indexBuffer.set(indexes, 0);\n\n    var physicalArray = CreatePhysicalArray.createPhysicalArrayFromTerrain(emMod, lbSpaMgr, parameters.relativeToCenter, positions, indexes);\n    transferableObjects.push(vertexBuffer.buffer, indexBuffer.buffer, physicalArray.buffer);\n\n    if (defined(emLBDeal)) {\n        emLBDeal.destroy();\n    }\n\n    return {\n        vertices: vertexBuffer.buffer,\n        indices: indexBuffer.buffer,\n        vertexStride: vertexStride,\n        center: center,\n        minimumHeight: minimumHeight,\n        maximumHeight: maximumHeight,\n        boundingSphere: boundingSphere,\n        orientedBoundingBox: orientedBoundingBox,\n        occludeePointInScaledSpace: occludeePointInScaledSpace,\n        encoding: encoding,\n        indexCountWithoutSkirts: indexCountWithoutSkirts,\n        vertexCountWithoutSkirts: vertexCountWithoutSkirts,\n        vertexCount: positions.length,\n        physicalArray: physicalArray,\n        downloadAry: downloadAry,\n    };\n}\n\nfunction addSkirt(edgeVertices, positions, heights, uvs, normals, webMercatorTs, ellipsoid, rectangle, skirtLength, longitudeOffset, latitudeOffset, emLBDeal) {\n    var hasVertexNormals = defined(normals);\n    var hasWebMercatorT = webMercatorTs.length > 0;\n    var hMin = Number.POSITIVE_INFINITY;\n\n    var north = rectangle.north;\n    var south = rectangle.south;\n    var east = rectangle.east;\n    var west = rectangle.west;\n\n    if (east < west) {\n        east += CesiumMath.TWO_PI;\n    }\n\n    var length = edgeVertices.length;\n    for (var i = 0; i < length; ++i) {\n        var index = edgeVertices[i];\n        var h = heights[index];\n        var uv = uvs[index];\n\n        cartographicScratch.longitude = CesiumMath.lerp(west, east, uv.x) + longitudeOffset;\n        cartographicScratch.latitude = CesiumMath.lerp(south, north, uv.y) + latitudeOffset;\n        cartographicScratch.height = h - skirtLength;\n\n        var position = ellipsoid.cartographicToCartesian(cartographicScratch, cartesian3Scratch);\n        if (defined(emLBDeal)) {\n            position = emLBDeal.computeCartesianToProj(position);\n        }\n\n        positions.push(position);\n        uvs.push(uv);\n        heights.push(cartographicScratch.height);\n        if (hasVertexNormals) {\n            var n = index * 2.0;\n            normals.push(normals[n]);\n            normals.push(normals[n + 1]);\n        }\n\n        if (hasWebMercatorT) {\n            var webMercatorT = webMercatorTs[index];\n            webMercatorTs.push(webMercatorT);\n        }\n\n        hMin = Math.min(hMin, cartographicScratch.height);\n    }\n\n    return hMin;\n}\n\nfunction copyAndSort(typedArray, comparator) {\n    var copy;\n    if (typeof typedArray.slice === 'function') {\n        copy = typedArray.slice();\n        if (typeof copy.sort !== 'function') {\n            // Sliced typed array isn't sortable, so we can't use it.\n            copy = undefined;\n        }\n    }\n\n    if (!defined(copy)) {\n        copy = Array.prototype.slice.call(typedArray);\n    }\n\n    copy.sort(comparator);\n\n    return copy;\n}\n\nfunction createVerticesFromQuantizedTerrainMesh(event) {\n    var data = event.data;\n    var wasmConfig = data.webAssemblyConfig;\n    if (defined(wasmConfig)) {\n        EmWrapperManager.initWebAssembly(wasmConfig.wasmBinaryFileES6).then(function () {\n            lbSpaMgr = new emMod.LBSpaMgr();\n            self.onmessage = createTaskProcessorWorker(createVertices);\n            self.postMessage(true);\n        });\n    }\n}\n\nexport default createVerticesFromQuantizedTerrainMesh;\n"],"names":["Matrix4","Cartesian2","AxisAlignedBoundingBox","PolygonPipeline","defaultValue","WindingOrder","Cartesian3","Cartographic","defined","Rectangle","Ellipsoid","Transforms","WebMercatorProjection","EmLBDeal","CesiumMath","TerrainProvider","BoundingSphere","OrientedBoundingBox","EllipsoidalOccluder","emMod","TerrainEncoding","AttributeCompression","IndexDatatype","CreatePhysicalArray","EmWrapperManager"],"mappings":"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"}