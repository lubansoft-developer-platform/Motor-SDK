define(["./when-45f3d25d","./Check-34538dad","./Cartesian3-e69091b9","./Cartesian2-7a44370a","./BoundingSphere-bacc5cb6","./Matrix4-c65e6a1b","./RuntimeError-86da6af2","./Rectangle-c7d55cfa","./WebGLConstants-3660bc8f","./ComponentDatatype-86703c58","./GeometryAttribute-4777d9f4","./PrimitiveType-30fa6f85","./Transforms-68229cf3","./GeometryAttributes-9d45f9e2","./IndexDatatype-e52361bd","./IntersectionTests-e782669d","./Plane-18e7e6e4","./VertexFormat-a00562ee","./EllipsoidTangentPlane-c9b5e9c5","./EllipsoidRhumbLine-4bc7760a","./PolygonPipeline-d8c5b0db","./EllipsoidGeodesic-1d7258d7","./PolylinePipeline-8d0912d9","./WallGeometryLibrary-200aabe4"],(function(e,t,i,a,r,n,o,s,l,m,d,p,u,f,c,h,g,y,v,C,w,b,x,E){"use strict";var A=new i.Cartesian3,_=new i.Cartesian3,F=new i.Cartesian3,D=new i.Cartesian3,L=new i.Cartesian3,H=new i.Cartesian3,P=new i.Cartesian3,k=new i.Cartesian3;function G(r){r=e.defaultValue(r,e.defaultValue.EMPTY_OBJECT);var n=r.positions,o=r.maximumHeights,s=r.minimumHeights;if(!e.defined(n))throw new t.DeveloperError("options.positions is required.");if(e.defined(o)&&o.length!==n.length)throw new t.DeveloperError("options.positions and options.maximumHeights must have the same length.");if(e.defined(s)&&s.length!==n.length)throw new t.DeveloperError("options.positions and options.minimumHeights must have the same length.");var l=e.defaultValue(r.vertexFormat,y.VertexFormat.DEFAULT),m=e.defaultValue(r.granularity,i.CesiumMath.RADIANS_PER_DEGREE),d=e.defaultValue(r.ellipsoid,a.Ellipsoid.WGS84);this._positions=n,this._minimumHeights=s,this._maximumHeights=o,this._vertexFormat=y.VertexFormat.clone(l),this._granularity=m,this._ellipsoid=a.Ellipsoid.clone(d),this._workerName="createWallGeometry";var p=1+n.length*i.Cartesian3.packedLength+2;e.defined(s)&&(p+=s.length),e.defined(o)&&(p+=o.length),this.packedLength=p+a.Ellipsoid.packedLength+y.VertexFormat.packedLength+1}G.pack=function(r,n,o){if(!e.defined(r))throw new t.DeveloperError("value is required");if(!e.defined(n))throw new t.DeveloperError("array is required");var s;o=e.defaultValue(o,0);var l=r._positions,m=l.length;for(n[o++]=m,s=0;s<m;++s,o+=i.Cartesian3.packedLength)i.Cartesian3.pack(l[s],n,o);var d=r._minimumHeights;if(m=e.defined(d)?d.length:0,n[o++]=m,e.defined(d))for(s=0;s<m;++s)n[o++]=d[s];var p=r._maximumHeights;if(m=e.defined(p)?p.length:0,n[o++]=m,e.defined(p))for(s=0;s<m;++s)n[o++]=p[s];return a.Ellipsoid.pack(r._ellipsoid,n,o),o+=a.Ellipsoid.packedLength,y.VertexFormat.pack(r._vertexFormat,n,o),o+=y.VertexFormat.packedLength,n[o]=r._granularity,n};var T=a.Ellipsoid.clone(a.Ellipsoid.UNIT_SPHERE),V=new y.VertexFormat,z={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:T,vertexFormat:V,granularity:void 0};function S(t,i){return e.defined(i)&&(t=G.unpack(t,i)),t._ellipsoid=a.Ellipsoid.clone(t._ellipsoid),G.createGeometry(t)}return G.unpack=function(r,n,o){if(!e.defined(r))throw new t.DeveloperError("array is required");var s;n=e.defaultValue(n,0);var l,m,d=r[n++],p=new Array(d);for(s=0;s<d;++s,n+=i.Cartesian3.packedLength)p[s]=i.Cartesian3.unpack(r,n);if(d=r[n++],d>0)for(l=new Array(d),s=0;s<d;++s)l[s]=r[n++];if(d=r[n++],d>0)for(m=new Array(d),s=0;s<d;++s)m[s]=r[n++];var u=a.Ellipsoid.unpack(r,n,T);n+=a.Ellipsoid.packedLength;var f=y.VertexFormat.unpack(r,n,V);n+=y.VertexFormat.packedLength;var c=r[n];return e.defined(o)?(o._positions=p,o._minimumHeights=l,o._maximumHeights=m,o._ellipsoid=a.Ellipsoid.clone(u,o._ellipsoid),o._vertexFormat=y.VertexFormat.clone(f,o._vertexFormat),o._granularity=c,o):(z.positions=p,z.minimumHeights=l,z.maximumHeights=m,z.granularity=c,new G(z))},G.fromConstantHeights=function(i){i=e.defaultValue(i,e.defaultValue.EMPTY_OBJECT);var a,r,n=i.positions;if(!e.defined(n))throw new t.DeveloperError("options.positions is required.");var o=i.minimumHeight,s=i.maximumHeight,l=e.defined(o),m=e.defined(s);if(l||m){var d=n.length;a=l?new Array(d):void 0,r=m?new Array(d):void 0;for(var p=0;p<d;++p)l&&(a[p]=o),m&&(r[p]=s)}var u={positions:n,maximumHeights:r,minimumHeights:a,ellipsoid:i.ellipsoid,vertexFormat:i.vertexFormat};return new G(u)},G.createGeometry=function(t){var a=t._positions,n=t._minimumHeights,o=t._maximumHeights,s=t._vertexFormat,l=t._granularity,u=t._ellipsoid,h=E.WallGeometryLibrary.computePositions(u,a,o,n,l,!0);if(e.defined(h)){var g,y=h.bottomPositions,v=h.topPositions,C=h.numCorners,w=v.length,b=2*w,x=s.position?new Float64Array(b):void 0,G=s.normal?new Float32Array(b):void 0,T=s.tangent?new Float32Array(b):void 0,V=s.bitangent?new Float32Array(b):void 0,z=s.st?new Float32Array(b/3*2):void 0,S=0,O=0,R=0,I=0,q=0,M=k,N=P,B=H,W=!0;w/=3;var U=0,J=1/(w-a.length+1);for(g=0;g<w;++g){var Y=3*g,Z=i.Cartesian3.fromArray(v,Y,A),j=i.Cartesian3.fromArray(y,Y,_);if(s.position&&(x[S++]=j.x,x[S++]=j.y,x[S++]=j.z,x[S++]=Z.x,x[S++]=Z.y,x[S++]=Z.z),s.st&&(z[q++]=U,z[q++]=0,z[q++]=U,z[q++]=1),s.normal||s.tangent||s.bitangent){var K,Q=i.Cartesian3.clone(i.Cartesian3.ZERO,L),X=u.scaleToGeodeticSurface(i.Cartesian3.fromArray(v,Y,_),_);if(g+1<w&&(K=u.scaleToGeodeticSurface(i.Cartesian3.fromArray(v,Y+3,F),F),Q=i.Cartesian3.fromArray(v,Y+3,L)),W){var $=i.Cartesian3.subtract(Q,Z,D),ee=i.Cartesian3.subtract(X,Z,A);M=i.Cartesian3.normalize(i.Cartesian3.cross(ee,$,M),M),W=!1}i.Cartesian3.equalsEpsilon(K,X,i.CesiumMath.EPSILON10)?W=!0:(U+=J,s.tangent&&(N=i.Cartesian3.normalize(i.Cartesian3.subtract(K,X,N),N)),s.bitangent&&(B=i.Cartesian3.normalize(i.Cartesian3.cross(M,N,B),B))),s.normal&&(G[O++]=M.x,G[O++]=M.y,G[O++]=M.z,G[O++]=M.x,G[O++]=M.y,G[O++]=M.z),s.tangent&&(T[I++]=N.x,T[I++]=N.y,T[I++]=N.z,T[I++]=N.x,T[I++]=N.y,T[I++]=N.z),s.bitangent&&(V[R++]=B.x,V[R++]=B.y,V[R++]=B.z,V[R++]=B.x,V[R++]=B.y,V[R++]=B.z)}}var te=new f.GeometryAttributes;s.position&&(te.position=new d.GeometryAttribute({componentDatatype:m.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:x})),s.normal&&(te.normal=new d.GeometryAttribute({componentDatatype:m.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:G})),s.tangent&&(te.tangent=new d.GeometryAttribute({componentDatatype:m.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:T})),s.bitangent&&(te.bitangent=new d.GeometryAttribute({componentDatatype:m.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:V})),s.st&&(te.st=new d.GeometryAttribute({componentDatatype:m.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:z}));var ie=b/3;b-=6*(C+1);var ae=c.IndexDatatype.createTypedArray(ie,b),re=0;for(g=0;g<ie-2;g+=2){var ne=g,oe=g+2,se=i.Cartesian3.fromArray(x,3*ne,A),le=i.Cartesian3.fromArray(x,3*oe,_);if(!i.Cartesian3.equalsEpsilon(se,le,i.CesiumMath.EPSILON10)){var me=g+1,de=g+3;ae[re++]=me,ae[re++]=ne,ae[re++]=de,ae[re++]=de,ae[re++]=ne,ae[re++]=oe}}return new d.Geometry({attributes:te,indices:ae,primitiveType:p.PrimitiveType.TRIANGLES,boundingSphere:new r.BoundingSphere.fromVertices(x)})}},S}));