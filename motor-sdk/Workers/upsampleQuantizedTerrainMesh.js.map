{"version":3,"file":"upsampleQuantizedTerrainMesh.js","sources":["../../../../Source/WorkersES6/upsampleQuantizedTerrainMesh.js"],"sourcesContent":["import AttributeCompression from '../Core/AttributeCompression.js';\nimport BoundingSphere from '../Core/BoundingSphere.js';\nimport Cartesian2 from '../Core/Cartesian2.js';\nimport Cartesian3 from '../Core/Cartesian3.js';\nimport Cartographic from '../Core/Cartographic.js';\nimport defined from '../Core/defined.js';\nimport Ellipsoid from '../Core/Ellipsoid.js';\nimport EllipsoidalOccluder from '../Core/EllipsoidalOccluder.js';\nimport IndexDatatype from '../Core/IndexDatatype.js';\nimport Intersections2D from '../Core/Intersections2D.js';\nimport CesiumMath from '../Core/Math.js';\nimport OrientedBoundingBox from '../Core/OrientedBoundingBox.js';\nimport Rectangle from '../Core/Rectangle.js';\nimport TerrainEncoding from '../Core/TerrainEncoding.js';\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\nimport EmLBDeal from '../Extension/Source/Worker/EmLBDeal.js';\nimport EmWrapperManager from '../Extension/Source/Worker/EmWrapperManager.js';\nimport Cartesian4 from '../Core/Cartesian4.js';\n\n    var maxShort = 32767;\n    var halfMaxShort = (maxShort / 2) | 0;\n\n    var clipScratch = [];\n    var clipScratch2 = [];\n    var verticesScratch = [];\n    var cartographicScratch = new Cartographic();\n    var cartesian3Scratch = new Cartesian3();\n    var uScratch = [];\n    var vScratch = [];\n    var heightScratch = [];\n    var indicesScratch = [];\n    var normalsScratch = [];\n    var horizonOcclusionPointScratch = new Cartesian3();\n    var boundingSphereScratch = new BoundingSphere();\n    var orientedBoundingBoxScratch = new OrientedBoundingBox();\n    var decodeTexCoordsScratch = new Cartesian2();\n    var octEncodedNormalScratch = new Cartesian3();\n\n    function clipInterpolate(triBuffer, triIndices, tests, pre, cur) {\n        var curIndex = triBuffer.uBuffer.length;\n        var ratio = 0;\n        var delta = tests[pre] - tests[cur];\n        if (Math.abs(delta) > 1e-9) {\n            ratio = tests[pre] / (tests[pre] - tests[cur]);\n        }\n\n        var preU = triBuffer.uBuffer[triIndices[pre]];\n        var preV = triBuffer.vBuffer[triIndices[pre]];\n        var preH = triBuffer.hBuffer[triIndices[pre]];\n        var curU = triBuffer.uBuffer[triIndices[cur]];\n        var curV = triBuffer.vBuffer[triIndices[cur]];\n        var curH = triBuffer.hBuffer[triIndices[cur]];\n\n        curU = preU + ratio*(curU - preU);\n        curV = preV + ratio*(curV - preV);\n        curH = preH + ratio*(curH - preH);\n\n        triBuffer.uBuffer.push(curU);\n        triBuffer.vBuffer.push(curV);\n        triBuffer.hBuffer.push(curH);\n\n        if (defined(triBuffer.nBuffer)) {\n            var preN0 = triBuffer.nBuffer[triIndices[pre]*2];\n            var preN1 = triBuffer.nBuffer[triIndices[pre]*2 + 1];\n            var curN0 = triBuffer.nBuffer[triIndices[cur]*2];\n            var curN1 = triBuffer.nBuffer[triIndices[cur]*2 + 1];\n\n            curN0 = preN0 + ratio*(curN0 - preN0);\n            curN1 = preN1 + ratio*(curN1 - preN1);\n\n            triBuffer.nBuffer.push(curN0);\n            triBuffer.nBuffer.push(curN1);\n        }\n\n        return curIndex;\n    }\n\n    function clipTriPolygonAgainPlane(triBuffer, triIndices, tests, firstPosIndex, numIndices) {\n        var iCQuantity = 0;\n        var iCurr = 0;\n        var iPrev = 0;\n        var iCIndex = [];\n        iCIndex.length = 32;\n\n        var cApNew = function() {\n            iCIndex[iCQuantity] = clipInterpolate(triBuffer, triIndices, tests, iPrev, iCurr);\n            iCQuantity++;\n        };\n\n        var cApOld = function() {\n            iCIndex[iCQuantity] = triIndices[iCurr];\n            iCQuantity++;\n        };\n\n        if (firstPosIndex > 0) {\n            iCurr = firstPosIndex;\n            iPrev = iCurr - 1;\n            cApNew();\n\n            while (iCurr < numIndices && tests[iCurr] >= 0.0) {\n                cApOld();\n                iCurr++;\n            }\n\n            if (iCurr < numIndices)\n            {\n                iPrev = iCurr - 1;\n            }\n            else\n            {\n                iCurr = 0;\n                iPrev = numIndices - 1;\n            }\n            cApNew();\n        }\n        else\n        {\n            iCurr = 0;\n            while (iCurr < numIndices && tests[iCurr] >= 0)\n            {\n                cApOld();\n                iCurr++;\n            }\n\n            iPrev = iCurr - 1;\n            cApNew();\n\n            while (iCurr < numIndices && tests[iCurr] < 0)\n            {\n                iCurr++;\n            }\n\n            if (iCurr < numIndices)\n            {\n                iPrev = iCurr - 1;\n                cApNew();\n\n                while (iCurr < numIndices && tests[iCurr] >= 0)\n                {\n                    cApOld();\n                    iCurr++;\n                }\n            }\n            else\n            {\n                iCurr = 0;\n                iPrev = numIndices - 1;\n                cApNew();\n            }\n        }\n\n        numIndices = iCQuantity;\n        for (let index = 0; index < iCQuantity; index++) {\n            triIndices[index] = iCIndex[index];\n        }\n\n        return numIndices;\n    }\n\n    function clipTriPolygonPlane(cPlane, triBuffer, numIndices, triIndices) {\n        var iPositive = 0, iNegative = 0, iFirstPosIndex = -1;\n        var tests = [];\n        tests.length = 32;\n        for (let i = 0; i < numIndices; i++) {\n            const cU = triBuffer.uBuffer[triIndices[i]];\n            const cV = triBuffer.vBuffer[triIndices[i]];\n            const cH = triBuffer.hBuffer[triIndices[i]];\n\n            tests[i] = cU*cPlane.x + cV*cPlane.y + cH*cPlane.z + cPlane.w;\n            if (tests[i] > 1e-9) {\n                iPositive++;\n                if (iFirstPosIndex < 0) {\n                    iFirstPosIndex = i;\n                }\n            }\n            else if (tests[i] < -1e-9) {\n                iNegative++;\n            }\n        }\n\n        if (iPositive === 0 && iNegative > 0) {\n            numIndices = 0;\n            return numIndices;\n        }\n\n        if (iPositive >= 0 && iNegative === 0) {\n            return numIndices;\n        }\n\n        return clipTriPolygonAgainPlane(triBuffer, triIndices, tests, iFirstPosIndex, numIndices);\n    }\n\n    function clipTriPolygon(minU, minV, maxU, maxV, triBuffer, triIndices, numIndices) {\n        var cClipPlanes = [\n            new Cartesian4(1, 0, 0, -minU), new Cartesian4(-1, 0, 0, maxU),\n            new Cartesian4(0, 1, 0, -minV), new Cartesian4(0, -1, 0, maxV),\n        ];\n        for (let i = 0; i < 4; i++) {\n            numIndices = clipTriPolygonPlane(cClipPlanes[i], triBuffer, numIndices, triIndices);\n            if (numIndices < 3) {\n                return numIndices;\n            }\n        }\n\n        return numIndices;\n    }\n\n    function clipGeoBox(minU, minV, maxU, maxV, triBuffer, triIndices, triNewBuffer, triNewIndices) {\n        var iTriNum = triIndices.length / 3;\n        var cNewIndices = [];\n        for (let i = 0; i < iTriNum; ++i) {\n            let iNumIndices = 3;\n\n            let iTriIndices = [];\n            iTriIndices.length = 32;\n            iTriIndices[0] = triIndices[3 * i];\n            iTriIndices[1] = triIndices[3 * i + 1];\n            iTriIndices[2] = triIndices[3 * i + 2];\n\n            iNumIndices = clipTriPolygon(minU, minV, maxU, maxV, triBuffer, iTriIndices, iNumIndices);\n            if (iNumIndices >= 3) {\n                let iNumTriangles = iNumIndices - 2;\n                for (let j = 1; j <= iNumTriangles; ++j) {\n                    cNewIndices.push(iTriIndices[0]);\n                    cNewIndices.push(iTriIndices[j]);\n                    cNewIndices.push(iTriIndices[j + 1]);\n                }\n            }\n        }\n\n        var cVertDel = [];\n        var cVertIds = [];\n        cVertDel.length = triBuffer.uBuffer.length;\n        cVertIds.length = cVertDel.length;\n        for (let i = 0; i < cVertDel.length; i++) {\n            cVertDel[i] = true;\n            cVertIds[i] = -1;\n        }\n        for (let i = 0; i < cNewIndices.length; i++) {\n            cVertDel[cNewIndices[i]] = false;\n        }\n\n        for (let i = 0, iNewId = 0; i < cVertDel.length; ++i) {\n            if (!cVertDel[i]) {\n                cVertIds[i] = iNewId;\n                iNewId++;\n\n                triNewBuffer.uBuffer.push(triBuffer.uBuffer[i]);\n                triNewBuffer.vBuffer.push(triBuffer.vBuffer[i]);\n                triNewBuffer.hBuffer.push(triBuffer.hBuffer[i]);\n                if (defined(triBuffer.nBuffer)) {\n                    triNewBuffer.nBuffer.push(triBuffer.nBuffer[i*2]);\n                    triNewBuffer.nBuffer.push(triBuffer.nBuffer[i*2 + 1]);\n                }\n            }\n        }\n        let iNumNewIndices = cNewIndices.length;\n        for (let i = 0; i < iNumNewIndices; ++i) {\n            triNewIndices.push(cVertIds[cNewIndices[i]]);\n        }\n    }\n\n    function createSplitVertices(parameters, transferableObjects) {\n        var isEastChild = parameters.isEastChild;\n        var isNorthChild = parameters.isNorthChild;\n\n        var minU = isEastChild ? halfMaxShort : 0;\n        var maxU = isEastChild ? maxShort : halfMaxShort;\n        var minV = isNorthChild ? halfMaxShort : 0;\n        var maxV = isNorthChild ? maxShort : halfMaxShort;\n\n        var uBuffer = uScratch;\n        var vBuffer = vScratch;\n        var heightBuffer = heightScratch;\n        var normalBuffer = normalsScratch;\n\n        uBuffer.length = 0;\n        vBuffer.length = 0;\n        heightBuffer.length = 0;\n        normalBuffer.length = 0;\n\n        var indices = indicesScratch;\n        indices.length = 0;\n\n        var parentVertices = parameters.vertices;\n        var parentIndices = parameters.indices;\n        parentIndices = parentIndices.subarray(0, parameters.indexCountWithoutSkirts);\n\n        var encoding = TerrainEncoding.clone(parameters.encoding);\n        var hasVertexNormals = encoding.hasVertexNormals;\n        var exaggeration = parameters.exaggeration;\n\n        var vertexCount = 0;\n        var quantizedVertexCount = parameters.vertexCountWithoutSkirts;\n\n        var parentMinimumHeight = parameters.minimumHeight;\n        var parentMaximumHeight = parameters.maximumHeight;\n\n        var parentUBuffer = new Array(quantizedVertexCount);\n        var parentVBuffer = new Array(quantizedVertexCount);\n        var parentHeightBuffer = new Array(quantizedVertexCount);\n        var parentNormalBuffer = hasVertexNormals ? new Array(quantizedVertexCount * 2) : undefined;\n\n        var threshold = 20;\n        var height;\n\n        var i, n;\n        var u, v;\n        for (i = 0, n = 0; i < quantizedVertexCount; ++i, n += 2) {\n            var texCoords = encoding.decodeTextureCoordinates(parentVertices, i, decodeTexCoordsScratch);\n            height  = encoding.decodeHeight(parentVertices, i) / exaggeration;\n\n            u = CesiumMath.clamp((texCoords.x * maxShort) | 0, 0, maxShort);\n            v = CesiumMath.clamp((texCoords.y * maxShort) | 0, 0, maxShort);\n            parentHeightBuffer[i] = CesiumMath.clamp((((height - parentMinimumHeight) / (parentMaximumHeight - parentMinimumHeight)) * maxShort) | 0, 0, maxShort);\n\n            if (u < threshold) {\n                u = 0;\n            }\n\n            if (v < threshold) {\n                v = 0;\n            }\n\n            if (maxShort - u < threshold) {\n                u = maxShort;\n            }\n\n            if (maxShort - v < threshold) {\n                v = maxShort;\n            }\n\n            parentUBuffer[i] = u;\n            parentVBuffer[i] = v;\n\n            if (hasVertexNormals) {\n                var encodedNormal = encoding.getOctEncodedNormal(parentVertices, i, octEncodedNormalScratch);\n                parentNormalBuffer[n] = encodedNormal.x;\n                parentNormalBuffer[n + 1] = encodedNormal.y;\n            }\n        }\n\n        var triBuffer = {\n            uBuffer: parentUBuffer,\n            vBuffer: parentVBuffer,\n            hBuffer: parentHeightBuffer,\n            nBuffer: parentNormalBuffer\n        }\n\n        var triNewBuffer = {\n            uBuffer: uBuffer,\n            vBuffer: vBuffer,\n            hBuffer: heightBuffer,\n            nBuffer: normalBuffer\n        }\n\n        clipGeoBox(minU, minV, maxU, maxV, triBuffer, parentIndices, triNewBuffer, indices);\n\n        var uOffset = isEastChild ? -maxShort : 0;\n        var vOffset = isNorthChild ? -maxShort : 0;\n\n        var westIndices = [];\n        var southIndices = [];\n        var eastIndices = [];\n        var northIndices = [];\n\n        var minimumHeight = Number.MAX_VALUE;\n        var maximumHeight = -minimumHeight;\n\n        var cartesianVertices = verticesScratch;\n        cartesianVertices.length = 0;\n\n        var ellipsoid = Ellipsoid.clone(parameters.ellipsoid);\n        var rectangle = Rectangle.clone(parameters.childRectangle);\n\n        var north = rectangle.north;\n        var south = rectangle.south;\n        var east = rectangle.east;\n        var west = rectangle.west;\n\n        if (east < west) {\n            east += CesiumMath.TWO_PI;\n        }\n\n        var emLBDeal;\n        if (parameters.isPlaneMode) {\n            var projectionString = parameters.projectionString;\n            var dCenX = parameters.dCenX;\n            var dCenY = parameters.dCenY;\n            var dCenZ = parameters.dCenZ;\n\n            emLBDeal = new EmLBDeal();\n            var isInit = emLBDeal.init(projectionString, new Cartesian3(dCenX, dCenY, dCenZ));\n            if (!isInit) {\n                emLBDeal.destroy();\n                emLBDeal = undefined;\n            }\n        }\n\n        for (i = 0; i < uBuffer.length; ++i) {\n            u = Math.round(uBuffer[i]);\n            if (u <= minU) {\n                westIndices.push(i);\n                u = 0;\n            } else if (u >= maxU) {\n                eastIndices.push(i);\n                u = maxShort;\n            } else {\n                u = u * 2 + uOffset;\n            }\n\n            uBuffer[i] = u;\n\n            v = Math.round(vBuffer[i]);\n            if (v <= minV) {\n                southIndices.push(i);\n                v = 0;\n            } else if (v >= maxV) {\n                northIndices.push(i);\n                v = maxShort;\n            } else {\n                v = v * 2 + vOffset;\n            }\n\n            vBuffer[i] = v;\n\n            height = CesiumMath.lerp(parentMinimumHeight, parentMaximumHeight, heightBuffer[i] / maxShort);\n            if (height < minimumHeight) {\n                minimumHeight = height;\n            }\n            if (height > maximumHeight) {\n                maximumHeight = height;\n            }\n\n            heightBuffer[i] = height;\n\n            cartographicScratch.longitude = CesiumMath.lerp(west, east, u / maxShort);\n            cartographicScratch.latitude = CesiumMath.lerp(south, north, v / maxShort);\n            cartographicScratch.height = height;\n\n            ellipsoid.cartographicToCartesian(cartographicScratch, cartesian3Scratch);\n\n            if (defined(emLBDeal)) {\n                emLBDeal.computeCartesianToProj(cartesian3Scratch, false, undefined, cartesian3Scratch);\n            }\n\n            cartesianVertices.push(cartesian3Scratch.x);\n            cartesianVertices.push(cartesian3Scratch.y);\n            cartesianVertices.push(cartesian3Scratch.z);\n        }\n\n        var boundingSphere = BoundingSphere.fromVertices(cartesianVertices, Cartesian3.ZERO, 3, boundingSphereScratch);\n        var orientedBoundingBox;\n        var horizonOcclusionPoint;\n        if (defined(emLBDeal)) {\n            orientedBoundingBox = OrientedBoundingBox.fromPoints(boundingSphere.getCornerAry());\n            horizonOcclusionPoint = new Cartesian3();\n        } else {\n            orientedBoundingBox = OrientedBoundingBox.fromRectangle(rectangle, minimumHeight, maximumHeight, ellipsoid, orientedBoundingBoxScratch);\n            var occluder = new EllipsoidalOccluder(ellipsoid);\n            horizonOcclusionPoint = occluder.computeHorizonCullingPointFromVerticesPossiblyUnderEllipsoid(boundingSphere.center, cartesianVertices, 3, boundingSphere.center, minimumHeight, horizonOcclusionPointScratch);\n        }\n\n        var heightRange = maximumHeight - minimumHeight;\n\n        var vertices = new Uint16Array(uBuffer.length + vBuffer.length + heightBuffer.length);\n\n        for (i = 0; i < uBuffer.length; ++i) {\n            vertices[i] = uBuffer[i];\n        }\n\n        var start = uBuffer.length;\n\n        for (i = 0; i < vBuffer.length; ++i) {\n            vertices[start + i] = vBuffer[i];\n        }\n\n        start += vBuffer.length;\n\n        for (i = 0; i < heightBuffer.length; ++i) {\n            vertices[start + i] = maxShort * (heightBuffer[i] - minimumHeight) / heightRange;\n        }\n\n        var indicesTypedArray = IndexDatatype.createTypedArray(uBuffer.length, indices);\n\n        var encodedNormals;\n        if (hasVertexNormals) {\n            var normalArray = new Uint8Array(normalBuffer);\n            transferableObjects.push(vertices.buffer, indicesTypedArray.buffer, normalArray.buffer);\n            encodedNormals = normalArray.buffer;\n        } else {\n            transferableObjects.push(vertices.buffer, indicesTypedArray.buffer);\n        }\n\n        if (defined(emLBDeal)) {\n            emLBDeal.destroy();\n        }\n\n        return {\n            vertices : vertices.buffer,\n            encodedNormals : encodedNormals,\n            indices : indicesTypedArray.buffer,\n            minimumHeight : minimumHeight,\n            maximumHeight : maximumHeight,\n            westIndices : westIndices,\n            southIndices : southIndices,\n            eastIndices : eastIndices,\n            northIndices : northIndices,\n            boundingSphere : boundingSphere,\n            orientedBoundingBox : orientedBoundingBox,\n            horizonOcclusionPoint : horizonOcclusionPoint\n        };\n    }\n\n    function Vertex() {\n        this.vertexBuffer = undefined;\n        this.index = undefined;\n        this.first = undefined;\n        this.second = undefined;\n        this.ratio = undefined;\n    }\n\n    Vertex.prototype.clone = function(result) {\n        if (!defined(result)) {\n            result = new Vertex();\n        }\n\n        result.uBuffer = this.uBuffer;\n        result.vBuffer = this.vBuffer;\n        result.heightBuffer = this.heightBuffer;\n        result.normalBuffer = this.normalBuffer;\n        result.index = this.index;\n        result.first = this.first;\n        result.second = this.second;\n        result.ratio = this.ratio;\n\n        return result;\n    };\n\n    Vertex.prototype.initializeIndexed = function(uBuffer, vBuffer, heightBuffer, normalBuffer, index) {\n        this.uBuffer = uBuffer;\n        this.vBuffer = vBuffer;\n        this.heightBuffer = heightBuffer;\n        this.normalBuffer = normalBuffer;\n        this.index = index;\n        this.first = undefined;\n        this.second = undefined;\n        this.ratio = undefined;\n    };\n\n    Vertex.prototype.initializeFromClipResult = function(clipResult, index, vertices) {\n        var nextIndex = index + 1;\n\n        if (clipResult[index] !== -1) {\n            vertices[clipResult[index]].clone(this);\n        } else {\n            this.vertexBuffer = undefined;\n            this.index = undefined;\n            this.first = vertices[clipResult[nextIndex]];\n            ++nextIndex;\n            this.second = vertices[clipResult[nextIndex]];\n            ++nextIndex;\n            this.ratio = clipResult[nextIndex];\n            ++nextIndex;\n        }\n\n        return nextIndex;\n    };\n\n    Vertex.prototype.getKey = function() {\n        if (this.isIndexed()) {\n            return this.index;\n        }\n        return JSON.stringify({\n            first : this.first.getKey(),\n            second : this.second.getKey(),\n            ratio : this.ratio\n        });\n    };\n\n    Vertex.prototype.isIndexed = function() {\n        return defined(this.index);\n    };\n\n    Vertex.prototype.getH = function() {\n        if (defined(this.index)) {\n            return this.heightBuffer[this.index];\n        }\n        return CesiumMath.lerp(this.first.getH(), this.second.getH(), this.ratio);\n    };\n\n    Vertex.prototype.getU = function() {\n        if (defined(this.index)) {\n            return this.uBuffer[this.index];\n        }\n        return CesiumMath.lerp(this.first.getU(), this.second.getU(), this.ratio);\n    };\n\n    Vertex.prototype.getV = function() {\n        if (defined(this.index)) {\n            return this.vBuffer[this.index];\n        }\n        return CesiumMath.lerp(this.first.getV(), this.second.getV(), this.ratio);\n    };\n\n    var encodedScratch = new Cartesian2();\n    // An upsampled triangle may be clipped twice before it is assigned an index\n    // In this case, we need a buffer to handle the recursion of getNormalX() and getNormalY().\n    var depth = -1;\n    var cartesianScratch1 = [new Cartesian3(), new Cartesian3()];\n    var cartesianScratch2 = [new Cartesian3(), new Cartesian3()];\n    function lerpOctEncodedNormal(vertex, result) {\n        ++depth;\n\n        var first = cartesianScratch1[depth];\n        var second = cartesianScratch2[depth];\n\n        first = AttributeCompression.octDecode(vertex.first.getNormalX(), vertex.first.getNormalY(), first);\n        second = AttributeCompression.octDecode(vertex.second.getNormalX(), vertex.second.getNormalY(), second);\n        cartesian3Scratch = Cartesian3.lerp(first, second, vertex.ratio, cartesian3Scratch);\n        Cartesian3.normalize(cartesian3Scratch, cartesian3Scratch);\n\n        AttributeCompression.octEncode(cartesian3Scratch, result);\n\n        --depth;\n\n        return result;\n    }\n\n    Vertex.prototype.getNormalX = function() {\n        if (defined(this.index)) {\n            return this.normalBuffer[this.index * 2];\n        }\n\n        encodedScratch = lerpOctEncodedNormal(this, encodedScratch);\n        return encodedScratch.x;\n    };\n\n    Vertex.prototype.getNormalY = function() {\n        if (defined(this.index)) {\n            return this.normalBuffer[this.index * 2 + 1];\n        }\n\n        encodedScratch = lerpOctEncodedNormal(this, encodedScratch);\n        return encodedScratch.y;\n    };\n\n    var polygonVertices = [];\n    polygonVertices.push(new Vertex());\n    polygonVertices.push(new Vertex());\n    polygonVertices.push(new Vertex());\n    polygonVertices.push(new Vertex());\n\n    function addClippedPolygon(uBuffer, vBuffer, heightBuffer, normalBuffer, indices, vertexMap, clipped, triangleVertices, hasVertexNormals) {\n        if (clipped.length === 0) {\n            return;\n        }\n\n        var numVertices = 0;\n        var clippedIndex = 0;\n        while (clippedIndex < clipped.length) {\n            clippedIndex = polygonVertices[numVertices++].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\n        }\n\n        for (var i = 0; i < numVertices; ++i) {\n            var polygonVertex = polygonVertices[i];\n            if (!polygonVertex.isIndexed()) {\n                var key = polygonVertex.getKey();\n                if (defined(vertexMap[key])) {\n                    polygonVertex.newIndex = vertexMap[key];\n                } else {\n                    var newIndex = uBuffer.length;\n                    uBuffer.push(polygonVertex.getU());\n                    vBuffer.push(polygonVertex.getV());\n                    heightBuffer.push(polygonVertex.getH());\n                    if (hasVertexNormals) {\n                        normalBuffer.push(polygonVertex.getNormalX());\n                        normalBuffer.push(polygonVertex.getNormalY());\n                    }\n                    polygonVertex.newIndex = newIndex;\n                    vertexMap[key] = newIndex;\n                }\n            } else {\n                polygonVertex.newIndex = vertexMap[polygonVertex.index];\n                polygonVertex.uBuffer = uBuffer;\n                polygonVertex.vBuffer = vBuffer;\n                polygonVertex.heightBuffer = heightBuffer;\n                if (hasVertexNormals) {\n                    polygonVertex.normalBuffer = normalBuffer;\n                }\n            }\n        }\n\n        if (numVertices === 3) {\n            // A triangle.\n            indices.push(polygonVertices[0].newIndex);\n            indices.push(polygonVertices[1].newIndex);\n            indices.push(polygonVertices[2].newIndex);\n        } else if (numVertices === 4) {\n            // A quad - two triangles.\n            indices.push(polygonVertices[0].newIndex);\n            indices.push(polygonVertices[1].newIndex);\n            indices.push(polygonVertices[2].newIndex);\n\n            indices.push(polygonVertices[0].newIndex);\n            indices.push(polygonVertices[2].newIndex);\n            indices.push(polygonVertices[3].newIndex);\n        }\n    }\n\n    function upsampleQuantizedTerrainMesh(event) {\n        var data = event.data;\n        var wasmConfig = data.webAssemblyConfig;\n        if (defined(wasmConfig)) {\n            EmWrapperManager.initWebAssembly(wasmConfig.wasmBinaryFileES6).then(function () {\n                self.onmessage = createTaskProcessorWorker(createSplitVertices);\n                self.postMessage(true);\n            });\n        }\n    }\n\nexport default upsampleQuantizedTerrainMesh;\n"],"names":["Cartographic","Cartesian3","BoundingSphere","OrientedBoundingBox","Cartesian2","defined","Cartesian4","TerrainEncoding","CesiumMath","Ellipsoid","Rectangle","EmLBDeal","EllipsoidalOccluder","IndexDatatype","EmWrapperManager"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAmBI,IAAI,QAAQ,GAAG,KAAK,CAAC;IACzB,IAAI,IAAI,YAAY,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;IAI1C,IAAI,IAAI,eAAe,GAAG,EAAE,CAAC;IAC7B,IAAI,IAAI,mBAAmB,GAAG,IAAIA,uBAAY,EAAE,CAAC;IACjD,IAAI,IAAI,iBAAiB,GAAG,IAAIC,qBAAU,EAAE,CAAC;IAC7C,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;IACtB,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;IACtB,IAAI,IAAI,aAAa,GAAG,EAAE,CAAC;IAC3B,IAAI,IAAI,cAAc,GAAG,EAAE,CAAC;IAC5B,IAAI,IAAI,cAAc,GAAG,EAAE,CAAC;IAC5B,IAAI,IAAI,4BAA4B,GAAG,IAAIA,qBAAU,EAAE,CAAC;IACxD,IAAI,IAAI,qBAAqB,GAAG,IAAIC,6BAAc,EAAE,CAAC;IACrD,IAAI,IAAI,0BAA0B,GAAG,IAAIC,uCAAmB,EAAE,CAAC;IAC/D,IAAI,IAAI,sBAAsB,GAAG,IAAIC,qBAAU,EAAE,CAAC;IAClD,IAAI,IAAI,uBAAuB,GAAG,IAAIH,qBAAU,EAAE,CAAC;AACnD;IACA,IAAI,SAAS,eAAe,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;IACrE,QAAQ,IAAI,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC;IAChD,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;IAC5C,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE;IACpC,YAAY,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3D,SAAS;AACT;IACA,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AACtD;IACA,QAAQ,IAAI,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;IAC1C,QAAQ,IAAI,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;IAC1C,QAAQ,IAAI,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;AAC1C;IACA,QAAQ,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,QAAQ,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,QAAQ,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC;IACA,QAAQ,IAAII,YAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;IACxC,YAAY,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,YAAY,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjE,YAAY,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,YAAY,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjE;IACA,YAAY,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC;IAClD,YAAY,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC;AAClD;IACA,YAAY,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C,YAAY,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C,SAAS;AACT;IACA,QAAQ,OAAO,QAAQ,CAAC;IACxB,KAAK;AACL;IACA,IAAI,SAAS,wBAAwB,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,aAAa,EAAE,UAAU,EAAE;IAC/F,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,OAAO,GAAG,EAAE,CAAC;IACzB,QAAQ,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;AAC5B;IACA,QAAQ,IAAI,MAAM,GAAG,WAAW;IAChC,YAAY,OAAO,CAAC,UAAU,CAAC,GAAG,eAAe,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAC9F,YAAY,UAAU,EAAE,CAAC;IACzB,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,MAAM,GAAG,WAAW;IAChC,YAAY,OAAO,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IACpD,YAAY,UAAU,EAAE,CAAC;IACzB,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,aAAa,GAAG,CAAC,EAAE;IAC/B,YAAY,KAAK,GAAG,aAAa,CAAC;IAClC,YAAY,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;IAC9B,YAAY,MAAM,EAAE,CAAC;AACrB;IACA,YAAY,OAAO,KAAK,GAAG,UAAU,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE;IAC9D,gBAAgB,MAAM,EAAE,CAAC;IACzB,gBAAgB,KAAK,EAAE,CAAC;IACxB,aAAa;AACb;IACA,YAAY,IAAI,KAAK,GAAG,UAAU;IAClC,YAAY;IACZ,gBAAgB,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;IAClC,aAAa;IACb;IACA,YAAY;IACZ,gBAAgB,KAAK,GAAG,CAAC,CAAC;IAC1B,gBAAgB,KAAK,GAAG,UAAU,GAAG,CAAC,CAAC;IACvC,aAAa;IACb,YAAY,MAAM,EAAE,CAAC;IACrB,SAAS;IACT;IACA,QAAQ;IACR,YAAY,KAAK,GAAG,CAAC,CAAC;IACtB,YAAY,OAAO,KAAK,GAAG,UAAU,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;IAC1D,YAAY;IACZ,gBAAgB,MAAM,EAAE,CAAC;IACzB,gBAAgB,KAAK,EAAE,CAAC;IACxB,aAAa;AACb;IACA,YAAY,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;IAC9B,YAAY,MAAM,EAAE,CAAC;AACrB;IACA,YAAY,OAAO,KAAK,GAAG,UAAU,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;IACzD,YAAY;IACZ,gBAAgB,KAAK,EAAE,CAAC;IACxB,aAAa;AACb;IACA,YAAY,IAAI,KAAK,GAAG,UAAU;IAClC,YAAY;IACZ,gBAAgB,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;IAClC,gBAAgB,MAAM,EAAE,CAAC;AACzB;IACA,gBAAgB,OAAO,KAAK,GAAG,UAAU,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;IAC9D,gBAAgB;IAChB,oBAAoB,MAAM,EAAE,CAAC;IAC7B,oBAAoB,KAAK,EAAE,CAAC;IAC5B,iBAAiB;IACjB,aAAa;IACb;IACA,YAAY;IACZ,gBAAgB,KAAK,GAAG,CAAC,CAAC;IAC1B,gBAAgB,KAAK,GAAG,UAAU,GAAG,CAAC,CAAC;IACvC,gBAAgB,MAAM,EAAE,CAAC;IACzB,aAAa;IACb,SAAS;AACT;IACA,QAAQ,UAAU,GAAG,UAAU,CAAC;IAChC,QAAQ,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,EAAE,KAAK,EAAE,EAAE;IACzD,YAAY,UAAU,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/C,SAAS;AACT;IACA,QAAQ,OAAO,UAAU,CAAC;IAC1B,KAAK;AACL;IACA,IAAI,SAAS,mBAAmB,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE;IAC5E,QAAQ,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC,CAAC,CAAC;IAC9D,QAAQ,IAAI,KAAK,GAAG,EAAE,CAAC;IACvB,QAAQ,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;IAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;IAC7C,YAAY,MAAM,EAAE,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,YAAY,MAAM,EAAE,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,YAAY,MAAM,EAAE,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD;IACA,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;IAC1E,YAAY,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;IACjC,gBAAgB,SAAS,EAAE,CAAC;IAC5B,gBAAgB,IAAI,cAAc,GAAG,CAAC,EAAE;IACxC,oBAAoB,cAAc,GAAG,CAAC,CAAC;IACvC,iBAAiB;IACjB,aAAa;IACb,iBAAiB,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE;IACvC,gBAAgB,SAAS,EAAE,CAAC;IAC5B,aAAa;IACb,SAAS;AACT;IACA,QAAQ,IAAI,SAAS,KAAK,CAAC,IAAI,SAAS,GAAG,CAAC,EAAE;IAC9C,YAAY,UAAU,GAAG,CAAC,CAAC;IAC3B,YAAY,OAAO,UAAU,CAAC;IAC9B,SAAS;AACT;IACA,QAAQ,IAAI,SAAS,IAAI,CAAC,IAAI,SAAS,KAAK,CAAC,EAAE;IAC/C,YAAY,OAAO,UAAU,CAAC;IAC9B,SAAS;AACT;IACA,QAAQ,OAAO,wBAAwB,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;IAClG,KAAK;AACL;IACA,IAAI,SAAS,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE;IACvF,QAAQ,IAAI,WAAW,GAAG;IAC1B,YAAY,IAAIC,kBAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAIA,kBAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAC1E,YAAY,IAAIA,kBAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAIA,kBAAU,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAC1E,SAAS,CAAC;IACV,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,YAAY,UAAU,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAChG,YAAY,IAAI,UAAU,GAAG,CAAC,EAAE;IAChC,gBAAgB,OAAO,UAAU,CAAC;IAClC,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,UAAU,CAAC;IAC1B,KAAK;AACL;IACA,IAAI,SAAS,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE;IACpG,QAAQ,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5C,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;IAC7B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;IAC1C,YAAY,IAAI,WAAW,GAAG,CAAC,CAAC;AAChC;IACA,YAAY,IAAI,WAAW,GAAG,EAAE,CAAC;IACjC,YAAY,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC;IACpC,YAAY,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/C,YAAY,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACnD,YAAY,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACnD;IACA,YAAY,WAAW,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IACtG,YAAY,IAAI,WAAW,IAAI,CAAC,EAAE;IAClC,gBAAgB,IAAI,aAAa,GAAG,WAAW,GAAG,CAAC,CAAC;IACpD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,aAAa,EAAE,EAAE,CAAC,EAAE;IACzD,oBAAoB,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,oBAAoB,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,oBAAoB,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzD,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA,QAAQ,IAAI,QAAQ,GAAG,EAAE,CAAC;IAC1B,QAAQ,IAAI,QAAQ,GAAG,EAAE,CAAC;IAC1B,QAAQ,QAAQ,CAAC,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC;IACnD,QAAQ,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;IAC1C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClD,YAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/B,YAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,SAAS;IACT,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrD,YAAY,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAC7C,SAAS;AACT;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAC9D,YAAY,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC9B,gBAAgB,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;IACrC,gBAAgB,MAAM,EAAE,CAAC;AACzB;IACA,gBAAgB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,gBAAgB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,gBAAgB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,gBAAgB,IAAID,YAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;IAChD,oBAAoB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,oBAAoB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1E,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,cAAc,GAAG,WAAW,CAAC,MAAM,CAAC;IAChD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,EAAE,CAAC,EAAE;IACjD,YAAY,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,SAAS;IACT,KAAK;AACL;IACA,IAAI,SAAS,mBAAmB,CAAC,UAAU,EAAE,mBAAmB,EAAE;IAClE,QAAQ,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;IACjD,QAAQ,IAAI,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;AACnD;IACA,QAAQ,IAAI,IAAI,GAAG,WAAW,GAAG,YAAY,GAAG,CAAC,CAAC;IAClD,QAAQ,IAAI,IAAI,GAAG,WAAW,GAAG,QAAQ,GAAG,YAAY,CAAC;IACzD,QAAQ,IAAI,IAAI,GAAG,YAAY,GAAG,YAAY,GAAG,CAAC,CAAC;IACnD,QAAQ,IAAI,IAAI,GAAG,YAAY,GAAG,QAAQ,GAAG,YAAY,CAAC;AAC1D;IACA,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC;IAC/B,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC;IAC/B,QAAQ,IAAI,YAAY,GAAG,aAAa,CAAC;IACzC,QAAQ,IAAI,YAAY,GAAG,cAAc,CAAC;AAC1C;IACA,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3B,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3B,QAAQ,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IAChC,QAAQ,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;AAChC;IACA,QAAQ,IAAI,OAAO,GAAG,cAAc,CAAC;IACrC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3B;IACA,QAAQ,IAAI,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC;IACjD,QAAQ,IAAI,aAAa,GAAG,UAAU,CAAC,OAAO,CAAC;IAC/C,QAAQ,aAAa,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,uBAAuB,CAAC,CAAC;AACtF;IACA,QAAQ,IAAI,QAAQ,GAAGE,+BAAe,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IAClE,QAAQ,IAAI,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;IACzD,QAAQ,IAAI,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;IAGnD,QAAQ,IAAI,oBAAoB,GAAG,UAAU,CAAC,wBAAwB,CAAC;AACvE;IACA,QAAQ,IAAI,mBAAmB,GAAG,UAAU,CAAC,aAAa,CAAC;IAC3D,QAAQ,IAAI,mBAAmB,GAAG,UAAU,CAAC,aAAa,CAAC;AAC3D;IACA,QAAQ,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAC5D,QAAQ,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAC5D,QAAQ,IAAI,kBAAkB,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACjE,QAAQ,IAAI,kBAAkB,GAAG,gBAAgB,GAAG,IAAI,KAAK,CAAC,oBAAoB,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;AACpG;IACA,QAAQ,IAAI,SAAS,GAAG,EAAE,CAAC;IAC3B,QAAQ,IAAI,MAAM,CAAC;AACnB;IACA,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;IACjB,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;IACjB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAoB,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IAClE,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC,EAAE,sBAAsB,CAAC,CAAC;IACzG,YAAY,MAAM,IAAI,QAAQ,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC;AAC9E;IACA,YAAY,CAAC,GAAGC,qBAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC5E,YAAY,CAAC,GAAGA,qBAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC5E,YAAY,kBAAkB,CAAC,CAAC,CAAC,GAAGA,qBAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,mBAAmB,KAAK,mBAAmB,GAAG,mBAAmB,CAAC,IAAI,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;AACnK;IACA,YAAY,IAAI,CAAC,GAAG,SAAS,EAAE;IAC/B,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,aAAa;AACb;IACA,YAAY,IAAI,CAAC,GAAG,SAAS,EAAE;IAC/B,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,aAAa;AACb;IACA,YAAY,IAAI,QAAQ,GAAG,CAAC,GAAG,SAAS,EAAE;IAC1C,gBAAgB,CAAC,GAAG,QAAQ,CAAC;IAC7B,aAAa;AACb;IACA,YAAY,IAAI,QAAQ,GAAG,CAAC,GAAG,SAAS,EAAE;IAC1C,gBAAgB,CAAC,GAAG,QAAQ,CAAC;IAC7B,aAAa;AACb;IACA,YAAY,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACjC,YAAY,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC;IACA,YAAY,IAAI,gBAAgB,EAAE;IAClC,gBAAgB,IAAI,aAAa,GAAG,QAAQ,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC,EAAE,uBAAuB,CAAC,CAAC;IAC7G,gBAAgB,kBAAkB,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;IACxD,gBAAgB,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;IAC5D,aAAa;IACb,SAAS;AACT;IACA,QAAQ,IAAI,SAAS,GAAG;IACxB,YAAY,OAAO,EAAE,aAAa;IAClC,YAAY,OAAO,EAAE,aAAa;IAClC,YAAY,OAAO,EAAE,kBAAkB;IACvC,YAAY,OAAO,EAAE,kBAAkB;IACvC,UAAS;AACT;IACA,QAAQ,IAAI,YAAY,GAAG;IAC3B,YAAY,OAAO,EAAE,OAAO;IAC5B,YAAY,OAAO,EAAE,OAAO;IAC5B,YAAY,OAAO,EAAE,YAAY;IACjC,YAAY,OAAO,EAAE,YAAY;IACjC,UAAS;AACT;IACA,QAAQ,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;AAC5F;IACA,QAAQ,IAAI,OAAO,GAAG,WAAW,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;IAClD,QAAQ,IAAI,OAAO,GAAG,YAAY,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;AACnD;IACA,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;IAC7B,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;IAC9B,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;IAC7B,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;AAC9B;IACA,QAAQ,IAAI,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;IAC7C,QAAQ,IAAI,aAAa,GAAG,CAAC,aAAa,CAAC;AAC3C;IACA,QAAQ,IAAI,iBAAiB,GAAG,eAAe,CAAC;IAChD,QAAQ,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;AACrC;IACA,QAAQ,IAAI,SAAS,GAAGC,oBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAC9D,QAAQ,IAAI,SAAS,GAAGC,oBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AACnE;IACA,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IACpC,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IACpC,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;IAClC,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AAClC;IACA,QAAQ,IAAI,IAAI,GAAG,IAAI,EAAE;IACzB,YAAY,IAAI,IAAIF,qBAAU,CAAC,MAAM,CAAC;IACtC,SAAS;AACT;IACA,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,UAAU,CAAC,WAAW,EAAE;IACpC,YAAY,IAAI,gBAAgB,GAAG,UAAU,CAAC,gBAAgB,CAAC;IAC/D,YAAY,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;IACzC,YAAY,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;IACzC,YAAY,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AACzC;IACA,YAAY,QAAQ,GAAG,IAAIG,iBAAQ,EAAE,CAAC;IACtC,YAAY,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAIV,qBAAU,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9F,YAAY,IAAI,CAAC,MAAM,EAAE;IACzB,gBAAgB,QAAQ,CAAC,OAAO,EAAE,CAAC;IACnC,gBAAgB,QAAQ,GAAG,SAAS,CAAC;IACrC,aAAa;IACb,SAAS;AACT;IACA,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAC7C,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,IAAI,CAAC,IAAI,IAAI,EAAE;IAC3B,gBAAgB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,aAAa,MAAM,IAAI,CAAC,IAAI,IAAI,EAAE;IAClC,gBAAgB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,gBAAgB,CAAC,GAAG,QAAQ,CAAC;IAC7B,aAAa,MAAM;IACnB,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;IACpC,aAAa;AACb;IACA,YAAY,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC3B;IACA,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,IAAI,CAAC,IAAI,IAAI,EAAE;IAC3B,gBAAgB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,aAAa,MAAM,IAAI,CAAC,IAAI,IAAI,EAAE;IAClC,gBAAgB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,gBAAgB,CAAC,GAAG,QAAQ,CAAC;IAC7B,aAAa,MAAM;IACnB,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;IACpC,aAAa;AACb;IACA,YAAY,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC3B;IACA,YAAY,MAAM,GAAGO,qBAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,mBAAmB,EAAE,YAAY,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;IAC3G,YAAY,IAAI,MAAM,GAAG,aAAa,EAAE;IACxC,gBAAgB,aAAa,GAAG,MAAM,CAAC;IACvC,aAAa;IACb,YAAY,IAAI,MAAM,GAAG,aAAa,EAAE;IACxC,gBAAgB,aAAa,GAAG,MAAM,CAAC;IACvC,aAAa;AACb;IACA,YAAY,YAAY,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;AACrC;IACA,YAAY,mBAAmB,CAAC,SAAS,GAAGA,qBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;IACtF,YAAY,mBAAmB,CAAC,QAAQ,GAAGA,qBAAU,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;IACvF,YAAY,mBAAmB,CAAC,MAAM,GAAG,MAAM,CAAC;AAChD;IACA,YAAY,SAAS,CAAC,uBAAuB,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AACtF;IACA,YAAY,IAAIH,YAAO,CAAC,QAAQ,CAAC,EAAE;IACnC,gBAAgB,QAAQ,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,KAAK,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;IACxG,aAAa;AACb;IACA,YAAY,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACxD,YAAY,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACxD,YAAY,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACxD,SAAS;AACT;IACA,QAAQ,IAAI,cAAc,GAAGH,6BAAc,CAAC,YAAY,CAAC,iBAAiB,EAAED,qBAAU,CAAC,IAAI,EAAE,CAAC,EAAE,qBAAqB,CAAC,CAAC;IACvH,QAAQ,IAAI,mBAAmB,CAAC;IAChC,QAAQ,IAAI,qBAAqB,CAAC;IAClC,QAAQ,IAAII,YAAO,CAAC,QAAQ,CAAC,EAAE;IAC/B,YAAY,mBAAmB,GAAGF,uCAAmB,CAAC,UAAU,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC;IAChG,YAAY,qBAAqB,GAAG,IAAIF,qBAAU,EAAE,CAAC;IACrD,SAAS,MAAM;IACf,YAAY,mBAAmB,GAAGE,uCAAmB,CAAC,aAAa,CAAC,SAAS,EAAE,aAAa,EAAE,aAAa,EAAE,SAAS,EAAE,0BAA0B,CAAC,CAAC;IACpJ,YAAY,IAAI,QAAQ,GAAG,IAAIS,mCAAmB,CAAC,SAAS,CAAC,CAAC;IAC9D,YAAY,qBAAqB,GAAG,QAAQ,CAAC,4DAA4D,CAAC,cAAc,CAAC,MAAM,EAAE,iBAAiB,EAAE,CAAC,EAAE,cAAc,CAAC,MAAM,EAAE,aAAa,EAAE,4BAA4B,CAAC,CAAC;IAC3N,SAAS;AACT;IACA,QAAQ,IAAI,WAAW,GAAG,aAAa,GAAG,aAAa,CAAC;AACxD;IACA,QAAQ,IAAI,QAAQ,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;AAC9F;IACA,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAC7C,YAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACrC,SAAS;AACT;IACA,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;AACnC;IACA,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAC7C,YAAY,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C,SAAS;AACT;IACA,QAAQ,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC;AAChC;IACA,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAClD,YAAY,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,IAAI,YAAY,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,GAAG,WAAW,CAAC;IAC7F,SAAS;AACT;IACA,QAAQ,IAAI,iBAAiB,GAAGC,2BAAa,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACxF;IACA,QAAQ,IAAI,cAAc,CAAC;IAC3B,QAAQ,IAAI,gBAAgB,EAAE;IAC9B,YAAY,IAAI,WAAW,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC;IAC3D,YAAY,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,iBAAiB,CAAC,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;IACpG,YAAY,cAAc,GAAG,WAAW,CAAC,MAAM,CAAC;IAChD,SAAS,MAAM;IACf,YAAY,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAChF,SAAS;AACT;IACA,QAAQ,IAAIR,YAAO,CAAC,QAAQ,CAAC,EAAE;IAC/B,YAAY,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC/B,SAAS;AACT;IACA,QAAQ,OAAO;IACf,YAAY,QAAQ,GAAG,QAAQ,CAAC,MAAM;IACtC,YAAY,cAAc,GAAG,cAAc;IAC3C,YAAY,OAAO,GAAG,iBAAiB,CAAC,MAAM;IAC9C,YAAY,aAAa,GAAG,aAAa;IACzC,YAAY,aAAa,GAAG,aAAa;IACzC,YAAY,WAAW,GAAG,WAAW;IACrC,YAAY,YAAY,GAAG,YAAY;IACvC,YAAY,WAAW,GAAG,WAAW;IACrC,YAAY,YAAY,GAAG,YAAY;IACvC,YAAY,cAAc,GAAG,cAAc;IAC3C,YAAY,mBAAmB,GAAG,mBAAmB;IACrD,YAAY,qBAAqB,GAAG,qBAAqB;IACzD,SAAS,CAAC;IACV,KAAK;AAqML;IACA,IAAI,SAAS,4BAA4B,CAAC,KAAK,EAAE;IACjD,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC9B,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC;IAChD,QAAQ,IAAIA,YAAO,CAAC,UAAU,CAAC,EAAE;IACjC,YAAYS,iCAAgB,CAAC,eAAe,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,YAAY;IAC5F,gBAAgB,IAAI,CAAC,SAAS,GAAG,yBAAyB,CAAC,mBAAmB,CAAC,CAAC;IAChF,gBAAgB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACvC,aAAa,CAAC,CAAC;IACf,SAAS;IACT;;;;;;;;"}