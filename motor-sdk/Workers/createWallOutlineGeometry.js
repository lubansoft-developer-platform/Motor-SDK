define(["./when-45f3d25d","./Check-34538dad","./Cartesian3-ef6ea826","./Cartesian2-a652b463","./BoundingSphere-038d5fbc","./Transforms-c8a82813","./Matrix4-f54b529f","./RuntimeError-86da6af2","./WebGLConstants-3660bc8f","./ComponentDatatype-d28c2e26","./GeometryAttribute-dfebcc43","./PrimitiveType-30fa6f85","./GeometryAttributes-9d45f9e2","./IndexDatatype-6d2070e9","./IntersectionTests-b186d985","./Plane-a0c58786","./AxisAlignedBoundingBox-9187558e","./EllipsoidTangentPlane-dd3d1016","./EllipsoidRhumbLine-0c6cd7c8","./PolygonPipeline-28c8c9d7","./EllipsoidGeodesic-1abfd38d","./PolylinePipeline-e4210f09","./WallGeometryLibrary-35ddfbc5"],(function(e,i,t,a,n,r,o,s,l,d,m,u,p,f,c,h,g,y,v,E,_,C,b){"use strict";var A=new t.Cartesian3,H=new t.Cartesian3;function P(i){var n=(i=e.defaultValue(i,e.defaultValue.EMPTY_OBJECT)).positions,r=i.maximumHeights,o=i.minimumHeights,s=e.defaultValue(i.granularity,t.CesiumMath.RADIANS_PER_DEGREE),l=e.defaultValue(i.ellipsoid,a.Ellipsoid.WGS84);this._positions=n,this._minimumHeights=o,this._maximumHeights=r,this._granularity=s,this._ellipsoid=a.Ellipsoid.clone(l),this._workerName="createWallOutlineGeometry";var d=1+n.length*t.Cartesian3.packedLength+2;e.defined(o)&&(d+=o.length),e.defined(r)&&(d+=r.length),this.packedLength=d+a.Ellipsoid.packedLength+1}P.pack=function(i,n,r){var o;r=e.defaultValue(r,0);var s=i._positions,l=s.length;for(n[r++]=l,o=0;o<l;++o,r+=t.Cartesian3.packedLength)t.Cartesian3.pack(s[o],n,r);var d=i._minimumHeights;if(l=e.defined(d)?d.length:0,n[r++]=l,e.defined(d))for(o=0;o<l;++o)n[r++]=d[o];var m=i._maximumHeights;if(l=e.defined(m)?m.length:0,n[r++]=l,e.defined(m))for(o=0;o<l;++o)n[r++]=m[o];return a.Ellipsoid.pack(i._ellipsoid,n,r),n[r+=a.Ellipsoid.packedLength]=i._granularity,n};var k=a.Ellipsoid.clone(a.Ellipsoid.UNIT_SPHERE),w={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:k,granularity:void 0};return P.unpack=function(i,n,r){var o;n=e.defaultValue(n,0);var s,l,d=i[n++],m=new Array(d);for(o=0;o<d;++o,n+=t.Cartesian3.packedLength)m[o]=t.Cartesian3.unpack(i,n);if((d=i[n++])>0)for(s=new Array(d),o=0;o<d;++o)s[o]=i[n++];if((d=i[n++])>0)for(l=new Array(d),o=0;o<d;++o)l[o]=i[n++];var u=a.Ellipsoid.unpack(i,n,k),p=i[n+=a.Ellipsoid.packedLength];return e.defined(r)?(r._positions=m,r._minimumHeights=s,r._maximumHeights=l,r._ellipsoid=a.Ellipsoid.clone(u,r._ellipsoid),r._granularity=p,r):(w.positions=m,w.minimumHeights=s,w.maximumHeights=l,w.granularity=p,new P(w))},P.fromConstantHeights=function(i){var t,a,n=(i=e.defaultValue(i,e.defaultValue.EMPTY_OBJECT)).positions,r=i.minimumHeight,o=i.maximumHeight,s=e.defined(r),l=e.defined(o);if(s||l){var d=n.length;t=s?new Array(d):void 0,a=l?new Array(d):void 0;for(var m=0;m<d;++m)s&&(t[m]=r),l&&(a[m]=o)}return new P({positions:n,maximumHeights:a,minimumHeights:t,ellipsoid:i.ellipsoid})},P.createGeometry=function(i){var a=i._positions,r=i._minimumHeights,o=i._maximumHeights,s=i._granularity,l=i._ellipsoid,c=b.WallGeometryLibrary.computePositions(l,a,o,r,s,!1);if(e.defined(c)){var h,g=c.bottomPositions,y=c.topPositions,v=y.length,E=2*v,_=new Float64Array(E),C=0;for(v/=3,h=0;h<v;++h){var P=3*h,k=t.Cartesian3.fromArray(y,P,A),w=t.Cartesian3.fromArray(g,P,H);_[C++]=w.x,_[C++]=w.y,_[C++]=w.z,_[C++]=k.x,_[C++]=k.y,_[C++]=k.z}var x=new p.GeometryAttributes({position:new m.GeometryAttribute({componentDatatype:d.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:_})}),G=E/3;E=2*G-4+G;var L=f.IndexDatatype.createTypedArray(G,E),T=0;for(h=0;h<G-2;h+=2){var V=h,D=h+2,S=t.Cartesian3.fromArray(_,3*V,A),B=t.Cartesian3.fromArray(_,3*D,H);if(!t.Cartesian3.equalsEpsilon(S,B,t.CesiumMath.EPSILON10)){var I=h+1,R=h+3;L[T++]=I,L[T++]=V,L[T++]=I,L[T++]=R,L[T++]=V,L[T++]=D}}return L[T++]=G-2,L[T++]=G-1,new m.Geometry({attributes:x,indices:L,primitiveType:u.PrimitiveType.LINES,boundingSphere:new n.BoundingSphere.fromVertices(_)})}},function(i,t){return e.defined(t)&&(i=P.unpack(i,t)),i._ellipsoid=a.Ellipsoid.clone(i._ellipsoid),P.createGeometry(i)}}));