define(["./when-45f3d25d","./Check-34538dad","./Cartesian3-e69091b9","./Cartesian2-7a44370a","./BoundingSphere-bacc5cb6","./Matrix4-c65e6a1b","./RuntimeError-86da6af2","./Rectangle-c7d55cfa","./WebGLConstants-3660bc8f","./ComponentDatatype-86703c58","./GeometryAttribute-4777d9f4","./PrimitiveType-30fa6f85","./Transforms-68229cf3","./GeometryAttributes-9d45f9e2","./IndexDatatype-e52361bd","./IntersectionTests-e782669d","./Plane-18e7e6e4","./EllipsoidTangentPlane-c9b5e9c5","./EllipsoidRhumbLine-4bc7760a","./PolygonPipeline-d8c5b0db","./EllipsoidGeodesic-1d7258d7","./PolylinePipeline-8d0912d9","./WallGeometryLibrary-200aabe4"],(function(e,i,t,r,n,a,o,s,l,d,m,p,u,f,h,g,c,v,y,E,w,_,b){"use strict";var C=new t.Cartesian3,H=new t.Cartesian3;function A(n){n=e.defaultValue(n,e.defaultValue.EMPTY_OBJECT);var a=n.positions,o=n.maximumHeights,s=n.minimumHeights;if(!e.defined(a))throw new i.DeveloperError("options.positions is required.");if(e.defined(o)&&o.length!==a.length)throw new i.DeveloperError("options.positions and options.maximumHeights must have the same length.");if(e.defined(s)&&s.length!==a.length)throw new i.DeveloperError("options.positions and options.minimumHeights must have the same length.");var l=e.defaultValue(n.granularity,t.CesiumMath.RADIANS_PER_DEGREE),d=e.defaultValue(n.ellipsoid,r.Ellipsoid.WGS84);this._positions=a,this._minimumHeights=s,this._maximumHeights=o,this._granularity=l,this._ellipsoid=r.Ellipsoid.clone(d),this._workerName="createWallOutlineGeometry";var m=1+a.length*t.Cartesian3.packedLength+2;e.defined(s)&&(m+=s.length),e.defined(o)&&(m+=o.length),this.packedLength=m+r.Ellipsoid.packedLength+1}A.pack=function(n,a,o){if(!e.defined(n))throw new i.DeveloperError("value is required");if(!e.defined(a))throw new i.DeveloperError("array is required");var s;o=e.defaultValue(o,0);var l=n._positions,d=l.length;for(a[o++]=d,s=0;s<d;++s,o+=t.Cartesian3.packedLength)t.Cartesian3.pack(l[s],a,o);var m=n._minimumHeights;if(d=e.defined(m)?m.length:0,a[o++]=d,e.defined(m))for(s=0;s<d;++s)a[o++]=m[s];var p=n._maximumHeights;if(d=e.defined(p)?p.length:0,a[o++]=d,e.defined(p))for(s=0;s<d;++s)a[o++]=p[s];return r.Ellipsoid.pack(n._ellipsoid,a,o),o+=r.Ellipsoid.packedLength,a[o]=n._granularity,a};var P=r.Ellipsoid.clone(r.Ellipsoid.UNIT_SPHERE),k={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:P,granularity:void 0};function x(i,t){return e.defined(t)&&(i=A.unpack(i,t)),i._ellipsoid=r.Ellipsoid.clone(i._ellipsoid),A.createGeometry(i)}return A.unpack=function(n,a,o){if(!e.defined(n))throw new i.DeveloperError("array is required");var s;a=e.defaultValue(a,0);var l,d,m=n[a++],p=new Array(m);for(s=0;s<m;++s,a+=t.Cartesian3.packedLength)p[s]=t.Cartesian3.unpack(n,a);if(m=n[a++],m>0)for(l=new Array(m),s=0;s<m;++s)l[s]=n[a++];if(m=n[a++],m>0)for(d=new Array(m),s=0;s<m;++s)d[s]=n[a++];var u=r.Ellipsoid.unpack(n,a,P);a+=r.Ellipsoid.packedLength;var f=n[a];return e.defined(o)?(o._positions=p,o._minimumHeights=l,o._maximumHeights=d,o._ellipsoid=r.Ellipsoid.clone(u,o._ellipsoid),o._granularity=f,o):(k.positions=p,k.minimumHeights=l,k.maximumHeights=d,k.granularity=f,new A(k))},A.fromConstantHeights=function(t){t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT);var r,n,a=t.positions;if(!e.defined(a))throw new i.DeveloperError("options.positions is required.");var o=t.minimumHeight,s=t.maximumHeight,l=e.defined(o),d=e.defined(s);if(l||d){var m=a.length;r=l?new Array(m):void 0,n=d?new Array(m):void 0;for(var p=0;p<m;++p)l&&(r[p]=o),d&&(n[p]=s)}var u={positions:a,maximumHeights:n,minimumHeights:r,ellipsoid:t.ellipsoid};return new A(u)},A.createGeometry=function(i){var r=i._positions,a=i._minimumHeights,o=i._maximumHeights,s=i._granularity,l=i._ellipsoid,u=b.WallGeometryLibrary.computePositions(l,r,o,a,s,!1);if(e.defined(u)){var g,c=u.bottomPositions,v=u.topPositions,y=v.length,E=2*y,w=new Float64Array(E),_=0;for(y/=3,g=0;g<y;++g){var A=3*g,P=t.Cartesian3.fromArray(v,A,C),k=t.Cartesian3.fromArray(c,A,H);w[_++]=k.x,w[_++]=k.y,w[_++]=k.z,w[_++]=P.x,w[_++]=P.y,w[_++]=P.z}var x=new f.GeometryAttributes({position:new m.GeometryAttribute({componentDatatype:d.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:w})}),D=E/3;E=2*D-4+D;var G=h.IndexDatatype.createTypedArray(D,E),L=0;for(g=0;g<D-2;g+=2){var T=g,V=g+2,S=t.Cartesian3.fromArray(w,3*T,C),I=t.Cartesian3.fromArray(w,3*V,H);if(!t.Cartesian3.equalsEpsilon(S,I,t.CesiumMath.EPSILON10)){var R=g+1,q=g+3;G[L++]=R,G[L++]=T,G[L++]=R,G[L++]=q,G[L++]=T,G[L++]=V}}return G[L++]=D-2,G[L++]=D-1,new m.Geometry({attributes:x,indices:G,primitiveType:p.PrimitiveType.LINES,boundingSphere:new n.BoundingSphere.fromVertices(w)})}},x}));