define(["exports","./when-45f3d25d","./Check-34538dad","./Cartesian3-ef6ea826","./Cartesian2-a652b463","./Matrix4-f54b529f","./IntersectionTests-b186d985","./Plane-a0c58786","./EllipsoidRhumbLine-0c6cd7c8","./EllipsoidGeodesic-1abfd38d"],(function(a,e,r,t,n,i,s,o,c,u){"use strict";var l={getTriangleArea:function(a){let e=t.Cartesian3.subtract(a[0],a[1],new t.Cartesian3),r=t.Cartesian3.subtract(a[0],a[2],new t.Cartesian3),n=t.Cartesian3.cross(e,r,new t.Cartesian3);return.5*t.Cartesian3.magnitude(n)},numberOfPoints:function(a,e,r){var n=t.Cartesian3.distance(a,e);return Math.ceil(n/r)},numberOfPointsRhumbLine:function(a,e,r){var t=Math.pow(a.longitude-e.longitude,2)+Math.pow(a.latitude-e.latitude,2);return Math.ceil(Math.sqrt(t/(r*r)))}},h=new n.Cartographic;l.extractHeights=function(a,e){for(var r=a.length,t=new Array(r),n=0;n<r;n++){var i=a[n];t[n]=e.cartesianToCartographic(i,h).height}return t};var f=new i.Matrix4,C=new t.Cartesian3,d=new t.Cartesian3,g=new o.Plane(t.Cartesian3.UNIT_X,0),p=new t.Cartesian3,v=new o.Plane(t.Cartesian3.UNIT_X,0),m=new t.Cartesian3,w=new t.Cartesian3,T=[];function P(a,e,r){var t,n=T;if(n.length=a,e===r){for(t=0;t<a;t++)n[t]=e;return n}var i=(r-e)/a;for(t=0;t<a;t++){var s=e+t*i;n[t]=s}return n}var y=new n.Cartographic,A=new n.Cartographic,b=new t.Cartesian3,E=new t.Cartesian3,S=new t.Cartesian3,R=new u.EllipsoidGeodesic,M=new c.EllipsoidRhumbLine;function D(a,e,r,n,i,s,o,c){var u=n.scaleToGeodeticSurface(a,E),h=n.scaleToGeodeticSurface(e,S),f=l.numberOfPoints(a,e,r),C=n.cartesianToCartographic(u,y),d=n.cartesianToCartographic(h,A),g=P(f,i,s);R.setEndPoints(C,d);var p=R.surfaceDistance/f,v=c;C.height=i;var m=n.cartographicToCartesian(C,b);t.Cartesian3.pack(m,o,v),v+=3;for(var w=1;w<f;w++){var T=R.interpolateUsingSurfaceDistance(w*p,A);T.height=g[w],m=n.cartographicToCartesian(T,b),t.Cartesian3.pack(m,o,v),v+=3}return v}function x(a,e,r,n,i,s,o,u){var h=n.scaleToGeodeticSurface(a,E),f=n.scaleToGeodeticSurface(e,S),C=n.cartesianToCartographic(h,y),d=n.cartesianToCartographic(f,A),g=l.numberOfPointsRhumbLine(C,d,r),p=P(g,i,s);M.ellipsoid.equals(n)||(M=new c.EllipsoidRhumbLine(void 0,void 0,n)),M.setEndPoints(C,d);var v=M.surfaceDistance/g,m=u;C.height=i;var w=n.cartographicToCartesian(C,b);t.Cartesian3.pack(w,o,m),m+=3;for(var T=1;T<g;T++){var R=M.interpolateUsingSurfaceDistance(T*v,A);R.height=p[T],w=n.cartographicToCartesian(R,b),t.Cartesian3.pack(w,o,m),m+=3}return m}l.wrapLongitude=function(a,r){var n=[],c=[];if(e.defined(a)&&a.length>0){r=e.defaultValue(r,i.Matrix4.IDENTITY);var u=i.Matrix4.inverseTransformation(r,f),l=i.Matrix4.multiplyByPoint(u,t.Cartesian3.ZERO,C),h=t.Cartesian3.normalize(i.Matrix4.multiplyByPointAsVector(u,t.Cartesian3.UNIT_Y,d),d),T=o.Plane.fromPointNormal(l,h,g),P=t.Cartesian3.normalize(i.Matrix4.multiplyByPointAsVector(u,t.Cartesian3.UNIT_X,p),p),y=o.Plane.fromPointNormal(l,P,v),A=1;n.push(t.Cartesian3.clone(a[0]));for(var b=n[0],E=a.length,S=1;S<E;++S){var R=a[S];if(o.Plane.getPointDistance(y,b)<0||o.Plane.getPointDistance(y,R)<0){var M=s.IntersectionTests.lineSegmentPlane(b,R,T,m);if(e.defined(M)){var D=t.Cartesian3.multiplyByScalar(h,5e-9,w);o.Plane.getPointDistance(T,b)<0&&t.Cartesian3.negate(D,D),n.push(t.Cartesian3.add(M,D,new t.Cartesian3)),c.push(A+1),t.Cartesian3.negate(D,D),n.push(t.Cartesian3.add(M,D,new t.Cartesian3)),A=1}}n.push(t.Cartesian3.clone(a[S])),A++,b=R}c.push(A)}return{positions:n,lengths:c}},l.generateArc=function(a){e.defined(a)||(a={});var r=a.positions,i=r.length,s=e.defaultValue(a.ellipsoid,n.Ellipsoid.WGS84),o=e.defaultValue(a.height,0),c=Array.isArray(o);if(i<1)return[];if(1===i){var u=s.scaleToGeodeticSurface(r[0],E);if(0!==(o=c?o[0]:o)){var h=s.geodeticSurfaceNormal(u,b);t.Cartesian3.multiplyByScalar(h,o,h),t.Cartesian3.add(u,h,u)}return[u.x,u.y,u.z]}var f=a.minDistance;if(!e.defined(f)){var C=e.defaultValue(a.granularity,t.CesiumMath.RADIANS_PER_DEGREE);f=t.CesiumMath.chordLength(C,s.maximumRadius)}var d,g=0;for(d=0;d<i-1;d++)g+=l.numberOfPoints(r[d],r[d+1],f);var p=3*(g+1),v=new Array(p),m=0;for(d=0;d<i-1;d++)m=D(r[d],r[d+1],f,s,c?o[d]:o,c?o[d+1]:o,v,m);T.length=0;var w=r[i-1],P=s.cartesianToCartographic(w,y);P.height=c?o[i-1]:o;var A=s.cartographicToCartesian(P,b);return t.Cartesian3.pack(A,v,p-3),v};var G=new n.Cartographic,N=new n.Cartographic;l.generateRhumbArc=function(a){e.defined(a)||(a={});var r=a.positions,i=r.length,s=e.defaultValue(a.ellipsoid,n.Ellipsoid.WGS84),o=e.defaultValue(a.height,0),c=Array.isArray(o);if(i<1)return[];if(1===i){var u=s.scaleToGeodeticSurface(r[0],E);if(0!==(o=c?o[0]:o)){var h=s.geodeticSurfaceNormal(u,b);t.Cartesian3.multiplyByScalar(h,o,h),t.Cartesian3.add(u,h,u)}return[u.x,u.y,u.z]}var f,C,d=e.defaultValue(a.granularity,t.CesiumMath.RADIANS_PER_DEGREE),g=0,p=s.cartesianToCartographic(r[0],G);for(f=0;f<i-1;f++)C=s.cartesianToCartographic(r[f+1],N),g+=l.numberOfPointsRhumbLine(p,C,d),p=n.Cartographic.clone(C,G);var v=3*(g+1),m=new Array(v),w=0;for(f=0;f<i-1;f++)w=x(r[f],r[f+1],d,s,c?o[f]:o,c?o[f+1]:o,m,w);T.length=0;var P=r[i-1],A=s.cartesianToCartographic(P,y);A.height=c?o[i-1]:o;var S=s.cartographicToCartesian(A,b);return t.Cartesian3.pack(S,m,v-3),m},l.generateCartesianArc=function(a){for(var e=l.generateArc(a),r=e.length/3,n=new Array(r),i=0;i<r;i++)n[i]=t.Cartesian3.unpack(e,3*i);return n},l.generateCartesianRhumbArc=function(a){for(var e=l.generateRhumbArc(a),r=e.length/3,n=new Array(r),i=0;i<r;i++)n[i]=t.Cartesian3.unpack(e,3*i);return n},a.PolylinePipeline=l}));