define(["exports","./when-45f3d25d","./Cartesian3-eab74dc0","./Transforms-b9e6a92d","./Matrix4-e71118f5","./PolylineVolumeGeometryLibrary-3a198a3f","./PolylinePipeline-f8ba33fd"],(function(a,e,r,n,t,i,s){"use strict";var o={},C=new r.Cartesian3,l=new r.Cartesian3,y=new r.Cartesian3,u=new r.Cartesian3,d=[new r.Cartesian3,new r.Cartesian3],c=new r.Cartesian3,p=new r.Cartesian3,m=new r.Cartesian3,f=new r.Cartesian3,g=new r.Cartesian3,h=new r.Cartesian3,w=new r.Cartesian3,x=new r.Cartesian3,z=new r.Cartesian3,v=new r.Cartesian3,P=new n.Quaternion,A=new t.Matrix3;function B(a,e,s,o,y){var u,d=r.Cartesian3.angleBetween(r.Cartesian3.subtract(e,a,C),r.Cartesian3.subtract(s,a,l)),c=o===i.CornerType.BEVELED?1:Math.ceil(d/r.CesiumMath.toRadians(5))+1,p=3*c,m=new Array(p);m[p-3]=s.x,m[p-2]=s.y,m[p-1]=s.z,u=y?t.Matrix3.fromQuaternion(n.Quaternion.fromAxisAngle(r.Cartesian3.negate(a,C),d/c,P),A):t.Matrix3.fromQuaternion(n.Quaternion.fromAxisAngle(a,d/c,P),A);var f=0;e=r.Cartesian3.clone(e,C);for(var g=0;g<c;g++)e=t.Matrix3.multiplyByVector(u,e,e),m[f++]=e.x,m[f++]=e.y,m[f++]=e.z;return m}function E(a){var e=c,n=p,t=m,s=a[1];n=r.Cartesian3.fromArray(a[1],s.length-3,n),t=r.Cartesian3.fromArray(a[0],0,t),e=r.Cartesian3.midpoint(n,t,e);var o=B(e,n,t,i.CornerType.ROUNDED,!1),C=a.length-1,l=a[C-1];s=a[C],n=r.Cartesian3.fromArray(l,l.length-3,n),t=r.Cartesian3.fromArray(s,0,t),e=r.Cartesian3.midpoint(n,t,e);var y=B(e,n,t,i.CornerType.ROUNDED,!1);return[o,y]}function S(a,e,n,t){var i=C;return t||(e=r.Cartesian3.negate(e,e)),i=r.Cartesian3.add(a,e,i),[i.x,i.y,i.z,n.x,n.y,n.z]}function b(a,e,n,t){for(var i=new Array(a.length),s=new Array(a.length),o=r.Cartesian3.multiplyByScalar(e,n,C),d=r.Cartesian3.negate(o,l),c=0,p=a.length-1,m=0;m<a.length;m+=3){var f=r.Cartesian3.fromArray(a,m,y),g=r.Cartesian3.add(f,d,u);i[c++]=g.x,i[c++]=g.y,i[c++]=g.z;var h=r.Cartesian3.add(f,o,u);s[p--]=h.z,s[p--]=h.y,s[p--]=h.x}return t.push(i,s),t}o.addAttribute=function(a,r,n,t){var i=r.x,s=r.y,o=r.z;e.defined(n)&&(a[n]=i,a[n+1]=s,a[n+2]=o),e.defined(t)&&(a[t]=o,a[t-1]=s,a[t-2]=i)};var D=new r.Cartesian3,M=new r.Cartesian3;o.computePositions=function(a){var e,n=a.granularity,t=a.positions,o=a.ellipsoid,l=a.width/2,y=a.cornerType,u=a.saveAttributes,P=c,A=p,T=m,N=f,L=g,O=h,R=w,V=x,Q=z,U=v,G=[],I=u?[]:void 0,q=u?[]:void 0,j=t[0],k=t[1];A=r.Cartesian3.normalize(r.Cartesian3.subtract(k,j,A),A),P=o.geodeticSurfaceNormal(j,P),N=r.Cartesian3.normalize(r.Cartesian3.cross(P,A,N),N),u&&(I.push(N.x,N.y,N.z),q.push(P.x,P.y,P.z)),R=r.Cartesian3.clone(j,R),j=k,T=r.Cartesian3.negate(A,T);var F,H,J=[],K=t.length;for(F=1;F<K-1;F++){P=o.geodeticSurfaceNormal(j,P),k=t[F+1],A=r.Cartesian3.normalize(r.Cartesian3.subtract(k,j,A),A),L=r.Cartesian3.normalize(r.Cartesian3.add(A,T,L),L);var W=r.Cartesian3.multiplyByScalar(P,r.Cartesian3.dot(A,P),D);r.Cartesian3.subtract(A,W,W),r.Cartesian3.normalize(W,W);var X=r.Cartesian3.multiplyByScalar(P,r.Cartesian3.dot(T,P),M);r.Cartesian3.subtract(T,X,X),r.Cartesian3.normalize(X,X);var Y=!r.CesiumMath.equalsEpsilon(Math.abs(r.Cartesian3.dot(W,X)),1,r.CesiumMath.EPSILON7);if(Y){L=r.Cartesian3.cross(L,P,L),L=r.Cartesian3.cross(P,L,L),L=r.Cartesian3.normalize(L,L);var Z=l/Math.max(.25,r.Cartesian3.magnitude(r.Cartesian3.cross(L,T,C))),$=i.PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(A,T,j,o);L=r.Cartesian3.multiplyByScalar(L,Z,L),$?(V=r.Cartesian3.add(j,L,V),U=r.Cartesian3.add(V,r.Cartesian3.multiplyByScalar(N,l,U),U),Q=r.Cartesian3.add(V,r.Cartesian3.multiplyByScalar(N,2*l,Q),Q),d[0]=r.Cartesian3.clone(R,d[0]),d[1]=r.Cartesian3.clone(U,d[1]),e=s.PolylinePipeline.generateArc({positions:d,granularity:n,ellipsoid:o}),G=b(e,N,l,G),u&&(I.push(N.x,N.y,N.z),q.push(P.x,P.y,P.z)),O=r.Cartesian3.clone(Q,O),N=r.Cartesian3.normalize(r.Cartesian3.cross(P,A,N),N),Q=r.Cartesian3.add(V,r.Cartesian3.multiplyByScalar(N,2*l,Q),Q),R=r.Cartesian3.add(V,r.Cartesian3.multiplyByScalar(N,l,R),R),y===i.CornerType.ROUNDED||y===i.CornerType.BEVELED?J.push({leftPositions:B(V,O,Q,y,$)}):J.push({leftPositions:S(j,r.Cartesian3.negate(L,L),Q,$)})):(Q=r.Cartesian3.add(j,L,Q),U=r.Cartesian3.add(Q,r.Cartesian3.negate(r.Cartesian3.multiplyByScalar(N,l,U),U),U),V=r.Cartesian3.add(Q,r.Cartesian3.negate(r.Cartesian3.multiplyByScalar(N,2*l,V),V),V),d[0]=r.Cartesian3.clone(R,d[0]),d[1]=r.Cartesian3.clone(U,d[1]),e=s.PolylinePipeline.generateArc({positions:d,granularity:n,ellipsoid:o}),G=b(e,N,l,G),u&&(I.push(N.x,N.y,N.z),q.push(P.x,P.y,P.z)),O=r.Cartesian3.clone(V,O),N=r.Cartesian3.normalize(r.Cartesian3.cross(P,A,N),N),V=r.Cartesian3.add(Q,r.Cartesian3.negate(r.Cartesian3.multiplyByScalar(N,2*l,V),V),V),R=r.Cartesian3.add(Q,r.Cartesian3.negate(r.Cartesian3.multiplyByScalar(N,l,R),R),R),y===i.CornerType.ROUNDED||y===i.CornerType.BEVELED?J.push({rightPositions:B(Q,O,V,y,$)}):J.push({rightPositions:S(j,L,V,$)})),T=r.Cartesian3.negate(A,T)}j=k}return P=o.geodeticSurfaceNormal(j,P),d[0]=r.Cartesian3.clone(R,d[0]),d[1]=r.Cartesian3.clone(j,d[1]),e=s.PolylinePipeline.generateArc({positions:d,granularity:n,ellipsoid:o}),G=b(e,N,l,G),u&&(I.push(N.x,N.y,N.z),q.push(P.x,P.y,P.z)),y===i.CornerType.ROUNDED&&(H=E(G)),{positions:G,corners:J,lefts:I,normals:q,endPositions:H}},a.CorridorGeometryLibrary=o}));