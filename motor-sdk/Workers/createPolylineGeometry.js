define(["./when-45f3d25d","./Check-34538dad","./Cartesian3-eab74dc0","./Cartesian2-174fefc1","./BoundingSphere-37359cf8","./Transforms-6b57162d","./Matrix4-ed224189","./RuntimeError-86da6af2","./WebGLConstants-3660bc8f","./ComponentDatatype-86703c58","./GeometryAttribute-b1ed7c2e","./PrimitiveType-30fa6f85","./GeometryAttributes-9d45f9e2","./IndexDatatype-cb635cbc","./IntersectionTests-a310845d","./Plane-87957166","./VertexFormat-a00562ee","./arrayRemoveDuplicates-8b568181","./ArcType-39be7a32","./EllipsoidRhumbLine-de5cdc57","./EllipsoidGeodesic-96429ebd","./PolylinePipeline-8d76037d","./Color-79fa326c"],(function(e,t,r,a,o,n,i,l,s,p,d,c,u,y,f,h,m,v,C,g,w,E,_){"use strict";var A=[];function b(e,t,r,a,o){var n,i=A;i.length=o;var l=r.red,s=r.green,p=r.blue,d=r.alpha,c=a.red,u=a.green,y=a.blue,f=a.alpha;if(_.Color.equals(r,a)){for(n=0;n<o;n++)i[n]=_.Color.clone(r);return i}var h=(c-l)/o,m=(u-s)/o,v=(y-p)/o,C=(f-d)/o;for(n=0;n<o;n++)i[n]=new _.Color(l+n*h,s+n*m,p+n*v,d+n*C);return i}function P(o){o=e.defaultValue(o,e.defaultValue.EMPTY_OBJECT);var n=o.positions,i=o.colors,l=e.defaultValue(o.width,1),s=e.defaultValue(o.colorsPerVertex,!1);if(!e.defined(n)||n.length<2)throw new t.DeveloperError("At least two positions are required.");if("number"!==typeof l)throw new t.DeveloperError("width must be a number");if(e.defined(i)&&(s&&i.length<n.length||!s&&i.length<n.length-1))throw new t.DeveloperError("colors has an invalid length.");this._positions=n,this._colors=i,this._width=l,this._colorsPerVertex=s,this._vertexFormat=m.VertexFormat.clone(e.defaultValue(o.vertexFormat,m.VertexFormat.DEFAULT)),this._arcType=e.defaultValue(o.arcType,C.ArcType.GEODESIC),this._granularity=e.defaultValue(o.granularity,r.CesiumMath.RADIANS_PER_DEGREE),this._ellipsoid=a.Ellipsoid.clone(e.defaultValue(o.ellipsoid,a.Ellipsoid.WGS84)),this._workerName="createPolylineGeometry";var p=1+n.length*r.Cartesian3.packedLength;p+=e.defined(i)?1+i.length*_.Color.packedLength:1,this.packedLength=p+a.Ellipsoid.packedLength+m.VertexFormat.packedLength+4}P.pack=function(o,n,i){if(!e.defined(o))throw new t.DeveloperError("value is required");if(!e.defined(n))throw new t.DeveloperError("array is required");var l;i=e.defaultValue(i,0);var s=o._positions,p=s.length;for(n[i++]=p,l=0;l<p;++l,i+=r.Cartesian3.packedLength)r.Cartesian3.pack(s[l],n,i);var d=o._colors;for(p=e.defined(d)?d.length:0,n[i++]=p,l=0;l<p;++l,i+=_.Color.packedLength)_.Color.pack(d[l],n,i);return a.Ellipsoid.pack(o._ellipsoid,n,i),i+=a.Ellipsoid.packedLength,m.VertexFormat.pack(o._vertexFormat,n,i),i+=m.VertexFormat.packedLength,n[i++]=o._width,n[i++]=o._colorsPerVertex?1:0,n[i++]=o._arcType,n[i]=o._granularity,n};var D=a.Ellipsoid.clone(a.Ellipsoid.UNIT_SPHERE),T=new m.VertexFormat,x={positions:void 0,colors:void 0,ellipsoid:D,vertexFormat:T,width:void 0,colorsPerVertex:void 0,arcType:void 0,granularity:void 0};P.unpack=function(o,n,i){if(!e.defined(o))throw new t.DeveloperError("array is required");var l;n=e.defaultValue(n,0);var s=o[n++],p=new Array(s);for(l=0;l<s;++l,n+=r.Cartesian3.packedLength)p[l]=r.Cartesian3.unpack(o,n);s=o[n++];var d=s>0?new Array(s):void 0;for(l=0;l<s;++l,n+=_.Color.packedLength)d[l]=_.Color.unpack(o,n);var c=a.Ellipsoid.unpack(o,n,D);n+=a.Ellipsoid.packedLength;var u=m.VertexFormat.unpack(o,n,T);n+=m.VertexFormat.packedLength;var y=o[n++],f=1===o[n++],h=o[n++],v=o[n];return e.defined(i)?(i._positions=p,i._colors=d,i._ellipsoid=a.Ellipsoid.clone(c,i._ellipsoid),i._vertexFormat=m.VertexFormat.clone(u,i._vertexFormat),i._width=y,i._colorsPerVertex=f,i._arcType=h,i._granularity=v,i):(x.positions=p,x.colors=d,x.width=y,x.colorsPerVertex=f,x.arcType=h,x.granularity=v,new P(x))};var k=new r.Cartesian3,V=new r.Cartesian3,L=new r.Cartesian3,F=new r.Cartesian3;function G(t,r){return e.defined(r)&&(t=P.unpack(t,r)),t._ellipsoid=a.Ellipsoid.clone(t._ellipsoid),P.createGeometry(t)}return P.createGeometry=function(t){var a,n,i,l=t._width,s=t._vertexFormat,f=t._colors,h=t._colorsPerVertex,m=t._arcType,g=t._granularity,w=t._ellipsoid,P=v.arrayRemoveDuplicates(t._positions,r.Cartesian3.equalsEpsilon),D=P.length;if(!(D<2||l<=0)){if(m===C.ArcType.GEODESIC||m===C.ArcType.RHUMB){var T,x;m===C.ArcType.GEODESIC?(T=r.CesiumMath.chordLength(g,w.maximumRadius),x=E.PolylinePipeline.numberOfPoints):(T=g,x=E.PolylinePipeline.numberOfPointsRhumbLine);var G=E.PolylinePipeline.extractHeights(P,w);if(e.defined(f)){var O=1;for(a=0;a<D-1;++a)O+=x(P[a],P[a+1],T);var R=new Array(O),S=0;for(a=0;a<D-1;++a){var B=P[a],I=P[a+1],U=f[a],N=x(B,I,T);if(h&&a<O){var q=f[a+1],M=b(B,I,U,q,N),H=M.length;for(n=0;n<H;++n)R[S++]=M[n]}else for(n=0;n<N;++n)R[S++]=_.Color.clone(U)}R[S]=_.Color.clone(f[f.length-1]),f=R,A.length=0}P=m===C.ArcType.GEODESIC?E.PolylinePipeline.generateCartesianArc({positions:P,minDistance:T,ellipsoid:w,height:G}):E.PolylinePipeline.generateCartesianRhumbArc({positions:P,granularity:T,ellipsoid:w,height:G})}D=P.length;var W,Y=4*D-4,z=new Float64Array(3*Y),J=new Float64Array(3*Y),j=new Float64Array(3*Y),K=new Float32Array(2*Y),Q=s.st?new Float32Array(2*Y):void 0,X=e.defined(f)?new Uint8Array(4*Y):void 0,Z=0,$=0,ee=0,te=0;for(n=0;n<D;++n){var re,ae;0===n?(W=k,r.Cartesian3.subtract(P[0],P[1],W),r.Cartesian3.add(P[0],W,W)):W=P[n-1],r.Cartesian3.clone(W,L),r.Cartesian3.clone(P[n],V),n===D-1?(W=k,r.Cartesian3.subtract(P[D-1],P[D-2],W),r.Cartesian3.add(P[D-1],W,W)):W=P[n+1],r.Cartesian3.clone(W,F),e.defined(X)&&(re=0===n||h?f[n]:f[n-1],n!==D-1&&(ae=f[n]));var oe=0===n?2:0,ne=n===D-1?2:4;for(i=oe;i<ne;++i){r.Cartesian3.pack(V,z,Z),r.Cartesian3.pack(L,J,Z),r.Cartesian3.pack(F,j,Z),Z+=3;var ie=i-2<0?-1:1;if(K[$++]=i%2*2-1,K[$++]=ie*l,s.st&&(Q[ee++]=n/(D-1),Q[ee++]=Math.max(K[$-2],0)),e.defined(X)){var le=i<2?re:ae;X[te++]=_.Color.floatToByte(le.red),X[te++]=_.Color.floatToByte(le.green),X[te++]=_.Color.floatToByte(le.blue),X[te++]=_.Color.floatToByte(le.alpha)}}}var se=new u.GeometryAttributes;se.position=new d.GeometryAttribute({componentDatatype:p.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:z}),se.prevPosition=new d.GeometryAttribute({componentDatatype:p.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:J}),se.nextPosition=new d.GeometryAttribute({componentDatatype:p.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:j}),se.expandAndWidth=new d.GeometryAttribute({componentDatatype:p.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:K}),s.st&&(se.st=new d.GeometryAttribute({componentDatatype:p.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:Q})),e.defined(X)&&(se.color=new d.GeometryAttribute({componentDatatype:p.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:4,values:X,normalize:!0}));var pe=y.IndexDatatype.createTypedArray(Y,6*D-6),de=0,ce=0,ue=D-1;for(n=0;n<ue;++n)pe[ce++]=de,pe[ce++]=de+2,pe[ce++]=de+1,pe[ce++]=de+1,pe[ce++]=de+2,pe[ce++]=de+3,de+=4;return new d.Geometry({attributes:se,indices:pe,primitiveType:c.PrimitiveType.TRIANGLES,boundingSphere:o.BoundingSphere.fromPoints(P),geometryType:d.GeometryType.POLYLINES})}},G}));