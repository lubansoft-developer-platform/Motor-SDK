{"version":3,"file":"createPhysicalEngine.js","sources":["../../../../Source/Extension/Source/Physical/PhysicalLogicType.js","../../../../Source/Scene/Axis.js","../../../../Source/WorkersES6/createPhysicalEngine.js"],"sourcesContent":["/**\n * @private\n */\nvar PhysicalLogicType = {\n    ADD_PRIMITIVE: 0,\n    UPDATE: 1,\n    PICK_FROM_RAY: 2, //射线PICK\n    UPDATE_INSTANCE_MATRIX: 3, //更新lod树的matrix\n    UPDATE_PRIMITIVE_MATRIX: 4, //更新PRIMITIVE的matrix\n};\nexport default Object.freeze(PhysicalLogicType);\n","import Check from \"../Core/Check.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\n\n/**\n * An enum describing the x, y, and z axes and helper conversion functions.\n *\n * @enum {Number}\n */\nvar Axis = {\n    /**\n     * Denotes the x-axis.\n     *\n     * @type {Number}\n     * @constant\n     */\n    X: 0,\n\n    /**\n     * Denotes the y-axis.\n     *\n     * @type {Number}\n     * @constant\n     */\n    Y: 1,\n\n    /**\n     * Denotes the z-axis.\n     *\n     * @type {Number}\n     * @constant\n     */\n    Z: 2,\n\n    /**\n     * Matrix used to convert from y-up to z-up\n     *\n     * @type {Matrix4}\n     * @constant\n     */\n    Y_UP_TO_Z_UP: Matrix4.fromRotationTranslation(\n        Matrix3.fromRotationX(CesiumMath.PI_OVER_TWO)\n    ),\n\n    /**\n     * Matrix used to convert from z-up to y-up\n     *\n     * @type {Matrix4}\n     * @constant\n     */\n    Z_UP_TO_Y_UP: Matrix4.fromRotationTranslation(\n        Matrix3.fromRotationX(-CesiumMath.PI_OVER_TWO)\n    ),\n\n    /**\n     * Matrix used to convert from x-up to z-up\n     *\n     * @type {Matrix4}\n     * @constant\n     */\n    X_UP_TO_Z_UP: Matrix4.fromRotationTranslation(\n        Matrix3.fromRotationY(-CesiumMath.PI_OVER_TWO)\n    ),\n\n    /**\n     * Matrix used to convert from z-up to x-up\n     *\n     * @type {Matrix4}\n     * @constant\n     */\n    Z_UP_TO_X_UP: Matrix4.fromRotationTranslation(\n        Matrix3.fromRotationY(CesiumMath.PI_OVER_TWO)\n    ),\n\n    /**\n     * Matrix used to convert from x-up to y-up\n     *\n     * @type {Matrix4}\n     * @constant\n     */\n    X_UP_TO_Y_UP: Matrix4.fromRotationTranslation(\n        Matrix3.fromRotationZ(CesiumMath.PI_OVER_TWO)\n    ),\n\n    /**\n     * Matrix used to convert from y-up to x-up\n     *\n     * @type {Matrix4}\n     * @constant\n     */\n    Y_UP_TO_X_UP: Matrix4.fromRotationTranslation(\n        Matrix3.fromRotationZ(-CesiumMath.PI_OVER_TWO)\n    ),\n\n    // /**\n    //  * Gets the axis by name\n    //  *\n    //  * @param {String} name The name of the axis.\n    //  * @returns {Number} The axis enum.\n    //  */\n    // fromName : function(name) {\n    //     //>>includeStart('debug', pragmas.debug);\n    //     Check.typeOf.string('name', name);\n    //     //>>includeEnd('debug');\n\n    //     return Axis[name];\n    // }\n};\n/**\n * Gets the axis by name\n *\n * @param {String} name The name of the axis.\n * @returns {Number} The axis enum.\n */\nAxis.fromName = function (name) {\n    //>>includeStart('debug', pragmas.debug);\n    Check.typeOf.string(\"name\", name);\n    //>>includeEnd('debug');\n\n    return Axis[name];\n};\nexport default Object.freeze(Axis);\n","/* global require */\nimport defined from '../Core/defined.js';\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\nimport PhysicalLogicType from '../Extension/Source/Physical/PhysicalLogicType.js';\nimport DeveloperError from '../Core/DeveloperError.js';\nimport Matrix4 from '../Core/Matrix4.js';\nimport Axis from '../Scene/Axis.js';\nimport CreatePhysicalArray from '../Extension/Source/Worker/CreatePhysicalArray.js';\nimport EmWrapperManager, { emMod } from '../Extension/Source/Worker/EmWrapperManager.js';\n\nvar physicalModule;\nvar lbSpaMgr;\nvar keyCollection;\nvar primitiveCollection;\nvar pMat;\nvar cSpaSelectCondition;\nvar cSpaSelectResult;\n\n\nvar defautlNodeMatrixArray = Matrix4.toArray(Axis.Y_UP_TO_Z_UP);\nvar projectCenterMatrix = new Matrix4();\nvar nodeMatrix = new Matrix4();\nvar instanceMatrix = new Matrix4();\n\n\nfunction taskDispatcher(parameters) {\n    switch (parameters.logicType) {\n        case PhysicalLogicType.UPDATE_INSTANCE_MATRIX: {\n            updateLodInstanceMatrix(parameters);\n            break;\n        }\n        case PhysicalLogicType.ADD_PRIMITIVE: {\n            addPrimitives(parameters);\n            break;\n        }\n        case PhysicalLogicType.UPDATE_PRIMITIVE_MATRIX: {\n            updatePrimitivesMatrix(parameters);\n            break;\n        }\n        case PhysicalLogicType.UPDATE: {\n            lbSpaMgr.EnableAllPrimitiveSelected(false);\n            selectPrimitive(parameters.selectedModelIdArray);\n            selectIndexesPrimitive(parameters.selectedModelIdIndexArray);\n            removePrimitive(parameters.removedModelIdArray);\n            break;\n        }\n        case PhysicalLogicType.PICK_FROM_RAY: {\n            return getSearchResult(parameters);\n        }\n        default:\n            throw new DeveloperError('physicalLogicType is not a valid value.');\n    }\n    return true;\n}\n\nfunction selectPrimitive(modelIdArray) {\n    if (defined(modelIdArray) && modelIdArray.length > 0) {\n        for (var index = 0; index < modelIdArray.length; ++index) {\n            var modelId = modelIdArray[index];\n            if (keyCollection.has(modelId)) {\n                var array = keyCollection.get(modelId);\n                for (var pointer of array) {\n                    lbSpaMgr.EnablePrimitiveSelected(pointer, true);\n                }\n            }\n        }\n    }\n}\n\nfunction selectIndexesPrimitive(modelIdIndexArray) {\n    if (defined(modelIdIndexArray) && modelIdIndexArray.length > 0) {\n        for (var index = 0; index < modelIdIndexArray.length; ++index) {\n            var modelId = modelIdIndexArray[index].modelId;\n            var unSelectedIndexArray = modelIdIndexArray[index].unSelectedIndexArray;\n            if (keyCollection.has(modelId)) {\n                var array = keyCollection.get(modelId);\n                for (var pointer of array) {\n                    lbSpaMgr.EnablePrimitiveSelected(pointer, true);\n                    var primitiveCluster = lbSpaMgr.GetPrimitiveCluster(pointer);\n                    if (primitiveCluster.ptr !== 0) {\n                        primitiveCluster.EnableAllIndexSelected(true);\n                        for (let i = 0; i < unSelectedIndexArray.length; i++) {\n                            primitiveCluster.EnableIndexSelected(unSelectedIndexArray[i], false);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction addPrimitives(parameters) {\n    var primitives = parameters.primitives;\n    var modelId = parameters.modelId;\n    if (primitives.length > 0 && defined(modelId)) {\n        for (var primitive of primitives) {\n            addPrimitive(modelId, primitive);\n        }\n    }\n}\n\nfunction updatePrimitivesMatrix(parameters) {\n    var primitiveMatrixArray = parameters.primitiveMatrixArray;\n    if (primitiveMatrixArray.length > 0) {\n        for (var primitiveMatrix of primitiveMatrixArray) {\n            var modelId = primitiveMatrix.modelId;\n            var primitiveMatrixTypeArray = primitiveMatrix.primitiveMatrixTypeArray;\n            if (keyCollection.has(modelId)) {\n                var modelArray = keyCollection.get(modelId);\n                for (var index = 0; index < modelArray.length; ++index) {\n                    var pointer = modelArray[index];\n                    setSpatialMatrix(pointer, primitiveMatrixTypeArray);\n                }\n            }\n        }\n    }\n}\n\nfunction addPrimitive(modelId, primitive) {\n    var physicalArray = primitive.physicalArray;\n    var physicalArrayOptions = primitive.physicalArrayOptions;\n    var projectCenterMatrixArray = primitive.projectCenterMatrixArray;\n    var pointer;\n\n    var pPrimitiveSpatial;\n    if(defined(physicalArray)){\n        //serial read\n        var pSerialRead = new physicalModule.LBSpaSerial();\n        var pBufferAry = physicalModule._malloc(physicalArray.byteLength);\n        physicalModule.HEAPU8.set(physicalArray, pBufferAry);\n        pPrimitiveSpatial = pSerialRead.ReadSpatial(pBufferAry, physicalArray.byteLength);\n        physicalModule._free(pBufferAry);\n        physicalModule.destroy(pSerialRead);\n    }\n    if(defined(physicalArrayOptions)){\n        var pPtAry = physicalArrayOptions.pPtAry;\n        var pBatchIdAry = physicalArrayOptions.pBatchIdAry;\n        var pIndexAry = physicalArrayOptions.pIndexAry;\n        var pEdgeCheckAry = physicalArrayOptions.pEdgeCheckAry;\n        var primitiveMode = physicalArrayOptions.primitiveMode;\n        pPrimitiveSpatial = CreatePhysicalArray.createSpaPrimitive(physicalModule, lbSpaMgr, primitiveMode, pPtAry, pBatchIdAry, pIndexAry, pEdgeCheckAry);\n    }\n\n    if (defined(primitive.instanceMatrixTypeArray) || defined(primitive.lodInstanceMatrixTypeArray)) {\n        var pPrimitiveCluster = lbSpaMgr.CreatePrimitiveCluster(pPrimitiveSpatial);\n        pointer = lbSpaMgr.AddPrimitiveSpatial(pPrimitiveCluster);\n\n        var isLodInstance = defined(primitive.lodInstanceMatrixTypeArray);\n        var nodeMatrixArray = isLodInstance ? defautlNodeMatrixArray : undefined;\n        var instanceArray = isLodInstance ? primitive.lodInstanceMatrixTypeArray : primitive.instanceMatrixTypeArray;\n        setInstanceMatrix(pPrimitiveCluster, projectCenterMatrixArray, nodeMatrixArray, instanceArray, isLodInstance);\n    } else {\n        pointer = lbSpaMgr.AddPrimitiveSpatial(pPrimitiveSpatial);\n        setSpatialMatrix(pointer, projectCenterMatrixArray);\n    }\n    addToKeyCollection(modelId, pointer);\n\n    return pointer;\n}\n\nfunction setSpatialMatrix(pointer, projectCenterMatrixArray) {\n    if (defined(projectCenterMatrixArray)) {\n        cvtMatrixAryToMat(projectCenterMatrixArray, pMat);\n        lbSpaMgr.SetPrimitiveSpatialMat(pointer, pMat);\n    }\n}\n\nfunction setInstanceMatrix(primitiveCluster, projectCenterMatrixArray, nodeMatrixArray, instanceMatrixTypeArray, isLodInstance) {\n    defined(projectCenterMatrixArray) && Matrix4.fromArray(projectCenterMatrixArray, 0, projectCenterMatrix);\n    defined(nodeMatrixArray) && Matrix4.fromArray(nodeMatrixArray, 0, nodeMatrix);\n    for (var index = 0; index < instanceMatrixTypeArray.length; index += 16) {\n        Matrix4.fromArray(instanceMatrixTypeArray, index, instanceMatrix);\n        if (defined(nodeMatrixArray)) {\n            Matrix4.multiply(instanceMatrix, nodeMatrix, instanceMatrix);\n        }\n        if (!isLodInstance && defined(projectCenterMatrixArray)) {\n            //静态模型Instance\n            Matrix4.multiply(projectCenterMatrix, instanceMatrix, instanceMatrix);\n        }\n        cvtMatrixAryToMat(instanceMatrix, pMat);\n        primitiveCluster.SetIndexMatrix(index / 16, pMat);\n    }\n}\n\nfunction updateLodInstanceMatrix(parameters) {\n    var instanceMatrixArray = parameters.instanceMatrixArray;\n    for (var instance of instanceMatrixArray) {\n        var modelId = instance.modelId;\n        var instanceMatrixTypeArray = instance.instanceMatrixTypeArray;\n        if (keyCollection.has(modelId)) {\n            var modelArray = keyCollection.get(modelId);\n            for (var index = 0; index < modelArray.length; ++index) {\n                var pointer = modelArray[index];\n                var primitiveCluster = lbSpaMgr.GetPrimitiveCluster(pointer);\n                if (primitiveCluster.ptr !== 0) {\n                    primitiveCluster.RemoveAllMatrix();\n                    setInstanceMatrix(primitiveCluster, undefined, defautlNodeMatrixArray, instanceMatrixTypeArray, true);\n                }\n            }\n        }\n    }\n}\n\nfunction cvtMatrixAryToMat(pMatrixAry, pMat) {\n    for (var i = 0; i < 4; ++i) {\n        var cCol = pMat.At(i);\n        cCol.x = pMatrixAry[i * 4];\n        cCol.y = pMatrixAry[i * 4 + 1];\n        cCol.z = pMatrixAry[i * 4 + 2];\n        cCol.w = pMatrixAry[i * 4 + 3];\n    }\n}\n\nfunction addToKeyCollection(modelId, pointer) {\n    var modelArray;\n    if (keyCollection.has(modelId)) {\n        modelArray = keyCollection.get(modelId);\n        modelArray.push(pointer);\n    } else {\n        modelArray = [];\n        modelArray.push(pointer);\n        keyCollection.set(modelId, modelArray);\n    }\n    primitiveCollection.set(pointer, modelId);\n}\n\nfunction removePrimitive(modelIdArray) {\n    if (defined(modelIdArray) && modelIdArray.length > 0) {\n        for (var index = 0; index < modelIdArray.length; ++index) {\n            var modelId = modelIdArray[index];\n            if (keyCollection.has(modelId)) {\n                var array = keyCollection.get(modelId);\n                for (var pointer of array) {\n                    lbSpaMgr.RemovePrimitiveSpatial(pointer);\n                    primitiveCollection.delete(pointer);\n                }\n                keyCollection.delete(modelId);\n            }\n        }\n    }\n}\n\nfunction getSearchResult(parameters) {\n    var result = {};\n    var rayArray = parameters.ray;\n    var triangleMode = parameters.triangleMode;\n    var lineMode = parameters.lineMode;\n    var maxDist = defined(parameters.maxDist) ? parameters.maxDist : 0.1;\n\n    cSpaSelectCondition.SetRay(rayArray[0], rayArray[1], rayArray[2], rayArray[3], rayArray[4], rayArray[5], maxDist, triangleMode, lineMode);\n    if (lbSpaMgr.Select(cSpaSelectCondition, cSpaSelectResult)) {\n        if (triangleMode) {\n            result.triPrimitives = [];\n            for (let index = 0; index < cSpaSelectResult.GetTriResultElemSize(); ++index) {\n                const triPrimitive = {};\n                getSpaTriSelElem(cSpaSelectResult.GetTriResultElem(index), triPrimitive);\n                result.triPrimitives.push(triPrimitive);\n            }\n        }\n\n        if (lineMode) {\n            result.segPrimitives = [];\n            for (let index = 0; index < cSpaSelectResult.GetSegResultElemSize(); ++index) {\n                const segPrimitive = {};\n                getSpaSegSelElem(cSpaSelectResult.GetSegResultElem(index), segPrimitive);\n                result.segPrimitives.push(segPrimitive);\n            }\n        }\n    }\n    cSpaSelectResult.ClearAll();\n    return result;\n}\n\nfunction getSpaTriSelElem(triResultItem, result) {\n    result.modelId = primitiveCollection.get(triResultItem.GetResultId().iPrimitiveId);\n    result.isCluster = triResultItem.GetResultId().bCluster;\n    result.batchId = triResultItem.GetResultId().iBatchId;\n    result.vertices = [{x: triResultItem.GetPt0().x, y: triResultItem.GetPt0().y, z: triResultItem.GetPt0().z},\n                       {x: triResultItem.GetPt1().x, y: triResultItem.GetPt1().y, z: triResultItem.GetPt1().z},\n                       {x: triResultItem.GetPt2().x, y: triResultItem.GetPt2().y, z: triResultItem.GetPt2().z}];\n    result.pickPt = {x: triResultItem.GetPickPt().x, y: triResultItem.GetPickPt().y, z: triResultItem.GetPickPt().z};\n    result.pickDist = triResultItem.GetPickDist();\n}\n\nfunction getSpaSegSelElem(segResultItem, result) {\n    result.modelId = primitiveCollection.get(segResultItem.GetResultId().iPrimitiveId);\n    result.isCluster = segResultItem.GetResultId().bCluster;\n    result.batchId = segResultItem.GetResultId().iBatchId;\n    result.vertices = [{x: segResultItem.GetPt0().x, y: segResultItem.GetPt0().y, z: segResultItem.GetPt0().z},\n                       {x: segResultItem.GetPt1().x, y: segResultItem.GetPt1().y, z: segResultItem.GetPt1().z}];\n    result.segPt = {x: segResultItem.GetSegPt().x, y: segResultItem.GetSegPt().y, z: segResultItem.GetSegPt().z};\n    result.pickPt = {x: segResultItem.GetPickPt().x, y: segResultItem.GetPickPt().y, z: segResultItem.GetPickPt().z};\n    result.pickDist = segResultItem.GetPickDist();\n}\n\nfunction initPyMod() {\n    lbSpaMgr = new physicalModule.LBSpaMgr();\n    keyCollection = new Map();\n    primitiveCollection = new Map();\n    pMat = new physicalModule.LBSpaMat();\n    cSpaSelectCondition = new physicalModule.LBSpaSelectCondition();\n    cSpaSelectResult = new physicalModule.LBSpaSelectResult();\n}\n\nfunction createPhysicalEngine(event) {\n    var data = event.data;\n    var wasmConfig = data.webAssemblyConfig;\n    if (defined(wasmConfig)) {\n        if(defined(wasmConfig.debug)){\n            return require([wasmConfig.debug], function (currentModule) {\n                physicalModule = currentModule();\n                initPyMod();\n                self.onmessage = createTaskProcessorWorker(taskDispatcher);\n                self.postMessage(true);\n            });\n        }\n        EmWrapperManager.initWebAssembly(wasmConfig.wasmBinaryFileES6).then(function () {\n            physicalModule = emMod;\n            initPyMod();\n            self.onmessage = createTaskProcessorWorker(taskDispatcher);\n            self.postMessage(true);\n        });\n    }\n}\n\nexport default createPhysicalEngine;\n"],"names":["Matrix4","Matrix3","CesiumMath","Check","Axis","PhysicalLogicType","DeveloperError","defined","CreatePhysicalArray","EmWrapperManager","emMod"],"mappings":"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"}