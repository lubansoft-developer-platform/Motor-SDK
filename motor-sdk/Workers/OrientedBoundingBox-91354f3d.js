define(["exports","./when-45f3d25d","./Check-34538dad","./Cartesian3-ef6ea826","./Cartesian2-a652b463","./BoundingSphere-038d5fbc","./Transforms-c8a82813","./Matrix4-f54b529f","./Plane-a0c58786","./EllipsoidTangentPlane-dd3d1016"],(function(a,t,e,n,r,i,s,o,C,c){"use strict";function u(a,e){this.center=n.Cartesian3.clone(t.defaultValue(a,n.Cartesian3.ZERO)),this.halfAxes=o.Matrix3.clone(t.defaultValue(e,o.Matrix3.ZERO))}u.packedLength=n.Cartesian3.packedLength+o.Matrix3.packedLength,u.pack=function(a,e,r){return r=t.defaultValue(r,0),n.Cartesian3.pack(a.center,e,r),o.Matrix3.pack(a.halfAxes,e,r+n.Cartesian3.packedLength),e},u.unpack=function(a,e,r){return e=t.defaultValue(e,0),t.defined(r)||(r=new u),n.Cartesian3.unpack(a,e,r.center),o.Matrix3.unpack(a,e+n.Cartesian3.packedLength,r.halfAxes),r};var d=new n.Cartesian3,l=new n.Cartesian3,h=new n.Cartesian3,x=new n.Cartesian3,m=new n.Cartesian3,M=new n.Cartesian3,f=new o.Matrix3,p={unitary:new o.Matrix3,diagonal:new o.Matrix3};u.fromPoints=function(a,e){if(t.defined(e)||(e=new u),!t.defined(a)||0===a.length)return e.halfAxes=o.Matrix3.ZERO,e.center=n.Cartesian3.ZERO,e;var r,i=a.length,s=n.Cartesian3.clone(a[0],d);for(r=1;r<i;r++)n.Cartesian3.add(s,a[r],s);var C=1/i;n.Cartesian3.multiplyByScalar(s,C,s);var c,g=0,w=0,y=0,b=0,O=0,P=0;for(r=0;r<i;r++)g+=(c=n.Cartesian3.subtract(a[r],s,l)).x*c.x,w+=c.x*c.y,y+=c.x*c.z,b+=c.y*c.y,O+=c.y*c.z,P+=c.z*c.z;g*=C,w*=C,y*=C,b*=C,O*=C,P*=C;var N=f;N[0]=g,N[1]=w,N[2]=y,N[3]=w,N[4]=b,N[5]=O,N[6]=y,N[7]=O,N[8]=P;var v=o.Matrix3.computeEigenDecomposition(N,p),A=o.Matrix3.clone(v.unitary,e.halfAxes),T=o.Matrix3.getColumn(A,0,x),R=o.Matrix3.getColumn(A,1,m),I=o.Matrix3.getColumn(A,2,M),E=-Number.MAX_VALUE,L=-Number.MAX_VALUE,S=-Number.MAX_VALUE,z=Number.MAX_VALUE,B=Number.MAX_VALUE,U=Number.MAX_VALUE;for(r=0;r<i;r++)c=a[r],E=Math.max(n.Cartesian3.dot(T,c),E),L=Math.max(n.Cartesian3.dot(R,c),L),S=Math.max(n.Cartesian3.dot(I,c),S),z=Math.min(n.Cartesian3.dot(T,c),z),B=Math.min(n.Cartesian3.dot(R,c),B),U=Math.min(n.Cartesian3.dot(I,c),U);T=n.Cartesian3.multiplyByScalar(T,.5*(z+E),T),R=n.Cartesian3.multiplyByScalar(R,.5*(B+L),R),I=n.Cartesian3.multiplyByScalar(I,.5*(U+S),I);var V=n.Cartesian3.add(T,R,e.center);n.Cartesian3.add(V,I,V);var _=h;return _.x=E-z,_.y=L-B,_.z=S-U,n.Cartesian3.multiplyByScalar(_,.5,_),o.Matrix3.multiplyByScale(e.halfAxes,_,e.halfAxes),e};var g=new n.Cartesian3,w=new n.Cartesian3;function y(a,e,r,i,s,C,c,d,l,h,x){t.defined(x)||(x=new u);var m=x.halfAxes;o.Matrix3.setColumn(m,0,e,m),o.Matrix3.setColumn(m,1,r,m),o.Matrix3.setColumn(m,2,i,m);var M=g;M.x=(s+C)/2,M.y=(c+d)/2,M.z=(l+h)/2;var f=w;f.x=(C-s)/2,f.y=(d-c)/2,f.z=(h-l)/2;var p=x.center;return M=o.Matrix3.multiplyByVector(m,M,M),n.Cartesian3.add(a,M,p),o.Matrix3.multiplyByScale(m,f,m),x}var b=new r.Cartographic,O=new n.Cartesian3,P=new r.Cartographic,N=new r.Cartographic,v=new r.Cartographic,A=new r.Cartographic,T=new r.Cartographic,R=new n.Cartesian3,I=new n.Cartesian3,E=new n.Cartesian3,L=new n.Cartesian3,S=new n.Cartesian3,z=new r.Cartesian2,B=new r.Cartesian2,U=new r.Cartesian2,V=new r.Cartesian2,_=new r.Cartesian2,k=new n.Cartesian3,W=new n.Cartesian3,D=new n.Cartesian3,q=new n.Cartesian3,X=new r.Cartesian2,j=new n.Cartesian3,Z=new n.Cartesian3,G=new n.Cartesian3,F=new C.Plane(n.Cartesian3.UNIT_X,0);u.fromRectangle=function(a,e,i,s,o){var u,d,l,h,x,m,M;if(e=t.defaultValue(e,0),i=t.defaultValue(i,0),s=t.defaultValue(s,r.Ellipsoid.WGS84),a.width<=n.CesiumMath.PI){var f=r.Rectangle.center(a,b),p=s.cartographicToCartesian(f,O),g=new c.EllipsoidTangentPlane(p,s);M=g.plane;var w=f.longitude,Y=a.south<0&&a.north>0?0:f.latitude,H=r.Cartographic.fromRadians(w,a.north,i,P),J=r.Cartographic.fromRadians(a.west,a.north,i,N),K=r.Cartographic.fromRadians(a.west,Y,i,v),Q=r.Cartographic.fromRadians(a.west,a.south,i,A),$=r.Cartographic.fromRadians(w,a.south,i,T),aa=s.cartographicToCartesian(H,R),ta=s.cartographicToCartesian(J,I),ea=s.cartographicToCartesian(K,E),na=s.cartographicToCartesian(Q,L),ra=s.cartographicToCartesian($,S),ia=g.projectPointToNearestOnPlane(aa,z),sa=g.projectPointToNearestOnPlane(ta,B),oa=g.projectPointToNearestOnPlane(ea,U),Ca=g.projectPointToNearestOnPlane(na,V),ca=g.projectPointToNearestOnPlane(ra,_);return d=-(u=Math.min(sa.x,oa.x,Ca.x)),h=Math.max(sa.y,ia.y),l=Math.min(Ca.y,ca.y),J.height=Q.height=e,ta=s.cartographicToCartesian(J,I),na=s.cartographicToCartesian(Q,L),x=Math.min(C.Plane.getPointDistance(M,ta),C.Plane.getPointDistance(M,na)),m=i,y(g.origin,g.xAxis,g.yAxis,g.zAxis,u,d,l,h,x,m,o)}var ua=a.south>0,da=a.north<0,la=ua?a.south:da?a.north:0,ha=r.Rectangle.center(a,b).longitude,xa=n.Cartesian3.fromRadians(ha,la,i,s,k);xa.z=0;var ma=Math.abs(xa.x)<n.CesiumMath.EPSILON10&&Math.abs(xa.y)<n.CesiumMath.EPSILON10?n.Cartesian3.UNIT_X:n.Cartesian3.normalize(xa,W),Ma=n.Cartesian3.UNIT_Z,fa=n.Cartesian3.cross(ma,Ma,D);M=C.Plane.fromPointNormal(xa,ma,F);var pa=n.Cartesian3.fromRadians(ha+n.CesiumMath.PI_OVER_TWO,la,i,s,q);u=-(d=n.Cartesian3.dot(C.Plane.projectPointOntoPlane(M,pa,X),fa)),h=n.Cartesian3.fromRadians(0,a.north,da?e:i,s,j).z,l=n.Cartesian3.fromRadians(0,a.south,ua?e:i,s,Z).z;var ga=n.Cartesian3.fromRadians(a.east,la,i,s,G);return y(xa,fa,Ma,ma,u,d,l,h,x=C.Plane.getPointDistance(M,ga),m=0,o)},u.clone=function(a,e){if(t.defined(a))return t.defined(e)?(n.Cartesian3.clone(a.center,e.center),o.Matrix3.clone(a.halfAxes,e.halfAxes),e):new u(a.center,a.halfAxes)},u.intersectPlane=function(a,t){var e=a.center,r=t.normal,i=a.halfAxes,C=r.x,c=r.y,u=r.z,d=Math.abs(C*i[o.Matrix3.COLUMN0ROW0]+c*i[o.Matrix3.COLUMN0ROW1]+u*i[o.Matrix3.COLUMN0ROW2])+Math.abs(C*i[o.Matrix3.COLUMN1ROW0]+c*i[o.Matrix3.COLUMN1ROW1]+u*i[o.Matrix3.COLUMN1ROW2])+Math.abs(C*i[o.Matrix3.COLUMN2ROW0]+c*i[o.Matrix3.COLUMN2ROW1]+u*i[o.Matrix3.COLUMN2ROW2]),l=n.Cartesian3.dot(r,e)+t.distance;return l<=-d?s.Intersect.OUTSIDE:l>=d?s.Intersect.INSIDE:s.Intersect.INTERSECTING};var Y=new n.Cartesian3,H=new n.Cartesian3,J=new n.Cartesian3,K=new n.Cartesian3;u.distanceSquaredTo=function(a,t){var e=n.Cartesian3.subtract(t,a.center,g),r=a.halfAxes,i=o.Matrix3.getColumn(r,0,Y),s=o.Matrix3.getColumn(r,1,H),C=o.Matrix3.getColumn(r,2,J),c=n.Cartesian3.magnitude(i),u=n.Cartesian3.magnitude(s),d=n.Cartesian3.magnitude(C);n.Cartesian3.normalize(i,i),n.Cartesian3.normalize(s,s),n.Cartesian3.normalize(C,C);var l=K;l.x=n.Cartesian3.dot(e,i),l.y=n.Cartesian3.dot(e,s),l.z=n.Cartesian3.dot(e,C);var h,x=0;return l.x<-c?x+=(h=l.x+c)*h:l.x>c&&(x+=(h=l.x-c)*h),l.y<-u?x+=(h=l.y+u)*h:l.y>u&&(x+=(h=l.y-u)*h),l.z<-d?x+=(h=l.z+d)*h:l.z>d&&(x+=(h=l.z-d)*h),x};var Q=new n.Cartesian3,$=new n.Cartesian3;u.computePlaneDistances=function(a,e,r,s){t.defined(s)||(s=new i.Interval);var C=Number.POSITIVE_INFINITY,c=Number.NEGATIVE_INFINITY,u=a.center,d=a.halfAxes,l=o.Matrix3.getColumn(d,0,Y),h=o.Matrix3.getColumn(d,1,H),x=o.Matrix3.getColumn(d,2,J),m=n.Cartesian3.add(l,h,Q);n.Cartesian3.add(m,x,m),n.Cartesian3.add(m,u,m);var M=n.Cartesian3.subtract(m,e,$),f=n.Cartesian3.dot(r,M);return C=Math.min(f,C),c=Math.max(f,c),n.Cartesian3.add(u,l,m),n.Cartesian3.add(m,h,m),n.Cartesian3.subtract(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(r,M),C=Math.min(f,C),c=Math.max(f,c),n.Cartesian3.add(u,l,m),n.Cartesian3.subtract(m,h,m),n.Cartesian3.add(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(r,M),C=Math.min(f,C),c=Math.max(f,c),n.Cartesian3.add(u,l,m),n.Cartesian3.subtract(m,h,m),n.Cartesian3.subtract(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(r,M),C=Math.min(f,C),c=Math.max(f,c),n.Cartesian3.subtract(u,l,m),n.Cartesian3.add(m,h,m),n.Cartesian3.add(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(r,M),C=Math.min(f,C),c=Math.max(f,c),n.Cartesian3.subtract(u,l,m),n.Cartesian3.add(m,h,m),n.Cartesian3.subtract(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(r,M),C=Math.min(f,C),c=Math.max(f,c),n.Cartesian3.subtract(u,l,m),n.Cartesian3.subtract(m,h,m),n.Cartesian3.add(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(r,M),C=Math.min(f,C),c=Math.max(f,c),n.Cartesian3.subtract(u,l,m),n.Cartesian3.subtract(m,h,m),n.Cartesian3.subtract(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(r,M),C=Math.min(f,C),c=Math.max(f,c),s.start=C,s.stop=c,s};var aa=new i.BoundingSphere;u.isOccluded=function(a,t){var e=i.BoundingSphere.fromOrientedBoundingBox(a,aa);return!t.isBoundingSphereVisible(e)},u.prototype.intersectPlane=function(a){return u.intersectPlane(this,a)},u.prototype.distanceSquaredTo=function(a){return u.distanceSquaredTo(this,a)},u.prototype.computePlaneDistances=function(a,t,e){return u.computePlaneDistances(this,a,t,e)},u.prototype.isOccluded=function(a){return u.isOccluded(this,a)},u.equals=function(a,e){return a===e||t.defined(a)&&t.defined(e)&&n.Cartesian3.equals(a.center,e.center)&&o.Matrix3.equals(a.halfAxes,e.halfAxes)},u.prototype.clone=function(a){return u.clone(this,a)},u.prototype.equals=function(a){return u.equals(this,a)};var ta=new n.Cartesian3;u.prototype.intersectRay=function(a){var t=i.BoundingSphere.fromOrientedBoundingBox(this,aa),e=t.center,r=n.Cartesian3.subtract(e,a.origin,ta);return n.Cartesian3.magnitude(n.Cartesian3.cross(r,a.direction,ta))<=t.radius},a.OrientedBoundingBox=u}));