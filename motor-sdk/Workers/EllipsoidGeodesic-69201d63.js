define(["exports","./when-52cea266","./Check-ee5dd8a8","./Cartesian2-7c55a82d","./Rectangle-88e14f21"],(function(t,a,e,i,n){"use strict";function s(t){var a=t._uSquared,e=t._ellipsoid.maximumRadius,i=t._ellipsoid.minimumRadius,n=(e-i)/e,s=Math.cos(t._startHeading),r=Math.sin(t._startHeading),h=(1-n)*Math.tan(t._start.latitude),d=1/Math.sqrt(1+h*h),o=d*h,c=Math.atan2(h,s),u=d*r,M=u*u,l=1-M,g=Math.sqrt(l),_=a/4,p=_*_,f=p*_,v=p*p,C=1+_-3*p/4+5*f/4-175*v/64,m=1-_+15*p/8-35*f/8,H=1-3*_+35*p/4,O=1-5*_,q=C*c-m*Math.sin(2*c)*_/2-H*Math.sin(4*c)*p/16-O*Math.sin(6*c)*f/48-5*Math.sin(8*c)*v/512,S=t._constants;S.a=e,S.b=i,S.f=n,S.cosineHeading=s,S.sineHeading=r,S.tanU=h,S.cosineU=d,S.sineU=o,S.sigma=c,S.sineAlpha=u,S.sineSquaredAlpha=M,S.cosineSquaredAlpha=l,S.cosineAlpha=g,S.u2Over4=_,S.u4Over16=p,S.u6Over64=f,S.u8Over256=v,S.a0=C,S.a1=m,S.a2=H,S.a3=O,S.distanceRatio=q}function r(t,a){return t*a*(4+t*(4-3*a))/16}function h(t,a,e,i,n,s,h){var d=r(t,e);return(1-d)*t*a*(i+d*n*(h+d*s*(2*h*h-1)))}function d(t,a,e,n,s,r,d){var o,c,u,M,l,g=(a-e)/a,_=r-n,p=Math.atan((1-g)*Math.tan(s)),f=Math.atan((1-g)*Math.tan(d)),v=Math.cos(p),C=Math.sin(p),m=Math.cos(f),H=Math.sin(f),O=v*m,q=v*H,S=C*H,b=C*m,k=_,w=i.CesiumMath.TWO_PI,U=Math.cos(k),A=Math.sin(k);do{U=Math.cos(k),A=Math.sin(k);var R,y=q-b*U;u=Math.sqrt(m*m*A*A+y*y),c=S+O*U,o=Math.atan2(u,c),0===u?(R=0,M=1):(R=O*A/u,M=1-R*R),w=k,l=c-2*S/M,isNaN(l)&&(l=0),k=_+h(g,R,M,o,u,c,l)}while(Math.abs(k-w)>i.CesiumMath.EPSILON12);var E=M*(a*a-e*e)/(e*e),P=1+E*(4096+E*(E*(320-175*E)-768))/16384,T=E*(256+E*(E*(74-47*E)-128))/1024,x=l*l,D=T*u*(l+T*(c*(2*x-1)-T*l*(4*u*u-3)*(4*x-3)/6)/4),I=e*P*(o-D),N=Math.atan2(m*A,q-b*U),z=Math.atan2(v*A,q*U-b);t._distance=I,t._startHeading=N,t._endHeading=z,t._uSquared=E}var o=new i.Cartesian3,c=new i.Cartesian3;function u(t,a,r,h){var u=i.Cartesian3.normalize(h.cartographicToCartesian(a,c),o),M=i.Cartesian3.normalize(h.cartographicToCartesian(r,c),c);e.Check.typeOf.number.greaterThanOrEquals("value",Math.abs(Math.abs(i.Cartesian3.angleBetween(u,M))-Math.PI),.0125),d(t,h.maximumRadius,h.minimumRadius,a.longitude,a.latitude,r.longitude,r.latitude),t._start=n.Cartographic.clone(a,t._start),t._end=n.Cartographic.clone(r,t._end),t._start.height=0,t._end.height=0,s(t)}function M(t,e,i){var s=a.defaultValue(i,n.Ellipsoid.WGS84);this._ellipsoid=s,this._start=new n.Cartographic,this._end=new n.Cartographic,this._constants={},this._startHeading=void 0,this._endHeading=void 0,this._distance=void 0,this._uSquared=void 0,a.defined(t)&&a.defined(e)&&u(this,t,e,s)}Object.defineProperties(M.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return e.Check.defined("distance",this._distance),this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},startHeading:{get:function(){return e.Check.defined("distance",this._distance),this._startHeading}},endHeading:{get:function(){return e.Check.defined("distance",this._distance),this._endHeading}}}),M.prototype.setEndPoints=function(t,a){e.Check.defined("start",t),e.Check.defined("end",a),u(this,t,a,this._ellipsoid)},M.prototype.interpolateUsingFraction=function(t,a){return this.interpolateUsingSurfaceDistance(this._distance*t,a)},M.prototype.interpolateUsingSurfaceDistance=function(t,i){e.Check.defined("distance",this._distance);var s=this._constants,r=s.distanceRatio+t/s.b,d=Math.cos(2*r),o=Math.cos(4*r),c=Math.cos(6*r),u=Math.sin(2*r),M=Math.sin(4*r),l=Math.sin(6*r),g=Math.sin(8*r),_=r*r,p=r*_,f=s.u8Over256,v=s.u2Over4,C=s.u6Over64,m=s.u4Over16,H=2*p*f*d/3+r*(1-v+7*m/4-15*C/4+579*f/64-(m-15*C/4+187*f/16)*d-(5*C/4-115*f/16)*o-29*f*c/16)+(v/2-m+71*C/32-85*f/16)*u+(5*m/16-5*C/4+383*f/96)*M-_*((C-11*f/2)*u+5*f*M/2)+(29*C/96-29*f/16)*l+539*f*g/1536,O=Math.asin(Math.sin(H)*s.cosineAlpha),q=Math.atan(s.a/s.b*Math.tan(O));H-=s.sigma;var S=Math.cos(2*s.sigma+H),b=Math.sin(H),k=Math.cos(H),w=s.cosineU*k,U=s.sineU*b,A=Math.atan2(b*s.sineHeading,w-U*s.cosineHeading),R=A-h(s.f,s.sineAlpha,s.cosineSquaredAlpha,H,b,k,S);return a.defined(i)?(i.longitude=this._start.longitude+R,i.latitude=q,i.height=0,i):new n.Cartographic(this._start.longitude+R,q,0)},t.EllipsoidGeodesic=M}));