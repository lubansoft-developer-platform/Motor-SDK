define(["exports","./when-45f3d25d","./Cartesian3-ef6ea826","./Transforms-c8a82813","./Matrix4-f54b529f","./PolylineVolumeGeometryLibrary-78e26dc0","./PolylinePipeline-e4210f09"],(function(a,e,r,n,t,i,s){"use strict";var o={},C=new r.Cartesian3,l=new r.Cartesian3,y=new r.Cartesian3,u=new r.Cartesian3,c=[new r.Cartesian3,new r.Cartesian3],d=new r.Cartesian3,p=new r.Cartesian3,m=new r.Cartesian3,f=new r.Cartesian3,g=new r.Cartesian3,h=new r.Cartesian3,w=new r.Cartesian3,x=new r.Cartesian3,z=new r.Cartesian3,v=new r.Cartesian3,P=new n.Quaternion,A=new t.Matrix3;function B(a,e,s,o,y){var u,c=r.Cartesian3.angleBetween(r.Cartesian3.subtract(e,a,C),r.Cartesian3.subtract(s,a,l)),d=o===i.CornerType.BEVELED?1:Math.ceil(c/r.CesiumMath.toRadians(5))+1,p=3*d,m=new Array(p);m[p-3]=s.x,m[p-2]=s.y,m[p-1]=s.z,u=y?t.Matrix3.fromQuaternion(n.Quaternion.fromAxisAngle(r.Cartesian3.negate(a,C),c/d,P),A):t.Matrix3.fromQuaternion(n.Quaternion.fromAxisAngle(a,c/d,P),A);var f=0;e=r.Cartesian3.clone(e,C);for(var g=0;g<d;g++)e=t.Matrix3.multiplyByVector(u,e,e),m[f++]=e.x,m[f++]=e.y,m[f++]=e.z;return m}function E(a,e,n,t){var i=C;return t||(e=r.Cartesian3.negate(e,e)),[(i=r.Cartesian3.add(a,e,i)).x,i.y,i.z,n.x,n.y,n.z]}function S(a,e,n,t){for(var i=new Array(a.length),s=new Array(a.length),o=r.Cartesian3.multiplyByScalar(e,n,C),c=r.Cartesian3.negate(o,l),d=0,p=a.length-1,m=0;m<a.length;m+=3){var f=r.Cartesian3.fromArray(a,m,y),g=r.Cartesian3.add(f,c,u);i[d++]=g.x,i[d++]=g.y,i[d++]=g.z;var h=r.Cartesian3.add(f,o,u);s[p--]=h.z,s[p--]=h.y,s[p--]=h.x}return t.push(i,s),t}o.addAttribute=function(a,r,n,t){var i=r.x,s=r.y,o=r.z;e.defined(n)&&(a[n]=i,a[n+1]=s,a[n+2]=o),e.defined(t)&&(a[t]=o,a[t-1]=s,a[t-2]=i)};var b=new r.Cartesian3,D=new r.Cartesian3;o.computePositions=function(a){var e=a.granularity,n=a.positions,t=a.ellipsoid,o=a.width/2,l=a.cornerType,y=a.saveAttributes,u=d,P=p,A=m,M=f,T=g,N=h,L=w,O=x,R=z,V=v,Q=[],U=y?[]:void 0,G=y?[]:void 0,I=n[0],q=n[1];P=r.Cartesian3.normalize(r.Cartesian3.subtract(q,I,P),P),u=t.geodeticSurfaceNormal(I,u),M=r.Cartesian3.normalize(r.Cartesian3.cross(u,P,M),M),y&&(U.push(M.x,M.y,M.z),G.push(u.x,u.y,u.z)),L=r.Cartesian3.clone(I,L),I=q,A=r.Cartesian3.negate(P,A);var j,k,F=[],H=n.length;for(j=1;j<H-1;j++){u=t.geodeticSurfaceNormal(I,u),q=n[j+1],P=r.Cartesian3.normalize(r.Cartesian3.subtract(q,I,P),P),T=r.Cartesian3.normalize(r.Cartesian3.add(P,A,T),T);var J=r.Cartesian3.multiplyByScalar(u,r.Cartesian3.dot(P,u),b);r.Cartesian3.subtract(P,J,J),r.Cartesian3.normalize(J,J);var K=r.Cartesian3.multiplyByScalar(u,r.Cartesian3.dot(A,u),D);if(r.Cartesian3.subtract(A,K,K),r.Cartesian3.normalize(K,K),!r.CesiumMath.equalsEpsilon(Math.abs(r.Cartesian3.dot(J,K)),1,r.CesiumMath.EPSILON7)){T=r.Cartesian3.cross(T,u,T),T=r.Cartesian3.cross(u,T,T),T=r.Cartesian3.normalize(T,T);var W=o/Math.max(.25,r.Cartesian3.magnitude(r.Cartesian3.cross(T,A,C))),X=i.PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(P,A,I,t);T=r.Cartesian3.multiplyByScalar(T,W,T),X?(O=r.Cartesian3.add(I,T,O),V=r.Cartesian3.add(O,r.Cartesian3.multiplyByScalar(M,o,V),V),R=r.Cartesian3.add(O,r.Cartesian3.multiplyByScalar(M,2*o,R),R),c[0]=r.Cartesian3.clone(L,c[0]),c[1]=r.Cartesian3.clone(V,c[1]),Q=S(s.PolylinePipeline.generateArc({positions:c,granularity:e,ellipsoid:t}),M,o,Q),y&&(U.push(M.x,M.y,M.z),G.push(u.x,u.y,u.z)),N=r.Cartesian3.clone(R,N),M=r.Cartesian3.normalize(r.Cartesian3.cross(u,P,M),M),R=r.Cartesian3.add(O,r.Cartesian3.multiplyByScalar(M,2*o,R),R),L=r.Cartesian3.add(O,r.Cartesian3.multiplyByScalar(M,o,L),L),l===i.CornerType.ROUNDED||l===i.CornerType.BEVELED?F.push({leftPositions:B(O,N,R,l,X)}):F.push({leftPositions:E(I,r.Cartesian3.negate(T,T),R,X)})):(R=r.Cartesian3.add(I,T,R),V=r.Cartesian3.add(R,r.Cartesian3.negate(r.Cartesian3.multiplyByScalar(M,o,V),V),V),O=r.Cartesian3.add(R,r.Cartesian3.negate(r.Cartesian3.multiplyByScalar(M,2*o,O),O),O),c[0]=r.Cartesian3.clone(L,c[0]),c[1]=r.Cartesian3.clone(V,c[1]),Q=S(s.PolylinePipeline.generateArc({positions:c,granularity:e,ellipsoid:t}),M,o,Q),y&&(U.push(M.x,M.y,M.z),G.push(u.x,u.y,u.z)),N=r.Cartesian3.clone(O,N),M=r.Cartesian3.normalize(r.Cartesian3.cross(u,P,M),M),O=r.Cartesian3.add(R,r.Cartesian3.negate(r.Cartesian3.multiplyByScalar(M,2*o,O),O),O),L=r.Cartesian3.add(R,r.Cartesian3.negate(r.Cartesian3.multiplyByScalar(M,o,L),L),L),l===i.CornerType.ROUNDED||l===i.CornerType.BEVELED?F.push({rightPositions:B(R,N,O,l,X)}):F.push({rightPositions:E(I,T,O,X)})),A=r.Cartesian3.negate(P,A)}I=q}return u=t.geodeticSurfaceNormal(I,u),c[0]=r.Cartesian3.clone(L,c[0]),c[1]=r.Cartesian3.clone(I,c[1]),Q=S(s.PolylinePipeline.generateArc({positions:c,granularity:e,ellipsoid:t}),M,o,Q),y&&(U.push(M.x,M.y,M.z),G.push(u.x,u.y,u.z)),l===i.CornerType.ROUNDED&&(k=function(a){var e=d,n=p,t=m,s=a[1];n=r.Cartesian3.fromArray(a[1],s.length-3,n),t=r.Cartesian3.fromArray(a[0],0,t);var o=B(e=r.Cartesian3.midpoint(n,t,e),n,t,i.CornerType.ROUNDED,!1),C=a.length-1,l=a[C-1];return s=a[C],n=r.Cartesian3.fromArray(l,l.length-3,n),t=r.Cartesian3.fromArray(s,0,t),[o,B(e=r.Cartesian3.midpoint(n,t,e),n,t,i.CornerType.ROUNDED,!1)]}(Q)),{positions:Q,corners:F,lefts:U,normals:G,endPositions:k}},a.CorridorGeometryLibrary=o}));