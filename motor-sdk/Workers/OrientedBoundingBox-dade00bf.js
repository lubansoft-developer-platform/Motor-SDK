define(["exports","./when-45f3d25d","./Check-34538dad","./Cartesian3-eab74dc0","./Cartesian2-174fefc1","./BoundingSphere-f8921934","./Transforms-b9e6a92d","./Matrix4-e71118f5","./Plane-79c493f8","./EllipsoidTangentPlane-26c08d38"],(function(a,e,t,r,n,i,s,o,d,C){"use strict";function u(a,t){this.center=r.Cartesian3.clone(e.defaultValue(a,r.Cartesian3.ZERO)),this.halfAxes=o.Matrix3.clone(e.defaultValue(t,o.Matrix3.ZERO))}u.packedLength=r.Cartesian3.packedLength+o.Matrix3.packedLength,u.pack=function(a,n,i){return t.Check.typeOf.object("value",a),t.Check.defined("array",n),i=e.defaultValue(i,0),r.Cartesian3.pack(a.center,n,i),o.Matrix3.pack(a.halfAxes,n,i+r.Cartesian3.packedLength),n},u.unpack=function(a,n,i){return t.Check.defined("array",a),n=e.defaultValue(n,0),e.defined(i)||(i=new u),r.Cartesian3.unpack(a,n,i.center),o.Matrix3.unpack(a,n+r.Cartesian3.packedLength,i.halfAxes),i};var c=new r.Cartesian3,l=new r.Cartesian3,h=new r.Cartesian3,f=new r.Cartesian3,m=new r.Cartesian3,x=new r.Cartesian3,p=new o.Matrix3,M={unitary:new o.Matrix3,diagonal:new o.Matrix3};u.fromPoints=function(a,t){if(e.defined(t)||(t=new u),!e.defined(a)||0===a.length)return t.halfAxes=o.Matrix3.ZERO,t.center=r.Cartesian3.ZERO,t;var n,i=a.length,s=r.Cartesian3.clone(a[0],c);for(n=1;n<i;n++)r.Cartesian3.add(s,a[n],s);var d=1/i;r.Cartesian3.multiplyByScalar(s,d,s);var C,w=0,g=0,v=0,y=0,b=0,O=0;for(n=0;n<i;n++)C=r.Cartesian3.subtract(a[n],s,l),w+=C.x*C.x,g+=C.x*C.y,v+=C.x*C.z,y+=C.y*C.y,b+=C.y*C.z,O+=C.z*C.z;w*=d,g*=d,v*=d,y*=d,b*=d,O*=d;var E=p;E[0]=w,E[1]=g,E[2]=v,E[3]=g,E[4]=y,E[5]=b,E[6]=v,E[7]=b,E[8]=O;var P=o.Matrix3.computeEigenDecomposition(E,M),N=o.Matrix3.clone(P.unitary,t.halfAxes),A=o.Matrix3.getColumn(N,0,f),R=o.Matrix3.getColumn(N,1,m),T=o.Matrix3.getColumn(N,2,x),I=-Number.MAX_VALUE,D=-Number.MAX_VALUE,L=-Number.MAX_VALUE,S=Number.MAX_VALUE,z=Number.MAX_VALUE,q=Number.MAX_VALUE;for(n=0;n<i;n++)C=a[n],I=Math.max(r.Cartesian3.dot(A,C),I),D=Math.max(r.Cartesian3.dot(R,C),D),L=Math.max(r.Cartesian3.dot(T,C),L),S=Math.min(r.Cartesian3.dot(A,C),S),z=Math.min(r.Cartesian3.dot(R,C),z),q=Math.min(r.Cartesian3.dot(T,C),q);A=r.Cartesian3.multiplyByScalar(A,.5*(S+I),A),R=r.Cartesian3.multiplyByScalar(R,.5*(z+D),R),T=r.Cartesian3.multiplyByScalar(T,.5*(q+L),T);var B=r.Cartesian3.add(A,R,t.center);r.Cartesian3.add(B,T,B);var U=h;return U.x=I-S,U.y=D-z,U.z=L-q,r.Cartesian3.multiplyByScalar(U,.5,U),o.Matrix3.multiplyByScale(t.halfAxes,U,t.halfAxes),t};var w=new r.Cartesian3,g=new r.Cartesian3;function v(a,n,i,s,d,C,c,l,h,f,m){if(!e.defined(d)||!e.defined(C)||!e.defined(c)||!e.defined(l)||!e.defined(h)||!e.defined(f))throw new t.DeveloperError("all extents (minimum/maximum X/Y/Z) are required.");e.defined(m)||(m=new u);var x=m.halfAxes;o.Matrix3.setColumn(x,0,n,x),o.Matrix3.setColumn(x,1,i,x),o.Matrix3.setColumn(x,2,s,x);var p=w;p.x=(d+C)/2,p.y=(c+l)/2,p.z=(h+f)/2;var M=g;M.x=(C-d)/2,M.y=(l-c)/2,M.z=(f-h)/2;var v=m.center;return p=o.Matrix3.multiplyByVector(x,p,p),r.Cartesian3.add(a,p,v),o.Matrix3.multiplyByScale(x,M,x),m}var y=new n.Cartographic,b=new r.Cartesian3,O=new n.Cartographic,E=new n.Cartographic,P=new n.Cartographic,N=new n.Cartographic,A=new n.Cartographic,R=new r.Cartesian3,T=new r.Cartesian3,I=new r.Cartesian3,D=new r.Cartesian3,L=new r.Cartesian3,S=new n.Cartesian2,z=new n.Cartesian2,q=new n.Cartesian2,B=new n.Cartesian2,U=new n.Cartesian2,V=new r.Cartesian3,k=new r.Cartesian3,_=new r.Cartesian3,W=new r.Cartesian3,X=new n.Cartesian2,j=new r.Cartesian3,Z=new r.Cartesian3,G=new r.Cartesian3,Y=new d.Plane(r.Cartesian3.UNIT_X,0);u.fromRectangle=function(a,i,s,o,u){if(!e.defined(a))throw new t.DeveloperError("rectangle is required");if(a.width<0||a.width>r.CesiumMath.TWO_PI)throw new t.DeveloperError("Rectangle width must be between 0 and 2*pi");if(a.height<0||a.height>r.CesiumMath.PI)throw new t.DeveloperError("Rectangle height must be between 0 and pi");if(e.defined(o)&&!r.CesiumMath.equalsEpsilon(o.radii.x,o.radii.y,r.CesiumMath.EPSILON15))throw new t.DeveloperError("Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)");var c,l,h,f,m,x,p;if(i=e.defaultValue(i,0),s=e.defaultValue(s,0),o=e.defaultValue(o,n.Ellipsoid.WGS84),a.width<=r.CesiumMath.PI){var M=n.Rectangle.center(a,y),w=o.cartographicToCartesian(M,b),g=new C.EllipsoidTangentPlane(w,o);p=g.plane;var F=M.longitude,H=a.south<0&&a.north>0?0:M.latitude,J=n.Cartographic.fromRadians(F,a.north,s,O),K=n.Cartographic.fromRadians(a.west,a.north,s,E),Q=n.Cartographic.fromRadians(a.west,H,s,P),$=n.Cartographic.fromRadians(a.west,a.south,s,N),aa=n.Cartographic.fromRadians(F,a.south,s,A),ea=o.cartographicToCartesian(J,R),ta=o.cartographicToCartesian(K,T),ra=o.cartographicToCartesian(Q,I),na=o.cartographicToCartesian($,D),ia=o.cartographicToCartesian(aa,L),sa=g.projectPointToNearestOnPlane(ea,S),oa=g.projectPointToNearestOnPlane(ta,z),da=g.projectPointToNearestOnPlane(ra,q),Ca=g.projectPointToNearestOnPlane(na,B),ua=g.projectPointToNearestOnPlane(ia,U);return c=Math.min(oa.x,da.x,Ca.x),l=-c,f=Math.max(oa.y,sa.y),h=Math.min(Ca.y,ua.y),K.height=$.height=i,ta=o.cartographicToCartesian(K,T),na=o.cartographicToCartesian($,D),m=Math.min(d.Plane.getPointDistance(p,ta),d.Plane.getPointDistance(p,na)),x=s,v(g.origin,g.xAxis,g.yAxis,g.zAxis,c,l,h,f,m,x,u)}var ca=a.south>0,la=a.north<0,ha=ca?a.south:la?a.north:0,fa=n.Rectangle.center(a,y).longitude,ma=r.Cartesian3.fromRadians(fa,ha,s,o,V);ma.z=0;var xa=Math.abs(ma.x)<r.CesiumMath.EPSILON10&&Math.abs(ma.y)<r.CesiumMath.EPSILON10,pa=xa?r.Cartesian3.UNIT_X:r.Cartesian3.normalize(ma,k),Ma=r.Cartesian3.UNIT_Z,wa=r.Cartesian3.cross(pa,Ma,_);p=d.Plane.fromPointNormal(ma,pa,Y);var ga=r.Cartesian3.fromRadians(fa+r.CesiumMath.PI_OVER_TWO,ha,s,o,W);l=r.Cartesian3.dot(d.Plane.projectPointOntoPlane(p,ga,X),wa),c=-l,f=r.Cartesian3.fromRadians(0,a.north,la?i:s,o,j).z,h=r.Cartesian3.fromRadians(0,a.south,ca?i:s,o,Z).z;var va=r.Cartesian3.fromRadians(a.east,ha,s,o,G);return m=d.Plane.getPointDistance(p,va),x=0,v(ma,wa,Ma,pa,c,l,h,f,m,x,u)},u.clone=function(a,t){if(e.defined(a))return e.defined(t)?(r.Cartesian3.clone(a.center,t.center),o.Matrix3.clone(a.halfAxes,t.halfAxes),t):new u(a.center,a.halfAxes)},u.intersectPlane=function(a,n){if(!e.defined(a))throw new t.DeveloperError("box is required.");if(!e.defined(n))throw new t.DeveloperError("plane is required.");var i=a.center,d=n.normal,C=a.halfAxes,u=d.x,c=d.y,l=d.z,h=Math.abs(u*C[o.Matrix3.COLUMN0ROW0]+c*C[o.Matrix3.COLUMN0ROW1]+l*C[o.Matrix3.COLUMN0ROW2])+Math.abs(u*C[o.Matrix3.COLUMN1ROW0]+c*C[o.Matrix3.COLUMN1ROW1]+l*C[o.Matrix3.COLUMN1ROW2])+Math.abs(u*C[o.Matrix3.COLUMN2ROW0]+c*C[o.Matrix3.COLUMN2ROW1]+l*C[o.Matrix3.COLUMN2ROW2]),f=r.Cartesian3.dot(d,i)+n.distance;return f<=-h?s.Intersect.OUTSIDE:f>=h?s.Intersect.INSIDE:s.Intersect.INTERSECTING};var F=new r.Cartesian3,H=new r.Cartesian3,J=new r.Cartesian3,K=new r.Cartesian3;u.distanceSquaredTo=function(a,n){if(!e.defined(a))throw new t.DeveloperError("box is required.");if(!e.defined(n))throw new t.DeveloperError("cartesian is required.");var i=r.Cartesian3.subtract(n,a.center,w),s=a.halfAxes,d=o.Matrix3.getColumn(s,0,F),C=o.Matrix3.getColumn(s,1,H),u=o.Matrix3.getColumn(s,2,J),c=r.Cartesian3.magnitude(d),l=r.Cartesian3.magnitude(C),h=r.Cartesian3.magnitude(u);r.Cartesian3.normalize(d,d),r.Cartesian3.normalize(C,C),r.Cartesian3.normalize(u,u);var f=K;f.x=r.Cartesian3.dot(i,d),f.y=r.Cartesian3.dot(i,C),f.z=r.Cartesian3.dot(i,u);var m,x=0;return f.x<-c?(m=f.x+c,x+=m*m):f.x>c&&(m=f.x-c,x+=m*m),f.y<-l?(m=f.y+l,x+=m*m):f.y>l&&(m=f.y-l,x+=m*m),f.z<-h?(m=f.z+h,x+=m*m):f.z>h&&(m=f.z-h,x+=m*m),x};var Q=new r.Cartesian3,$=new r.Cartesian3;u.computePlaneDistances=function(a,n,s,d){if(!e.defined(a))throw new t.DeveloperError("box is required.");if(!e.defined(n))throw new t.DeveloperError("position is required.");if(!e.defined(s))throw new t.DeveloperError("direction is required.");e.defined(d)||(d=new i.Interval);var C=Number.POSITIVE_INFINITY,u=Number.NEGATIVE_INFINITY,c=a.center,l=a.halfAxes,h=o.Matrix3.getColumn(l,0,F),f=o.Matrix3.getColumn(l,1,H),m=o.Matrix3.getColumn(l,2,J),x=r.Cartesian3.add(h,f,Q);r.Cartesian3.add(x,m,x),r.Cartesian3.add(x,c,x);var p=r.Cartesian3.subtract(x,n,$),M=r.Cartesian3.dot(s,p);return C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.add(c,h,x),r.Cartesian3.add(x,f,x),r.Cartesian3.subtract(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(s,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.add(c,h,x),r.Cartesian3.subtract(x,f,x),r.Cartesian3.add(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(s,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.add(c,h,x),r.Cartesian3.subtract(x,f,x),r.Cartesian3.subtract(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(s,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.subtract(c,h,x),r.Cartesian3.add(x,f,x),r.Cartesian3.add(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(s,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.subtract(c,h,x),r.Cartesian3.add(x,f,x),r.Cartesian3.subtract(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(s,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.subtract(c,h,x),r.Cartesian3.subtract(x,f,x),r.Cartesian3.add(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(s,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.subtract(c,h,x),r.Cartesian3.subtract(x,f,x),r.Cartesian3.subtract(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(s,p),C=Math.min(M,C),u=Math.max(M,u),d.start=C,d.stop=u,d};var aa=new i.BoundingSphere;u.isOccluded=function(a,r){if(!e.defined(a))throw new t.DeveloperError("box is required.");if(!e.defined(r))throw new t.DeveloperError("occluder is required.");var n=i.BoundingSphere.fromOrientedBoundingBox(a,aa);return!r.isBoundingSphereVisible(n)},u.prototype.intersectPlane=function(a){return u.intersectPlane(this,a)},u.prototype.distanceSquaredTo=function(a){return u.distanceSquaredTo(this,a)},u.prototype.computePlaneDistances=function(a,e,t){return u.computePlaneDistances(this,a,e,t)},u.prototype.isOccluded=function(a){return u.isOccluded(this,a)},u.equals=function(a,t){return a===t||e.defined(a)&&e.defined(t)&&r.Cartesian3.equals(a.center,t.center)&&o.Matrix3.equals(a.halfAxes,t.halfAxes)},u.prototype.clone=function(a){return u.clone(this,a)},u.prototype.equals=function(a){return u.equals(this,a)};var ea=new r.Cartesian3;u.prototype.intersectRay=function(a){var e=i.BoundingSphere.fromOrientedBoundingBox(this,aa),t=e.center,n=r.Cartesian3.subtract(t,a.origin,ea),s=r.Cartesian3.magnitude(r.Cartesian3.cross(n,a.direction,ea));return s<=e.radius},a.OrientedBoundingBox=u}));