define(["exports","./when-45f3d25d","./Check-34538dad","./Cartesian3-ef6ea826","./Cartesian2-a652b463","./BoundingSphere-038d5fbc","./ComponentDatatype-d28c2e26","./GeometryAttribute-dfebcc43","./PrimitiveType-30fa6f85","./GeometryAttributes-9d45f9e2","./IndexDatatype-6d2070e9","./GeometryOffsetAttribute-dae9c424"],(function(i,e,t,a,n,r,o,s,m,u,f,d){"use strict";var l=new a.Cartesian3(1,1,1),c=Math.cos,C=Math.sin;function _(i){i=e.defaultValue(i,e.defaultValue.EMPTY_OBJECT);var t=e.defaultValue(i.radii,l),n=e.defaultValue(i.innerRadii,t),r=e.defaultValue(i.minimumClock,0),o=e.defaultValue(i.maximumClock,a.CesiumMath.TWO_PI),s=e.defaultValue(i.minimumCone,0),m=e.defaultValue(i.maximumCone,a.CesiumMath.PI),u=Math.round(e.defaultValue(i.stackPartitions,10)),f=Math.round(e.defaultValue(i.slicePartitions,8)),d=Math.round(e.defaultValue(i.subdivisions,128));this._radii=a.Cartesian3.clone(t),this._innerRadii=a.Cartesian3.clone(n),this._minimumClock=r,this._maximumClock=o,this._minimumCone=s,this._maximumCone=m,this._stackPartitions=u,this._slicePartitions=f,this._subdivisions=d,this._offsetAttribute=i.offsetAttribute,this._workerName="createEllipsoidOutlineGeometry"}_.packedLength=2*a.Cartesian3.packedLength+8,_.pack=function(i,t,n){return n=e.defaultValue(n,0),a.Cartesian3.pack(i._radii,t,n),n+=a.Cartesian3.packedLength,a.Cartesian3.pack(i._innerRadii,t,n),n+=a.Cartesian3.packedLength,t[n++]=i._minimumClock,t[n++]=i._maximumClock,t[n++]=i._minimumCone,t[n++]=i._maximumCone,t[n++]=i._stackPartitions,t[n++]=i._slicePartitions,t[n++]=i._subdivisions,t[n]=e.defaultValue(i._offsetAttribute,-1),t};var p=new a.Cartesian3,h=new a.Cartesian3,v={radii:p,innerRadii:h,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,subdivisions:void 0,offsetAttribute:void 0};_.unpack=function(i,t,n){t=e.defaultValue(t,0);var r=a.Cartesian3.unpack(i,t,p);t+=a.Cartesian3.packedLength;var o=a.Cartesian3.unpack(i,t,h);t+=a.Cartesian3.packedLength;var s=i[t++],m=i[t++],u=i[t++],f=i[t++],d=i[t++],l=i[t++],c=i[t++],C=i[t];return e.defined(n)?(n._radii=a.Cartesian3.clone(r,n._radii),n._innerRadii=a.Cartesian3.clone(o,n._innerRadii),n._minimumClock=s,n._maximumClock=m,n._minimumCone=u,n._maximumCone=f,n._stackPartitions=d,n._slicePartitions=l,n._subdivisions=c,n._offsetAttribute=-1===C?void 0:C,n):(v.minimumClock=s,v.maximumClock=m,v.minimumCone=u,v.maximumCone=f,v.stackPartitions=d,v.slicePartitions=l,v.subdivisions=c,v.offsetAttribute=-1===C?void 0:C,new _(v))},_.createGeometry=function(i){var t=i._radii;if(!(t.x<=0||t.y<=0||t.z<=0)){var l=i._innerRadii;if(!(l.x<=0||l.y<=0||l.z<=0)){var _=i._minimumClock,p=i._maximumClock,h=i._minimumCone,v=i._maximumCone,y=i._subdivisions,k=n.Ellipsoid.fromCartesian3(t),b=i._slicePartitions+1,A=i._stackPartitions+1;(b=Math.round(b*Math.abs(p-_)/a.CesiumMath.TWO_PI))<2&&(b=2),(A=Math.round(A*Math.abs(v-h)/a.CesiumMath.PI))<2&&(A=2);var x=0,P=1,w=l.x!==t.x||l.y!==t.y||l.z!==t.z,M=!1,g=!1;w&&(P=2,h>0&&(M=!0,x+=b),v<Math.PI&&(g=!0,x+=b));var V,G,E,O,D=y*P*(A+b),I=new Float64Array(3*D),T=2*(D+x-(b+A)*P),z=f.IndexDatatype.createTypedArray(D,T),L=0,R=new Array(A),N=new Array(A);for(V=0;V<A;V++)O=h+V*(v-h)/(A-1),R[V]=C(O),N[V]=c(O);var B=new Array(y),S=new Array(y);for(V=0;V<y;V++)E=_+V*(p-_)/(y-1),B[V]=C(E),S[V]=c(E);for(V=0;V<A;V++)for(G=0;G<y;G++)I[L++]=t.x*R[V]*S[G],I[L++]=t.y*R[V]*B[G],I[L++]=t.z*N[V];if(w)for(V=0;V<A;V++)for(G=0;G<y;G++)I[L++]=l.x*R[V]*S[G],I[L++]=l.y*R[V]*B[G],I[L++]=l.z*N[V];for(R.length=y,N.length=y,V=0;V<y;V++)O=h+V*(v-h)/(y-1),R[V]=C(O),N[V]=c(O);for(B.length=b,S.length=b,V=0;V<b;V++)E=_+V*(p-_)/(b-1),B[V]=C(E),S[V]=c(E);for(V=0;V<y;V++)for(G=0;G<b;G++)I[L++]=t.x*R[V]*S[G],I[L++]=t.y*R[V]*B[G],I[L++]=t.z*N[V];if(w)for(V=0;V<y;V++)for(G=0;G<b;G++)I[L++]=l.x*R[V]*S[G],I[L++]=l.y*R[V]*B[G],I[L++]=l.z*N[V];for(L=0,V=0;V<A*P;V++){var U=V*y;for(G=0;G<y-1;G++)z[L++]=U+G,z[L++]=U+G+1}var F=A*y*P;for(V=0;V<b;V++)for(G=0;G<y-1;G++)z[L++]=F+V+G*b,z[L++]=F+V+(G+1)*b;if(w)for(F=A*y*P+b*y,V=0;V<b;V++)for(G=0;G<y-1;G++)z[L++]=F+V+G*b,z[L++]=F+V+(G+1)*b;if(w){var W=A*y*P,Y=W+y*b;if(M)for(V=0;V<b;V++)z[L++]=W+V,z[L++]=Y+V;if(g)for(W+=y*b-b,Y+=y*b-b,V=0;V<b;V++)z[L++]=W+V,z[L++]=Y+V}var J=new u.GeometryAttributes({position:new s.GeometryAttribute({componentDatatype:o.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:I})});if(e.defined(i._offsetAttribute)){var j=I.length,q=new Uint8Array(j/3),H=i._offsetAttribute===d.GeometryOffsetAttribute.NONE?0:1;d.arrayFill(q,H),J.applyOffset=new s.GeometryAttribute({componentDatatype:o.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:q})}return new s.Geometry({attributes:J,indices:z,primitiveType:m.PrimitiveType.LINES,boundingSphere:r.BoundingSphere.fromEllipsoid(k),offsetAttribute:i._offsetAttribute})}}},i.EllipsoidOutlineGeometry=_}));