{"version":3,"file":"CreatePhysicalArray-368bcbdd.js","sources":["../../../../Source/Extension/Source/Worker/CreatePhysicalArray.js"],"sourcesContent":["import defined from \"../../../Core/defined.js\";\nimport Cartesian3 from \"../../../Core/Cartesian3.js\";\nimport Matrix4 from \"../../../Core/Matrix4.js\";\nimport PrimitiveType from \"../../../Core/PrimitiveType.js\";\n\nclass CreatePhysicalArray {}\n\nvar negateRelativeToCenter = new Cartesian3();\nvar negateRelativeToCenterMatrix = new Matrix4();\nvar relativePosition = new Cartesian3();\n\nCreatePhysicalArray.createPhysicalArrayFromTerrain = function (\n    physical,\n    lbSpaMgr,\n    relativeToCenter,\n    positions,\n    indices\n) {\n    var hasRelativeToCenter = defined(relativeToCenter);\n    relativeToCenter = hasRelativeToCenter ? relativeToCenter : Cartesian3.ZERO;\n    Cartesian3.negate(relativeToCenter, negateRelativeToCenter);\n    Matrix4.fromTranslation(\n        negateRelativeToCenter,\n        negateRelativeToCenterMatrix\n    );\n\n    var physicalVertices = new Float32Array(positions.length * 3.0);\n    var indexVertices = 0;\n    for (var index = 0; index < positions.length; ++index) {\n        var position = positions[index];\n        Matrix4.multiplyByPoint(\n            negateRelativeToCenterMatrix,\n            position,\n            relativePosition\n        );\n\n        physicalVertices[indexVertices++] = relativePosition.x;\n        physicalVertices[indexVertices++] = relativePosition.y;\n        physicalVertices[indexVertices++] = relativePosition.z;\n    }\n\n    var pPrimitive = new physical.LBSpaPrimitive();\n    initSpaPrimitive(\n        pPrimitive,\n        physicalVertices,\n        undefined,\n        indices,\n        undefined\n    );\n    var pPrimitiveSpatial = lbSpaMgr.CreateTriangleSpatial(pPrimitive);\n\n    //serial write\n    var pSerialWrite = new physical.LBSpaSerial();\n    pSerialWrite.WriteSpatial(pPrimitiveSpatial);\n    var physicalArray = new Uint8Array(pSerialWrite.GetBufferSize());\n    for (var i = 0; i < physicalArray.length; ++i) {\n        physicalArray[i] = pSerialWrite.GetBufferVal(i);\n    }\n    physical.destroy(pSerialWrite);\n    physical.destroy(pPrimitiveSpatial);\n\n    return physicalArray;\n};\n\nCreatePhysicalArray.createPhysicalArrayFromModel = function (\n    physical,\n    lbSpaMgr,\n    primitiveMode,\n    pPtAry,\n    pBatchIdAry,\n    pIndexAry,\n    pEdgeCheckAry\n) {\n    var pPrimitive = new physical.LBSpaPrimitive();\n    initSpaPrimitive(pPrimitive, pPtAry, pBatchIdAry, pIndexAry, pEdgeCheckAry);\n\n    var pPrimitiveSpatial;\n    if (PrimitiveType.LINES === primitiveMode) {\n        pPrimitiveSpatial = lbSpaMgr.CreateStepLineSpatial(pPrimitive);\n    } else {\n        pPrimitiveSpatial = lbSpaMgr.CreateTriangleSpatial(pPrimitive);\n    }\n\n    //serial write\n    var pSerialWrite = new physical.LBSpaSerial();\n    pSerialWrite.WriteSpatial(pPrimitiveSpatial);\n    var physicalArray = new Uint8Array(pSerialWrite.GetBufferSize());\n    for (var index = 0; index < physicalArray.length; ++index) {\n        physicalArray[index] = pSerialWrite.GetBufferVal(index);\n    }\n\n    physical.destroy(pSerialWrite);\n    physical.destroy(pPrimitiveSpatial);\n    return physicalArray;\n};\n\nfunction initSpaPrimitive(\n    pPrimitive,\n    pPtAry,\n    pBatchIdAry,\n    pIndexAry,\n    pEdgeCheckAry\n) {\n    var bBatchId = defined(pBatchIdAry) && pBatchIdAry.length > 0;\n    pPrimitive.SetPtValNum(pPtAry.length, bBatchId); //true desc have batch\n    var i;\n    for (i = 0; i < pPtAry.length; ++i) {\n        pPrimitive.SetPtValVal(i, pPtAry[i]);\n    }\n    if (bBatchId) {\n        for (i = 0; i < pBatchIdAry.length; ++i) {\n            pPrimitive.SetBatchIdVal(i, pBatchIdAry[i]);\n        }\n    }\n    if (defined(pIndexAry) && pIndexAry.length > 0) {\n        var bEdgeCheck = defined(pEdgeCheckAry) && pEdgeCheckAry.length > 0;\n        pPrimitive.SetIndexNum(pIndexAry.length, bEdgeCheck); //need edge\n        for (i = 0; i < pIndexAry.length; ++i) {\n            pPrimitive.SetIndexVal(i, pIndexAry[i]);\n        }\n        if (bEdgeCheck) {\n            for (i = 0; i < pEdgeCheckAry.length; ++i) {\n                pPrimitive.SetEdgeCheckVal(i, pEdgeCheckAry[i]);\n            }\n        }\n    } else {\n        pPrimitive.InitIndexByPt();\n    }\n}\n\n/**\n * @private\n */\nexport default CreatePhysicalArray;\n"],"names":["Cartesian3","Matrix4","defined","PrimitiveType"],"mappings":"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"}