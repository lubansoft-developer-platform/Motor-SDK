{"version":3,"file":"EmLBDeal-21db18c9.js","sources":["../../Source/Extension/Source/Planish/BorderInfo.js","../../Source/Extension/Source/Worker/EmLBDeal.js"],"sourcesContent":["import Cartesian2 from \"../../../Core/Cartesian2.js\";\r\nimport Matrix4 from \"../../../Core/Matrix4.js\";\r\nimport defaultValue from \"../../../Core/defaultValue.js\";\r\nimport Cartesian3 from \"../../../Core/Cartesian3.js\";\r\nimport AxisAlignedBoundingBox from \"../../../Core/AxisAlignedBoundingBox.js\";\r\nimport PolygonPipeline from \"../../../Core/PolygonPipeline.js\";\r\nimport WindingOrder from \"../../../Core/WindingOrder.js\";\r\n\r\nclass BorderInfo {\r\n    /**\r\n     * create a BorderInfo\r\n     */\r\n    constructor() {\r\n        this._pt2DAry = [];\r\n        this._under = 0;\r\n        this._height = 0;\r\n        this._matrix = Matrix4.clone(Matrix4.IDENTITY);\r\n    }\r\n\r\n     /**\r\n     * clone\r\n     * @param {BorderInfo} borderInfo\r\n     * @returns {BorderInfo}\r\n     */\r\n    static clone(borderInfo) {\r\n        const under = borderInfo._under;\r\n        const height = borderInfo._height;\r\n\r\n        const pt2DAry = [];\r\n        borderInfo._pt2DAry.forEach((pt2D) => {\r\n            pt2DAry.push(new Cartesian2(pt2D.x, pt2D.y));\r\n        });\r\n\r\n        const retBorderInfo = new BorderInfo();\r\n        retBorderInfo._under = under;\r\n        retBorderInfo._height = height;\r\n        retBorderInfo._pt2DAry = pt2DAry;\r\n        Matrix4.pack(borderInfo._matrix, retBorderInfo._matrix);\r\n        return retBorderInfo;\r\n    }\r\n\r\n    /**\r\n     * get abb box\r\n     * @returns {AxisAlignedBoundingBox}\r\n     */\r\n    getBoundingbox() {\r\n        const cornAry = [];\r\n        this.getPtAry(true, cornAry);\r\n        this.getPtAry(false, cornAry);\r\n        return AxisAlignedBoundingBox.fromPoints(cornAry);\r\n    }\r\n\r\n    /**\r\n     * get triangles\r\n     * @param {Cartesian3[]} ptAry pt out Ary\r\n     * @param {Number[]} indexAry indice out Ary\r\n     */\r\n    createTriangle(ptAry, indexAry) {\r\n        let startIndex = ptAry.length;\r\n        this.getPtAry(true, ptAry);\r\n        let colLen = ptAry.length - startIndex;\r\n        this.getPtAry(false, ptAry);\r\n\r\n        let nextIndex = 0;\r\n        for (let index = 0; index < colLen; index++) {\r\n            if (index === colLen - 1) {\r\n                nextIndex = 0;\r\n            } else {\r\n                nextIndex = index + 1;\r\n            }\r\n\r\n            indexAry.push(startIndex + index);\r\n            indexAry.push(startIndex + nextIndex);\r\n            indexAry.push(startIndex + colLen + nextIndex);\r\n\r\n            indexAry.push(startIndex + index);\r\n            indexAry.push(startIndex + colLen + nextIndex);\r\n            indexAry.push(startIndex + colLen + index);\r\n        }\r\n\r\n        const orIndexAry = PolygonPipeline.triangulate(this._pt2DAry);\r\n        indexAry.push(...orIndexAry.map((index) => { return startIndex + colLen + index; }));\r\n        indexAry.push(...orIndexAry.reverse().map((index) => { return startIndex + index; }));\r\n    }\r\n\r\n    /**\r\n     * @type {Cartesian2[]}\r\n     */\r\n    set pt2DAry(value) {\r\n        this._pt2DAry = defaultValue(value, []);\r\n        if (this._pt2DAry.length > 2) {\r\n            if (PolygonPipeline.computeWindingOrder2D(this._pt2DAry) === WindingOrder.CLOCKWISE) {\r\n                this._pt2DAry.reverse();\r\n            }\r\n        }\r\n    }\r\n\r\n    get pt2DAry() {\r\n        return this._pt2DAry;\r\n    }\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    set under(value) {\r\n        this._under = value;\r\n    }\r\n\r\n    get under() {\r\n        return this._under;\r\n    }\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    set height(value) {\r\n        this._height = value;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * @type {Matrix4}\r\n     */\r\n    set matrix(value) {\r\n        value.clone(this._matrix);\r\n    }\r\n\r\n    get matrix() {\r\n        return this._matrix;\r\n    }\r\n\r\n    /**\r\n     * get pt ary for 3d\r\n     * @param {Boolean} bUnder is under pt\r\n     * @param {Cartesian3[]} ptAry pt out Ary\r\n     */\r\n    getPtAry(bUnder, ptAry) {\r\n        this._pt2DAry.forEach(pt2D => {\r\n            let pt3D = new Cartesian3(pt2D.x, pt2D.y, this._under);\r\n            if (!bUnder) {\r\n                pt3D.z += this._height;\r\n            }\r\n            Matrix4.multiplyByPoint(this._matrix, pt3D, pt3D);\r\n            ptAry.push(pt3D);\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Matrix4} matrix\r\n     */\r\n     transformXOY(matrix) {\r\n        let dMin = 1000000000;\r\n        for (let index = 0; index < this._pt2DAry.length; index++) {\r\n            let pt2D = this._pt2DAry[index];\r\n            let pt3D = new Cartesian3(pt2D.x, pt2D.y, this._under);\r\n            Matrix4.multiplyByPoint(matrix, pt3D, pt3D);\r\n            pt2D.x = pt3D.x;\r\n            pt2D.y = pt3D.y;\r\n            if (pt3D.z < dMin) {\r\n                dMin = pt3D.z;\r\n            }\r\n        }\r\n        if (dMin < 1000000000) {\r\n            this._under = dMin;\r\n        }\r\n        else {\r\n            this._under = 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport default BorderInfo;\r\n","import defined from \"../../../Core/defined.js\";\r\nimport DeveloperError from \"../../../Core/DeveloperError.js\";\r\nimport Cartesian3 from \"../../../Core/Cartesian3.js\";\r\nimport {emMod} from \"./EmWrapperManager.js\";\r\nimport Matrix4 from \"../../../Core/Matrix4.js\";\r\nimport defaultValue from \"../../../Core/defaultValue.js\";\r\nimport Matrix3 from \"../../../Core/Matrix3.js\";\r\nimport Transforms from \"../../../Core/Transforms.js\";\r\nimport BorderInfo from \"../Planish/BorderInfo.js\";\r\n\r\nconst ptTransScratch = new Cartesian3();\r\nconst ptScaleScratch = new Cartesian3();\r\nconst ptMat3Scratch = new Matrix3();\r\nconst ptRotateScratch = new Matrix3();\r\nconst ptMat4Scratch = new Matrix4();\r\n\r\nclass EmLBDeal {\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * init EmLBDeal\r\n     * @param {string} proj4Str 投影坐标系描述字符串\r\n     * @param {Cartesian3} centerMapPt 中心点经纬度坐标\r\n     * @returns {boolean}\r\n     */\r\n     init(proj4Str, centerMapPt) {\r\n        if (!defined(emMod)) {\r\n            throw new DeveloperError(\"initWebAssembly初始化尚未完成\");\r\n        }\r\n        this._LBDeal = new emMod.LBDeal();\r\n        if (!this._LBDeal.Init(proj4Str, centerMapPt.x, centerMapPt.y, centerMapPt.z)) {\r\n            emMod.destroy(this._LBDeal);\r\n            this._LBDeal = undefined;\r\n            return false;\r\n        }\r\n\r\n        this._centerENMatrix = Transforms.eastNorthUpToFixedFrame(Cartesian3.fromDegrees(centerMapPt.x, centerMapPt.y, centerMapPt.z));\r\n\r\n        this._matrixArray = new Float64Array(Matrix4.toArray(Matrix4.IDENTITY));\r\n        this._pMatrixAry = emMod._malloc(this._matrixArray.byteLength);\r\n\r\n        this._oneTyped32Array = new Float32Array([0, 0, 0]);\r\n        this._pOnePt32Ary = emMod._malloc(this._oneTyped32Array.byteLength);\r\n\r\n        this._oneTyped64Array = new Float64Array([0, 0, 0]);\r\n        this._pOnePt64Ary = emMod._malloc(this._oneTyped64Array.byteLength);\r\n\r\n        this._planishAry = null;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * destory EmLBDeal\r\n     */\r\n    destroy() {\r\n        if (defined(this._LBDeal)) {\r\n            emMod.destroy(this._LBDeal);\r\n            this._LBDeal = undefined;\r\n\r\n            emMod._free(this._pMatrixAry);\r\n            emMod._free(this._pOnePt32Ary);\r\n            emMod._free(this._pOnePt64Ary);\r\n\r\n            if (defined(this._planishAry)) {\r\n                emMod.destroy(this._planishAry);\r\n                this._planishAry = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    setPlanishBorderInfoAry(planishBorderInfoAry) {\r\n        if (!Array.isArray(planishBorderInfoAry)) {\r\n            return;\r\n        }\r\n\r\n        if (defined(this._planishAry)) {\r\n            emMod.destroy(this._planishAry);\r\n        }\r\n        this._planishAry = new emMod.LBPlanishAry();\r\n\r\n        this._planishAry.SetPlanishNum(planishBorderInfoAry.length);\r\n        for (let i = 0; i < planishBorderInfoAry.length; i++) {\r\n            const planishBorderInfo = BorderInfo.clone(planishBorderInfoAry[i]);\r\n\r\n            this._planishAry.SetPlanishBot(i, planishBorderInfo.under);\r\n            const ptNum = planishBorderInfo.pt2DAry.length;\r\n            this._planishAry.SetPlanishPtNum(i, ptNum);\r\n            for (let j = 0; j < ptNum; j++) {\r\n                this._planishAry.SetPlanishPtVal(i, j, planishBorderInfo.pt2DAry[j].x, planishBorderInfo.pt2DAry[j].y);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * rel center proj pt ary to rel map center cartesian pt ary\r\n     * @param {Number[]} points\r\n     * @param {boolean} bYup true is Y up  false is Z up\r\n     * @param {Matrix4} [matrix]\r\n     */\r\n     computeProjToCartesianAry(points, bYup, matrix) {\r\n        this.computeProjToCartesianAryImp(matrix, points, bYup, false, this._LBDeal, false);\r\n    }\r\n\r\n    /**\r\n     * cartesian pt ary to rel center proj pt ary\r\n     * @param {Number[]} points\r\n     * @param {boolean} bYup true is Y up  false is Z up\r\n     * @param {Matrix4} [matrix]\r\n     */\r\n    computeCartesianToProjAry(points, bYup, matrix) {\r\n        this.computeProjToCartesianAryImp(matrix, points, bYup, true, this._LBDeal, false);\r\n    }\r\n\r\n    /**\r\n     * rel center proj pt ary to rel map center cartesian pt\r\n     * @param {Cartesian3} cartesian\r\n     * @param {boolean} [bYup] true is Y up  false is Z up default false\r\n     * @param {Matrix4} [matrix]\r\n     * @param {Cartesian3} [result]\r\n     * @returns {Cartesian3}\r\n     */\r\n    computeProjToCartesian(cartesian, bYup, matrix, result) {\r\n        bYup = defaultValue(bYup, false);\r\n        let points = [cartesian.x, cartesian.y, cartesian.z];\r\n        this.computeProjToCartesianAryImp(matrix, points, bYup, false, this._LBDeal, true);\r\n        if (!defined(result)) {\r\n            return new Cartesian3(points[0], points[1], points[2]);\r\n        }\r\n        result.x = points[0];\r\n        result.y = points[1];\r\n        result.z = points[2];\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * cartesian pt to rel center proj pt\r\n     * @param {Cartesian3} cartesian\r\n     * @param {boolean} [bYup] true is Y up  false is Z up default false\r\n     * @param {Matrix4} [matrix]\r\n     * @param {Cartesian3} [result]\r\n     * @returns {Cartesian3}\r\n     */\r\n    computeCartesianToProj(cartesian, bYup, matrix, result) {\r\n        bYup = defaultValue(bYup, false);\r\n        let points = [cartesian.x, cartesian.y, cartesian.z];\r\n        this.computeProjToCartesianAryImp(matrix, points, bYup, true, this._LBDeal, true);\r\n        if (!defined(result)) {\r\n            return new Cartesian3(points[0], points[1], points[2]);\r\n        }\r\n        result.x = points[0];\r\n        result.y = points[1];\r\n        result.z = points[2];\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * map degree ary to proj\r\n     * @param {Number[]} points\r\n     * @param {boolean} bSubstratProjCenter\r\n     */\r\n    computeDegreeToProjAry(points, bSubstratProjCenter) {\r\n        this.computeDegreeToProjImp(points, bSubstratProjCenter, false, this._LBDeal, false);\r\n    }\r\n\r\n    /**\r\n     * proj pt ary to map degree\r\n     * @param {Number[]} points\r\n     * @param {boolean} bInputRelProjCenter\r\n     */\r\n    computeProjToDegreeAry(points, bInputRelProjCenter) {\r\n        this.computeDegreeToProjImp(points, bInputRelProjCenter, true, this._LBDeal, false);\r\n    }\r\n\r\n    /**\r\n     * map degree to proj\r\n     * @param {Cartesian3} cartesian\r\n     * @param {boolean} bSubstratProjCenter\r\n     * @param {Cartesian3} [result]\r\n     * @returns {Cartesian3}\r\n     */\r\n    computeDegreeToProj(cartesian, bSubstratProjCenter, result) {\r\n        let points = [cartesian.x, cartesian.y, cartesian.z];\r\n        this.computeDegreeToProjImp(points, bSubstratProjCenter, false, this._LBDeal, true);\r\n        if (!defined(result)) {\r\n            return new Cartesian3(points[0], points[1], points[2]);\r\n        }\r\n        result.x = points[0];\r\n        result.y = points[1];\r\n        result.z = points[2];\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * proj pt to map degree\r\n     * @param {Cartesian3} cartesian\r\n     * @param {boolean} bInputRelProjCenter\r\n     * @param {Cartesian3} [result]\r\n     * @returns {Cartesian3}\r\n     */\r\n    computeProjToDegree(cartesian, bInputRelProjCenter, result) {\r\n        let points = [cartesian.x, cartesian.y, cartesian.z];\r\n        this.computeDegreeToProjImp(points, bInputRelProjCenter, true, this._LBDeal, true);\r\n        if (!defined(result)) {\r\n            return new Cartesian3(points[0], points[1], points[2]);\r\n        }\r\n        result.x = points[0];\r\n        result.y = points[1];\r\n        result.z = points[2];\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * cvt rel proj matrix to cartesian matrix\r\n     * @param {Matrix4} matrix\r\n     * @param {Matrix4} [result]\r\n     * @returns {Matrix4}\r\n     */\r\n    cvtRelProjMatrixToCartesianMatrix(matrix, result) {\r\n        if (!defined(result)) {\r\n            result = new Matrix4();\r\n        }\r\n\r\n        Matrix4.getTranslation(matrix, ptTransScratch);\r\n        Matrix4.getScale(matrix, ptScaleScratch);\r\n        Matrix4.getMatrix3(matrix, ptMat3Scratch);\r\n        Matrix3.getRotation(ptMat3Scratch, ptRotateScratch);\r\n\r\n        Matrix4.fromScale(ptScaleScratch, result);\r\n        Matrix4.multiplyByMatrix3(result, ptRotateScratch, result);\r\n\r\n        this.computeProjToCartesian(ptTransScratch, false, undefined, ptTransScratch);\r\n        Matrix4.multiplyByPoint(this._centerENMatrix, ptTransScratch, ptTransScratch);\r\n        Transforms.eastNorthUpToFixedFrame(ptTransScratch, undefined, ptMat4Scratch);\r\n\r\n        Matrix4.multiply(ptMat4Scratch, result, result);\r\n        return result;\r\n    }\r\n\r\n    computeProjToCartesianAryImp(matrix, points, bYup, reverse, cDeal, isOne) {\r\n        if (!defined(cDeal)) {\r\n            throw new DeveloperError(\"请先执行 init进行初始化\");\r\n        }\r\n\r\n        let typedArray;\r\n        let pPtAry;\r\n        if (!isOne) {\r\n            typedArray = new Float32Array(points);\r\n            pPtAry = emMod._malloc(typedArray.byteLength);\r\n        } else {\r\n            typedArray = this._oneTyped32Array;\r\n            typedArray.set(points);\r\n            pPtAry = this._pOnePt32Ary;\r\n        }\r\n        emMod.HEAPF32.set(typedArray, pPtAry / 4);\r\n\r\n        matrix = defaultValue(matrix, Matrix4.IDENTITY);\r\n        this._matrixArray.set(Matrix4.toArray(matrix));\r\n        emMod.HEAPF64.set(this._matrixArray, this._pMatrixAry / 8);\r\n\r\n        if (reverse) {\r\n            cDeal.ComputeCartesianToProj(\r\n                pPtAry,\r\n                typedArray.length,\r\n                this._pMatrixAry,\r\n                bYup,\r\n                this._planishAry\r\n            );\r\n        } else {\r\n            cDeal.ComputeProjToCartesian(\r\n                pPtAry,\r\n                typedArray.length,\r\n                this._pMatrixAry,\r\n                bYup\r\n            );\r\n        }\r\n\r\n        for (let index = 0; index < points.length; ++index) {\r\n            points[index] = emMod.HEAPF32[(pPtAry >> 2) + index];\r\n        }\r\n\r\n        if (!isOne) {\r\n            emMod._free(pPtAry);\r\n        }\r\n    }\r\n\r\n    computeDegreeToProjImp(points, bRel, reverse, cDeal, isOne) {\r\n        if (!defined(cDeal)) {\r\n            throw new DeveloperError(\"请先执行 init进行初始化\");\r\n        }\r\n\r\n        let typedArray;\r\n        let pPtAry;\r\n        if (!isOne) {\r\n            typedArray = new Float64Array(points);\r\n            pPtAry = emMod._malloc(typedArray.byteLength);\r\n        } else {\r\n            typedArray = this._oneTyped64Array;\r\n            typedArray.set(points);\r\n            pPtAry = this._pOnePt64Ary;\r\n        }\r\n        emMod.HEAPF64.set(typedArray, pPtAry / 8);\r\n\r\n        if (reverse) {\r\n            cDeal.TranformProjToDegree(pPtAry, typedArray.length, bRel);\r\n        } else {\r\n            cDeal.TranformDegreeToProj(pPtAry, typedArray.length, bRel);\r\n        }\r\n\r\n        for (let index = 0; index < points.length; ++index) {\r\n            points[index] = emMod.HEAPF64[(pPtAry >> 3) + index];\r\n        }\r\n\r\n        if (!isOne) {\r\n            emMod._free(pPtAry);\r\n        }\r\n    }\r\n}\r\n\r\nexport default EmLBDeal;\r\n"],"names":["Matrix4","Cartesian2","AxisAlignedBoundingBox","PolygonPipeline","defaultValue","WindingOrder","Cartesian3","Matrix3","defined","emMod","DeveloperError","Transforms"],"mappings":"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"}