define(["./when-45f3d25d","./Check-34538dad","./Cartesian3-ef6ea826","./Cartesian2-a652b463","./BoundingSphere-038d5fbc","./Transforms-c8a82813","./Matrix4-f54b529f","./RuntimeError-86da6af2","./WebGLConstants-3660bc8f","./ComponentDatatype-d28c2e26","./GeometryAttribute-dfebcc43","./PrimitiveType-30fa6f85","./GeometryAttributes-9d45f9e2","./IndexDatatype-6d2070e9","./IntersectionTests-b186d985","./Plane-a0c58786","./GeometryOffsetAttribute-dae9c424","./arrayRemoveDuplicates-e5b24eaf","./AxisAlignedBoundingBox-9187558e","./EllipsoidTangentPlane-dd3d1016","./EllipsoidRhumbLine-0c6cd7c8","./PolygonPipeline-28c8c9d7","./PolylineVolumeGeometryLibrary-78e26dc0","./EllipsoidGeodesic-1abfd38d","./PolylinePipeline-e4210f09","./CorridorGeometryLibrary-5e3b6e3e"],(function(e,t,i,r,o,a,n,s,l,d,u,p,f,h,y,c,g,b,m,v,A,_,E,C,G,T){"use strict";var P=new i.Cartesian3,w=new i.Cartesian3,L=new i.Cartesian3;function D(t,r){var o,a,n,s=[],l=t.positions,p=t.corners,y=t.endPositions,c=new f.GeometryAttributes,g=0,b=0,m=0;for(a=0;a<l.length;a+=2)g+=n=l[a].length-3,m+=n/3*4,b+=l[a+1].length-3;for(g+=3,b+=3,a=0;a<p.length;a++){o=p[a];var v=p[a].leftPositions;e.defined(v)?(g+=n=v.length,m+=n/3*2):(b+=n=p[a].rightPositions.length,m+=n/3*2)}var A,_=e.defined(y);_&&(g+=A=y[0].length-3,b+=A,m+=4*(A/=3));var C,G,D,k,x,N,O=g+b,V=new Float64Array(O),H=0,I=O-1,S=A/2,B=h.IndexDatatype.createTypedArray(O/3,m+4),M=0;if(B[M++]=H/3,B[M++]=(I-2)/3,_){s.push(H/3),N=P,x=w;var R=y[0];for(a=0;a<S;a++)N=i.Cartesian3.fromArray(R,3*(S-1-a),N),x=i.Cartesian3.fromArray(R,3*(S+a),x),T.CorridorGeometryLibrary.addAttribute(V,x,H),T.CorridorGeometryLibrary.addAttribute(V,N,void 0,I),k=1+(G=H/3),D=(C=(I-2)/3)-1,B[M++]=C,B[M++]=D,B[M++]=G,B[M++]=k,H+=3,I-=3}var U=0,F=l[U++],Y=l[U++];for(V.set(F,H),V.set(Y,I-Y.length+1),n=Y.length-3,s.push(H/3,(I-2)/3),a=0;a<n;a+=3)k=1+(G=H/3),D=(C=(I-2)/3)-1,B[M++]=C,B[M++]=D,B[M++]=G,B[M++]=k,H+=3,I-=3;for(a=0;a<p.length;a++){var q,W,J=(o=p[a]).leftPositions,j=o.rightPositions,z=L;if(e.defined(J)){for(I-=3,W=D,s.push(k),q=0;q<J.length/3;q++)z=i.Cartesian3.fromArray(J,3*q,z),B[M++]=W-q-1,B[M++]=W-q,T.CorridorGeometryLibrary.addAttribute(V,z,void 0,I),I-=3;s.push(W-Math.floor(J.length/6)),r===E.CornerType.BEVELED&&s.push((I-2)/3+1),H+=3}else{for(H+=3,W=k,s.push(D),q=0;q<j.length/3;q++)z=i.Cartesian3.fromArray(j,3*q,z),B[M++]=W+q,B[M++]=W+q+1,T.CorridorGeometryLibrary.addAttribute(V,z,H),H+=3;s.push(W+Math.floor(j.length/6)),r===E.CornerType.BEVELED&&s.push(H/3-1),I-=3}for(F=l[U++],Y=l[U++],F.splice(0,3),Y.splice(Y.length-3,3),V.set(F,H),V.set(Y,I-Y.length+1),n=Y.length-3,q=0;q<Y.length;q+=3)G=(k=H/3)-1,C=1+(D=(I-2)/3),B[M++]=C,B[M++]=D,B[M++]=G,B[M++]=k,H+=3,I-=3;H-=3,I+=3,s.push(H/3,(I-2)/3)}if(_){H+=3,I-=3,N=P,x=w;var K=y[1];for(a=0;a<S;a++)N=i.Cartesian3.fromArray(K,3*(A-a-1),N),x=i.Cartesian3.fromArray(K,3*a,x),T.CorridorGeometryLibrary.addAttribute(V,N,void 0,I),T.CorridorGeometryLibrary.addAttribute(V,x,H),G=(k=H/3)-1,C=1+(D=(I-2)/3),B[M++]=C,B[M++]=D,B[M++]=G,B[M++]=k,H+=3,I-=3;s.push(H/3)}else s.push(H/3,(I-2)/3);return B[M++]=H/3,B[M++]=(I-2)/3,c.position=new u.GeometryAttribute({componentDatatype:d.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:V}),{attributes:c,indices:B,wallIndices:s}}function k(t){var o=(t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT)).positions,a=t.width,n=e.defaultValue(t.height,0),s=e.defaultValue(t.extrudedHeight,n);this._positions=o,this._ellipsoid=r.Ellipsoid.clone(e.defaultValue(t.ellipsoid,r.Ellipsoid.WGS84)),this._width=a,this._height=Math.max(n,s),this._extrudedHeight=Math.min(n,s),this._cornerType=e.defaultValue(t.cornerType,E.CornerType.ROUNDED),this._granularity=e.defaultValue(t.granularity,i.CesiumMath.RADIANS_PER_DEGREE),this._offsetAttribute=t.offsetAttribute,this._workerName="createCorridorOutlineGeometry",this.packedLength=1+o.length*i.Cartesian3.packedLength+r.Ellipsoid.packedLength+6}k.pack=function(t,o,a){a=e.defaultValue(a,0);var n=t._positions,s=n.length;o[a++]=s;for(var l=0;l<s;++l,a+=i.Cartesian3.packedLength)i.Cartesian3.pack(n[l],o,a);return r.Ellipsoid.pack(t._ellipsoid,o,a),a+=r.Ellipsoid.packedLength,o[a++]=t._width,o[a++]=t._height,o[a++]=t._extrudedHeight,o[a++]=t._cornerType,o[a++]=t._granularity,o[a]=e.defaultValue(t._offsetAttribute,-1),o};var x=r.Ellipsoid.clone(r.Ellipsoid.UNIT_SPHERE),N={positions:void 0,ellipsoid:x,width:void 0,height:void 0,extrudedHeight:void 0,cornerType:void 0,granularity:void 0,offsetAttribute:void 0};return k.unpack=function(t,o,a){o=e.defaultValue(o,0);for(var n=t[o++],s=new Array(n),l=0;l<n;++l,o+=i.Cartesian3.packedLength)s[l]=i.Cartesian3.unpack(t,o);var d=r.Ellipsoid.unpack(t,o,x);o+=r.Ellipsoid.packedLength;var u=t[o++],p=t[o++],f=t[o++],h=t[o++],y=t[o++],c=t[o];return e.defined(a)?(a._positions=s,a._ellipsoid=r.Ellipsoid.clone(d,a._ellipsoid),a._width=u,a._height=p,a._extrudedHeight=f,a._cornerType=h,a._granularity=y,a._offsetAttribute=-1===c?void 0:c,a):(N.positions=s,N.width=u,N.height=p,N.extrudedHeight=f,N.cornerType=h,N.granularity=y,N.offsetAttribute=-1===c?void 0:c,new k(N))},k.createGeometry=function(t){var r=t._positions,a=t._width,n=t._ellipsoid;r=function(e,t){for(var i=0;i<e.length;i++)e[i]=t.scaleToGeodeticSurface(e[i],e[i]);return e}(r,n);var s=b.arrayRemoveDuplicates(r,i.Cartesian3.equalsEpsilon);if(!(s.length<2||a<=0)){var l,f=t._height,y=t._extrudedHeight,c=!i.CesiumMath.equalsEpsilon(f,y,0,i.CesiumMath.EPSILON2),m={ellipsoid:n,positions:s,width:a,cornerType:t._cornerType,granularity:t._granularity,saveAttributes:!1};if(c)m.height=f,m.extrudedHeight=y,m.offsetAttribute=t._offsetAttribute,l=function(t){var i=t.ellipsoid,r=D(T.CorridorGeometryLibrary.computePositions(t),t.cornerType),o=r.wallIndices,a=t.height,n=t.extrudedHeight,s=r.attributes,l=r.indices,p=s.position.values,f=p.length,y=new Float64Array(f);y.set(p);var c,b=new Float64Array(2*f);if(p=_.PolygonPipeline.scaleToGeodeticHeight(p,a,i),y=_.PolygonPipeline.scaleToGeodeticHeight(y,n,i),b.set(p),b.set(y,f),s.position.values=b,f/=3,e.defined(t.offsetAttribute)){var m=new Uint8Array(2*f);if(t.offsetAttribute===g.GeometryOffsetAttribute.TOP)m=g.arrayFill(m,1,0,f);else{var v=t.offsetAttribute===g.GeometryOffsetAttribute.NONE?0:1;m=g.arrayFill(m,v)}s.applyOffset=new u.GeometryAttribute({componentDatatype:d.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:m})}var A=l.length,E=h.IndexDatatype.createTypedArray(b.length/3,2*(A+o.length));E.set(l);var C,G,P=A;for(c=0;c<A;c+=2){var w=l[c],L=l[c+1];E[P++]=w+f,E[P++]=L+f}for(c=0;c<o.length;c++)G=(C=o[c])+f,E[P++]=C,E[P++]=G;return{attributes:s,indices:E}}(m);else if((l=D(T.CorridorGeometryLibrary.computePositions(m),m.cornerType)).attributes.position.values=_.PolygonPipeline.scaleToGeodeticHeight(l.attributes.position.values,f,n),e.defined(t._offsetAttribute)){var v=l.attributes.position.values.length,A=new Uint8Array(v/3),E=t._offsetAttribute===g.GeometryOffsetAttribute.NONE?0:1;g.arrayFill(A,E),l.attributes.applyOffset=new u.GeometryAttribute({componentDatatype:d.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:A})}var C=l.attributes,G=o.BoundingSphere.fromVertices(C.position.values,void 0,3);return new u.Geometry({attributes:C,indices:l.indices,primitiveType:p.PrimitiveType.LINES,boundingSphere:G,offsetAttribute:t._offsetAttribute})}},function(t,i){return e.defined(i)&&(t=k.unpack(t,i)),t._ellipsoid=r.Ellipsoid.clone(t._ellipsoid),k.createGeometry(t)}}));