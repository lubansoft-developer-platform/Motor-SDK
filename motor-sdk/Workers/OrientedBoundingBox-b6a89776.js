define(["exports","./when-45f3d25d","./Check-34538dad","./Cartesian3-e69091b9","./Cartesian2-7a44370a","./BoundingSphere-e9924a3b","./Matrix4-c65e6a1b","./Rectangle-c7d55cfa","./Plane-18e7e6e4","./EllipsoidTangentPlane-3ecdd617"],(function(a,e,t,r,n,i,s,o,d,C){"use strict";function u(a,t){this.center=r.Cartesian3.clone(e.defaultValue(a,r.Cartesian3.ZERO)),this.halfAxes=s.Matrix3.clone(e.defaultValue(t,s.Matrix3.ZERO))}u.packedLength=r.Cartesian3.packedLength+s.Matrix3.packedLength,u.pack=function(a,n,i){return t.Check.typeOf.object("value",a),t.Check.defined("array",n),i=e.defaultValue(i,0),r.Cartesian3.pack(a.center,n,i),s.Matrix3.pack(a.halfAxes,n,i+r.Cartesian3.packedLength),n},u.unpack=function(a,n,i){return t.Check.defined("array",a),n=e.defaultValue(n,0),e.defined(i)||(i=new u),r.Cartesian3.unpack(a,n,i.center),s.Matrix3.unpack(a,n+r.Cartesian3.packedLength,i.halfAxes),i};var c=new r.Cartesian3,l=new r.Cartesian3,h=new r.Cartesian3,f=new r.Cartesian3,m=new r.Cartesian3,x=new r.Cartesian3,p=new s.Matrix3,M={unitary:new s.Matrix3,diagonal:new s.Matrix3};u.fromPoints=function(a,t){if(e.defined(t)||(t=new u),!e.defined(a)||0===a.length)return t.halfAxes=s.Matrix3.ZERO,t.center=r.Cartesian3.ZERO,t;var n,i=a.length,o=r.Cartesian3.clone(a[0],c);for(n=1;n<i;n++)r.Cartesian3.add(o,a[n],o);var d=1/i;r.Cartesian3.multiplyByScalar(o,d,o);var C,w=0,g=0,b=0,v=0,y=0,O=0;for(n=0;n<i;n++)C=r.Cartesian3.subtract(a[n],o,l),w+=C.x*C.x,g+=C.x*C.y,b+=C.x*C.z,v+=C.y*C.y,y+=C.y*C.z,O+=C.z*C.z;w*=d,g*=d,b*=d,v*=d,y*=d,O*=d;var E=p;E[0]=w,E[1]=g,E[2]=b,E[3]=g,E[4]=v,E[5]=y,E[6]=b,E[7]=y,E[8]=O;var P=s.Matrix3.computeEigenDecomposition(E,M),N=s.Matrix3.clone(P.unitary,t.halfAxes),A=s.Matrix3.getColumn(N,0,f),R=s.Matrix3.getColumn(N,1,m),T=s.Matrix3.getColumn(N,2,x),I=-Number.MAX_VALUE,D=-Number.MAX_VALUE,L=-Number.MAX_VALUE,S=Number.MAX_VALUE,z=Number.MAX_VALUE,q=Number.MAX_VALUE;for(n=0;n<i;n++)C=a[n],I=Math.max(r.Cartesian3.dot(A,C),I),D=Math.max(r.Cartesian3.dot(R,C),D),L=Math.max(r.Cartesian3.dot(T,C),L),S=Math.min(r.Cartesian3.dot(A,C),S),z=Math.min(r.Cartesian3.dot(R,C),z),q=Math.min(r.Cartesian3.dot(T,C),q);A=r.Cartesian3.multiplyByScalar(A,.5*(S+I),A),R=r.Cartesian3.multiplyByScalar(R,.5*(z+D),R),T=r.Cartesian3.multiplyByScalar(T,.5*(q+L),T);var B=r.Cartesian3.add(A,R,t.center);r.Cartesian3.add(B,T,B);var U=h;return U.x=I-S,U.y=D-z,U.z=L-q,r.Cartesian3.multiplyByScalar(U,.5,U),s.Matrix3.multiplyByScale(t.halfAxes,U,t.halfAxes),t};var w=new r.Cartesian3,g=new r.Cartesian3;function b(a,n,i,o,d,C,c,l,h,f,m){if(!e.defined(d)||!e.defined(C)||!e.defined(c)||!e.defined(l)||!e.defined(h)||!e.defined(f))throw new t.DeveloperError("all extents (minimum/maximum X/Y/Z) are required.");e.defined(m)||(m=new u);var x=m.halfAxes;s.Matrix3.setColumn(x,0,n,x),s.Matrix3.setColumn(x,1,i,x),s.Matrix3.setColumn(x,2,o,x);var p=w;p.x=(d+C)/2,p.y=(c+l)/2,p.z=(h+f)/2;var M=g;M.x=(C-d)/2,M.y=(l-c)/2,M.z=(f-h)/2;var b=m.center;return p=s.Matrix3.multiplyByVector(x,p,p),r.Cartesian3.add(a,p,b),s.Matrix3.multiplyByScale(x,M,x),m}var v=new n.Cartographic,y=new r.Cartesian3,O=new n.Cartographic,E=new n.Cartographic,P=new n.Cartographic,N=new n.Cartographic,A=new n.Cartographic,R=new r.Cartesian3,T=new r.Cartesian3,I=new r.Cartesian3,D=new r.Cartesian3,L=new r.Cartesian3,S=new n.Cartesian2,z=new n.Cartesian2,q=new n.Cartesian2,B=new n.Cartesian2,U=new n.Cartesian2,V=new r.Cartesian3,k=new r.Cartesian3,_=new r.Cartesian3,W=new r.Cartesian3,X=new n.Cartesian2,j=new r.Cartesian3,Z=new r.Cartesian3,G=new r.Cartesian3,Y=new d.Plane(r.Cartesian3.UNIT_X,0);u.fromRectangle=function(a,i,s,u,c){if(!e.defined(a))throw new t.DeveloperError("rectangle is required");if(a.width<0||a.width>r.CesiumMath.TWO_PI)throw new t.DeveloperError("Rectangle width must be between 0 and 2*pi");if(a.height<0||a.height>r.CesiumMath.PI)throw new t.DeveloperError("Rectangle height must be between 0 and pi");if(e.defined(u)&&!r.CesiumMath.equalsEpsilon(u.radii.x,u.radii.y,r.CesiumMath.EPSILON15))throw new t.DeveloperError("Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)");var l,h,f,m,x,p,M;if(i=e.defaultValue(i,0),s=e.defaultValue(s,0),u=e.defaultValue(u,n.Ellipsoid.WGS84),a.width<=r.CesiumMath.PI){var w=o.Rectangle.center(a,v),g=u.cartographicToCartesian(w,y),F=new C.EllipsoidTangentPlane(g,u);M=F.plane;var H=w.longitude,J=a.south<0&&a.north>0?0:w.latitude,K=n.Cartographic.fromRadians(H,a.north,s,O),Q=n.Cartographic.fromRadians(a.west,a.north,s,E),$=n.Cartographic.fromRadians(a.west,J,s,P),aa=n.Cartographic.fromRadians(a.west,a.south,s,N),ea=n.Cartographic.fromRadians(H,a.south,s,A),ta=u.cartographicToCartesian(K,R),ra=u.cartographicToCartesian(Q,T),na=u.cartographicToCartesian($,I),ia=u.cartographicToCartesian(aa,D),sa=u.cartographicToCartesian(ea,L),oa=F.projectPointToNearestOnPlane(ta,S),da=F.projectPointToNearestOnPlane(ra,z),Ca=F.projectPointToNearestOnPlane(na,q),ua=F.projectPointToNearestOnPlane(ia,B),ca=F.projectPointToNearestOnPlane(sa,U);return l=Math.min(da.x,Ca.x,ua.x),h=-l,m=Math.max(da.y,oa.y),f=Math.min(ua.y,ca.y),Q.height=aa.height=i,ra=u.cartographicToCartesian(Q,T),ia=u.cartographicToCartesian(aa,D),x=Math.min(d.Plane.getPointDistance(M,ra),d.Plane.getPointDistance(M,ia)),p=s,b(F.origin,F.xAxis,F.yAxis,F.zAxis,l,h,f,m,x,p,c)}var la=a.south>0,ha=a.north<0,fa=la?a.south:ha?a.north:0,ma=o.Rectangle.center(a,v).longitude,xa=r.Cartesian3.fromRadians(ma,fa,s,u,V);xa.z=0;var pa=Math.abs(xa.x)<r.CesiumMath.EPSILON10&&Math.abs(xa.y)<r.CesiumMath.EPSILON10,Ma=pa?r.Cartesian3.UNIT_X:r.Cartesian3.normalize(xa,k),wa=r.Cartesian3.UNIT_Z,ga=r.Cartesian3.cross(Ma,wa,_);M=d.Plane.fromPointNormal(xa,Ma,Y);var ba=r.Cartesian3.fromRadians(ma+r.CesiumMath.PI_OVER_TWO,fa,s,u,W);h=r.Cartesian3.dot(d.Plane.projectPointOntoPlane(M,ba,X),ga),l=-h,m=r.Cartesian3.fromRadians(0,a.north,ha?i:s,u,j).z,f=r.Cartesian3.fromRadians(0,a.south,la?i:s,u,Z).z;var va=r.Cartesian3.fromRadians(a.east,fa,s,u,G);return x=d.Plane.getPointDistance(M,va),p=0,b(xa,ga,wa,Ma,l,h,f,m,x,p,c)},u.clone=function(a,t){if(e.defined(a))return e.defined(t)?(r.Cartesian3.clone(a.center,t.center),s.Matrix3.clone(a.halfAxes,t.halfAxes),t):new u(a.center,a.halfAxes)},u.intersectPlane=function(a,n){if(!e.defined(a))throw new t.DeveloperError("box is required.");if(!e.defined(n))throw new t.DeveloperError("plane is required.");var o=a.center,d=n.normal,C=a.halfAxes,u=d.x,c=d.y,l=d.z,h=Math.abs(u*C[s.Matrix3.COLUMN0ROW0]+c*C[s.Matrix3.COLUMN0ROW1]+l*C[s.Matrix3.COLUMN0ROW2])+Math.abs(u*C[s.Matrix3.COLUMN1ROW0]+c*C[s.Matrix3.COLUMN1ROW1]+l*C[s.Matrix3.COLUMN1ROW2])+Math.abs(u*C[s.Matrix3.COLUMN2ROW0]+c*C[s.Matrix3.COLUMN2ROW1]+l*C[s.Matrix3.COLUMN2ROW2]),f=r.Cartesian3.dot(d,o)+n.distance;return f<=-h?i.Intersect.OUTSIDE:f>=h?i.Intersect.INSIDE:i.Intersect.INTERSECTING};var F=new r.Cartesian3,H=new r.Cartesian3,J=new r.Cartesian3,K=new r.Cartesian3;u.distanceSquaredTo=function(a,n){if(!e.defined(a))throw new t.DeveloperError("box is required.");if(!e.defined(n))throw new t.DeveloperError("cartesian is required.");var i=r.Cartesian3.subtract(n,a.center,w),o=a.halfAxes,d=s.Matrix3.getColumn(o,0,F),C=s.Matrix3.getColumn(o,1,H),u=s.Matrix3.getColumn(o,2,J),c=r.Cartesian3.magnitude(d),l=r.Cartesian3.magnitude(C),h=r.Cartesian3.magnitude(u);r.Cartesian3.normalize(d,d),r.Cartesian3.normalize(C,C),r.Cartesian3.normalize(u,u);var f=K;f.x=r.Cartesian3.dot(i,d),f.y=r.Cartesian3.dot(i,C),f.z=r.Cartesian3.dot(i,u);var m,x=0;return f.x<-c?(m=f.x+c,x+=m*m):f.x>c&&(m=f.x-c,x+=m*m),f.y<-l?(m=f.y+l,x+=m*m):f.y>l&&(m=f.y-l,x+=m*m),f.z<-h?(m=f.z+h,x+=m*m):f.z>h&&(m=f.z-h,x+=m*m),x};var Q=new r.Cartesian3,$=new r.Cartesian3;u.computePlaneDistances=function(a,n,o,d){if(!e.defined(a))throw new t.DeveloperError("box is required.");if(!e.defined(n))throw new t.DeveloperError("position is required.");if(!e.defined(o))throw new t.DeveloperError("direction is required.");e.defined(d)||(d=new i.Interval);var C=Number.POSITIVE_INFINITY,u=Number.NEGATIVE_INFINITY,c=a.center,l=a.halfAxes,h=s.Matrix3.getColumn(l,0,F),f=s.Matrix3.getColumn(l,1,H),m=s.Matrix3.getColumn(l,2,J),x=r.Cartesian3.add(h,f,Q);r.Cartesian3.add(x,m,x),r.Cartesian3.add(x,c,x);var p=r.Cartesian3.subtract(x,n,$),M=r.Cartesian3.dot(o,p);return C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.add(c,h,x),r.Cartesian3.add(x,f,x),r.Cartesian3.subtract(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(o,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.add(c,h,x),r.Cartesian3.subtract(x,f,x),r.Cartesian3.add(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(o,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.add(c,h,x),r.Cartesian3.subtract(x,f,x),r.Cartesian3.subtract(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(o,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.subtract(c,h,x),r.Cartesian3.add(x,f,x),r.Cartesian3.add(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(o,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.subtract(c,h,x),r.Cartesian3.add(x,f,x),r.Cartesian3.subtract(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(o,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.subtract(c,h,x),r.Cartesian3.subtract(x,f,x),r.Cartesian3.add(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(o,p),C=Math.min(M,C),u=Math.max(M,u),r.Cartesian3.subtract(c,h,x),r.Cartesian3.subtract(x,f,x),r.Cartesian3.subtract(x,m,x),r.Cartesian3.subtract(x,n,p),M=r.Cartesian3.dot(o,p),C=Math.min(M,C),u=Math.max(M,u),d.start=C,d.stop=u,d};var aa=new i.BoundingSphere;u.isOccluded=function(a,r){if(!e.defined(a))throw new t.DeveloperError("box is required.");if(!e.defined(r))throw new t.DeveloperError("occluder is required.");var n=i.BoundingSphere.fromOrientedBoundingBox(a,aa);return!r.isBoundingSphereVisible(n)},u.prototype.intersectPlane=function(a){return u.intersectPlane(this,a)},u.prototype.distanceSquaredTo=function(a){return u.distanceSquaredTo(this,a)},u.prototype.computePlaneDistances=function(a,e,t){return u.computePlaneDistances(this,a,e,t)},u.prototype.isOccluded=function(a){return u.isOccluded(this,a)},u.equals=function(a,t){return a===t||e.defined(a)&&e.defined(t)&&r.Cartesian3.equals(a.center,t.center)&&s.Matrix3.equals(a.halfAxes,t.halfAxes)},u.prototype.clone=function(a){return u.clone(this,a)},u.prototype.equals=function(a){return u.equals(this,a)};var ea=new r.Cartesian3;u.prototype.intersectRay=function(a){var e=i.BoundingSphere.fromOrientedBoundingBox(this,aa),t=e.center,n=r.Cartesian3.subtract(t,a.origin,ea),s=r.Cartesian3.magnitude(r.Cartesian3.cross(n,a.direction,ea));return s<=e.radius},a.OrientedBoundingBox=u}));